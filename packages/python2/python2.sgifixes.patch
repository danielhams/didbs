diff -u -r -w Python-2.7.15/Include/pyport.h Python-2.7.15-patched/Include/pyport.h
--- Python-2.7.15/Include/pyport.h	2018-04-29 23:47:33.000000000 +0000
+++ Python-2.7.15-patched/Include/pyport.h	2019-02-08 18:08:03.115566840 +0000
@@ -13,6 +13,10 @@
 #include <stdint.h>
 #endif
 
+#if defined(__sgi)
+#include <sys/fpu.h>
+#endif
+
 /**************************************************************************
 Symbols and macros to supply platform-independent interfaces to basic
 C language & library operations whose spellings vary across platforms.
@@ -586,6 +590,24 @@
     } while (0)
 #endif
 
+#if defined(__sgi)
+#define HAVE_PY_SET_53BIT_PRECISION 1
+#define _Py_SET_53BIT_PRECISION_HEADER \
+  union fpc_csr old_csr, new_csr
+#define _Py_SET_53BIT_PRECISION_START \
+  do { \
+    old_csr.fc_word = get_fpc_csr();   \
+    new_csr.fc_word = old_csr.fc_word; \
+    new_csr.fc_struct.flush=0; \
+    new_csr.fc_struct.rounding_mode=ROUND_TO_NEAREST; \
+    set_fpc_csr(new_csr.fc_word); \
+  } while (0)
+#define _Py_SET_53BIT_PRECISION_END \
+  do { \
+    set_fpc_csr(old_csr.fc_word); \
+  } while (0)
+#endif
+
 /* default definitions are empty */
 #ifndef HAVE_PY_SET_53BIT_PRECISION
 #define _Py_SET_53BIT_PRECISION_HEADER
diff -u -r -w Python-2.7.15/Lib/multiprocessing/__init__.py Python-2.7.15-patched/Lib/multiprocessing/__init__.py
--- Python-2.7.15/Lib/multiprocessing/__init__.py	2018-04-29 23:47:33.000000000 +0000
+++ Python-2.7.15-patched/Lib/multiprocessing/__init__.py	2019-02-08 18:08:03.117682520 +0000
@@ -124,6 +124,12 @@
                 num = int(p.read())
         except ValueError:
             num = 0
+    elif 'irix' in sys.platform:
+        try:
+            with os.popen('/usr/sbin/sysconf NPROC_ONLN') as p:
+                num = int(p.read())
+        except (ValueError, OSError, AttributeError):
+            num = 0
     else:
         try:
             num = os.sysconf('SC_NPROCESSORS_ONLN')
diff -u -r -w Python-2.7.15/Modules/_ctypes/callproc.c Python-2.7.15-patched/Modules/_ctypes/callproc.c
--- Python-2.7.15/Modules/_ctypes/callproc.c	2018-04-29 23:47:33.000000000 +0000
+++ Python-2.7.15-patched/Modules/_ctypes/callproc.c	2019-02-08 18:08:16.665910080 +0000
@@ -488,7 +488,7 @@
 #ifdef MS_WIN32
             "<cparam '%c' (%I64d)>",
 #else
-            "<cparam '%c' (%qd)>",
+            "<cparam '%c' (%lld)>",
 #endif
             self->tag, self->value.q);
         break;
Only in Python-2.7.15-patched/Modules/_ctypes: callproc.c~
diff -u -r -w Python-2.7.15/configure.ac Python-2.7.15-patched/configure.ac
--- Python-2.7.15/configure.ac	2018-04-29 23:47:33.000000000 +0000
+++ Python-2.7.15-patched/configure.ac	2019-02-08 18:08:03.133127720 +0000
@@ -1106,7 +1106,7 @@
 	;;
 
     *)
-	OPT="-O"
+	OPT="-O0"
 	;;
     esac
 fi
@@ -4025,13 +4025,13 @@
 #include <sys/stat.h>
 
 int main(void) {
-  sem_t *a = sem_open("/autoconf", O_CREAT, S_IRUSR|S_IWUSR, 0);
+  sem_t *a = sem_open("/tmp/autoconf", O_CREAT, S_IRUSR|S_IWUSR, 0);
   if (a == SEM_FAILED) {
     perror("sem_open");
     return 1;
   }
   sem_close(a);
-  sem_unlink("/autoconf");
+  sem_unlink("/tmp/autoconf");
   return 0;
 }
 ]])],
@@ -4057,7 +4057,7 @@
 #include <sys/stat.h>
 
 int main(void){
-  sem_t *a = sem_open("/autocftw", O_CREAT, S_IRUSR|S_IWUSR, 0);
+  sem_t *a = sem_open("/tmp/autocftw", O_CREAT, S_IRUSR|S_IWUSR, 0);
   int count;
   int res;
   if(a==SEM_FAILED){
@@ -4067,7 +4067,7 @@
   }
   res = sem_getvalue(a, &count);
   sem_close(a);
-  sem_unlink("/autocftw");
+  sem_unlink("/tmp/autocftw");
   return res==-1 ? 1 : 0;
 }
 ]])],
