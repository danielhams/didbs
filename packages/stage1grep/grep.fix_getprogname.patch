diff -u -w -r grep-3.1/lib/getprogname.c grep-3.1-patched/lib/getprogname.c
--- grep-3.1/lib/getprogname.c	Mon Jan 16 17:29:13 2017
+++ grep-3.1-patched/lib/getprogname.c	Mon Jun 18 22:57:51 2018
@@ -1,5 +1,5 @@
 /* Program name management.
-   Copyright (C) 2016-2017 Free Software Foundation, Inc.
+   Copyright (C) 2016-2018 Free Software Foundation, Inc.
 
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -12,7 +12,7 @@
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */
 
 #include <config.h>
 
@@ -64,7 +64,7 @@
   /* https://www.gnu.org/software/libc/manual/html_node/Error-Messages.html */
   return last_component (program_invocation_name);
 # elif HAVE_GETEXECNAME                                     /* Solaris */
-  /* http://docs.oracle.com/cd/E19253-01/816-5168/6mbb3hrb1/index.html */
+  /* https://docs.oracle.com/cd/E19253-01/816-5168/6mbb3hrb1/index.html */
   const char *p = getexecname ();
   if (!p)
     p = "?";
@@ -74,7 +74,7 @@
   const char *p = __argv && __argv[0] ? __argv[0] : "?";
   return last_component (p);
 # elif HAVE_VAR___PROGNAME                                  /* OpenBSD, QNX */
-  /* http://man.openbsd.org/style.9 */
+  /* https://man.openbsd.org/style.9 */
   /* http://www.qnx.de/developers/docs/6.5.0/index.jsp?topic=%2Fcom.qnx.doc.neutrino_lib_ref%2Fp%2F__progname.html */
   /* Be careful to declare this only when we absolutely need it
      (OpenBSD 5.1), rather than when it's available.  Otherwise,
@@ -85,9 +85,8 @@
   return p && p[0] ? p : "?";
 # elif _AIX                                                 /* AIX */
   /* Idea by Bastien ROUCARIÃˆS,
-     http://lists.gnu.org/archive/html/bug-gnulib/2010-12/msg00095.html
-     Reference: http://
-   ibm.biz/knowctr#ssw_aix_53/com.ibm.aix.basetechref/doc/basetrf1/getprocs.htm
+     https://lists.gnu.org/r/bug-gnulib/2010-12/msg00095.html
+     Reference: https://www.ibm.com/support/knowledgecenter/en/ssw_aix_61/com.ibm.aix.basetrf1/getprocs.htm
   */
   static char *p;
   static int first = 1;
@@ -165,7 +164,7 @@
       if (ioctl_ok)
         {
           char *name = buf.pr_fname;
-          char *namesize = sizeof buf.pr_fname;
+          size_t namesize = sizeof buf.pr_fname;
           char *namenul = memchr (name, '\0', namesize);
           size_t namelen = namenul ? namenul - name : namesize;
           char *namecopy = malloc (namelen + 1);
@@ -183,3 +182,10 @@
 }
 
 #endif
+
+/*
+ * Hey Emacs!
+ * Local Variables:
+ * coding: utf-8
+ * End:
+ */
--- grep-3.1/lib/dfa.c Sat May 20 01:00:26 2017
+++ grep-3.1-patched/lib/dfa.c  Fri Jun 29 17:21:33 2018
@@ -2159,7 +2159,7 @@
   fprintf (stderr, "new state %zd\n nextpos:", i);
   for (state_num j = 0; j < s->nelem; j++)
     {
-      fprintf (stderr, " %zu:", s->elems[j].index);
+      fprintf (stderr, " %u:", s->elems[j].index);
       prtok (d->tokens[s->elems[j].index]);
     }
   fprintf (stderr, "\n context:");
@@ -2384,7 +2384,7 @@
   fprintf (stderr, "dfaanalyze:\n");
   for (size_t i = 0; i < d->tindex; ++i)
     {
-      fprintf (stderr, " %zu:", i);
+      fprintf (stderr, " %u:", i);
       prtok (d->tokens[i]);
     }
   putc ('\n', stderr);
@@ -2501,7 +2501,7 @@
         }
 #ifdef DEBUG
       /* ... balance the above nonsyntactic #ifdef goo...  */
-      fprintf (stderr, "node %zu:", i);
+      fprintf (stderr, "node %u:", i);
       prtok (d->tokens[i]);
       putc ('\n', stderr);
       fprintf (stderr,
@@ -2509,13 +2509,13 @@
       fprintf (stderr, " firstpos:");
       for (size_t j = stk[-1].nfirstpos; j-- > 0;)
         {
-          fprintf (stderr, " %zu:", firstpos[j].index);
+          fprintf (stderr, " %u:", firstpos[j].index);
           prtok (d->tokens[firstpos[j].index]);
         }
       fprintf (stderr, "\n lastpos:");
       for (size_t j = stk[-1].nlastpos; j-- > 0;)
         {
-          fprintf (stderr, " %zu:", lastpos[j].index);
+          fprintf (stderr, " %u:", lastpos[j].index);
           prtok (d->tokens[lastpos[j].index]);
         }
       putc ('\n', stderr);
@@ -2528,12 +2528,12 @@
         || d->tokens[i] == ANYCHAR || d->tokens[i] == MBCSET
         || d->tokens[i] >= CSET)
       {
-        fprintf (stderr, "follows(%zu:", i);
+        fprintf (stderr, "follows(%u:", i);
         prtok (d->tokens[i]);
         fprintf (stderr, "):");
         for (size_t j = d->follows[i].nelem; j-- > 0;)
           {
-            fprintf (stderr, " %zu:", d->follows[i].elems[j].index);
+            fprintf (stderr, " %u:", d->follows[i].elems[j].index);
             prtok (d->tokens[d->follows[i].elems[j].index]);
           }
         putc ('\n', stderr);
@@ -2769,7 +2769,7 @@
         }
 
 #ifdef DEBUG
-      fprintf (stderr, " nextpos %zu:", pos.index);
+      fprintf (stderr, " nextpos %u:", pos.index);
       prtok (d->tokens[pos.index]);
       fprintf (stderr, " of");
       for (size_t j = 0; j < NOTCHAR; j++)
diff -r -u -w grep-3.1/src/dfasearch.c grep-3.1-patched/src/dfasearch.c
--- grep-3.1/src/dfasearch.c Tue Jan 17 17:04:17 2017
+++ grep-3.1-patched/src/dfasearch.c Fri Jun 29 17:20:28 2018
@@ -160,7 +160,7 @@
           if (*pat_filename == '\0')
             error (0, 0, "%s", err);
           else
-            error (0, 0, "%s:%zu: %s", pat_filename, lineno, err);
+            error (0, 0, "%s:%u: %s", pat_filename, lineno, err);
           compilation_failed = true;
         }
       dc->pcount++;
