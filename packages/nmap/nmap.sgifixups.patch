diff -r -u -w nmap-7.70/Makefile.in nmap-7.70-patched/Makefile.in
--- nmap-7.70/Makefile.in	2018-03-10 03:09:32.000000000 +0000
+++ nmap-7.70-patched/Makefile.in	2018-08-05 14:47:07.449917680 +0000
@@ -133,7 +133,7 @@
 	$(OBJS) main.o
 	@echo Compiling nmap
 	rm -f $@
-	$(CXX) $(LDFLAGS) -o $@ $(OBJS) main.o $(LIBS)
+	$(CXX) $(LDFLAGS) -o $@ $(OBJS) main.o $(LIBS) -lm
 
 build-pcre: $(LIBPCREDIR)/Makefile
 	@echo Compiling libpcre; cd $(LIBPCREDIR) && $(MAKE)
Only in nmap-7.70-patched: Makefile.in.orig
diff -r -u -w nmap-7.70/TargetGroup.cc nmap-7.70-patched/TargetGroup.cc
--- nmap-7.70/TargetGroup.cc	2018-01-28 21:18:17.000000000 +0000
+++ nmap-7.70-patched/TargetGroup.cc	2018-08-05 14:47:07.454764800 +0000
@@ -670,7 +670,7 @@
 }
 
 void NetBlockIPv6Netmask::apply_netmask(int bits) {
-#ifdef _AIX
+#if defined(_AIX) || defined(__sgi)
   const struct in6_addr zeros = { { { 0x00, 0x00, 0x00, 0x00 } } };
   const struct in6_addr ones = { { { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff } } };
 #else
Only in nmap-7.70-patched: TargetGroup.cc.orig
diff -r -u -w nmap-7.70/liblinear/Makefile nmap-7.70-patched/liblinear/Makefile
--- nmap-7.70/liblinear/Makefile	2011-09-23 22:15:09.000000000 +0000
+++ nmap-7.70-patched/liblinear/Makefile	2018-08-05 14:47:07.456627200 +0000
@@ -4,7 +4,7 @@
 LIBS = blas/blas.a
 SHVER = 1
 AR = ar
-RANLIB = ranlib
+RANLIB = true
 #LIBS = -lblas
 
 all: train predict
Only in nmap-7.70-patched/liblinear: Makefile.orig
diff -r -u -w nmap-7.70/liblinear/blas/Makefile nmap-7.70-patched/liblinear/blas/Makefile
--- nmap-7.70/liblinear/blas/Makefile	2012-01-08 21:21:22.000000000 +0000
+++ nmap-7.70-patched/liblinear/blas/Makefile	2018-08-05 14:47:53.315771520 +0000
@@ -1,5 +1,5 @@
 AR     = ar
-RANLIB = ranlib 
+RANLIB = :
 
 HEADERS = blas.h blas.h blasp.h
 FILES = dnrm2.o daxpy.o ddot.o dscal.o 
diff -r -u -w nmap-7.70/liblua/Makefile nmap-7.70-patched/liblua/Makefile
--- nmap-7.70/liblua/Makefile	2016-07-02 18:02:27.000000000 +0000
+++ nmap-7.70-patched/liblua/Makefile	2018-08-05 14:47:07.458831440 +0000
@@ -7,12 +7,14 @@
 PLAT= none
 
 CC= gcc -std=gnu99
-CFLAGS= -O2 -Wall -Wextra -DLUA_COMPAT_5_2 $(SYSCFLAGS) $(MYCFLAGS)
+#CFLAGS= -O2 -Wall -Wextra -DLUA_COMPAT_5_2 $(SYSCFLAGS) $(MYCFLAGS)
+CFLAGS= -O2 -Wall -DLUA_COMPAT_5_2 $(SYSCFLAGS) $(MYCFLAGS)
 LDFLAGS= $(SYSLDFLAGS) $(MYLDFLAGS)
 LIBS= -lm $(SYSLIBS) $(MYLIBS)
 
 AR= ar rcu
-RANLIB= ranlib
+#RANLIB= ranlib
+RANLIB= :
 RM= rm -f
 
 SYSCFLAGS=
Only in nmap-7.70-patched/liblua: Makefile.orig
diff -r -u -w nmap-7.70/liblua/luaconf.h nmap-7.70-patched/liblua/luaconf.h
--- nmap-7.70/liblua/luaconf.h	2016-07-02 18:02:27.000000000 +0000
+++ nmap-7.70-patched/liblua/luaconf.h	2018-08-05 14:47:07.462175760 +0000
@@ -33,7 +33,7 @@
 ** ensure that all software connected to Lua will be compiled with the
 ** same configuration.
 */
-/* #define LUA_32BITS */
+#define LUA_32BITS
 
 
 /*
Only in nmap-7.70-patched/liblua: luaconf.h.orig
diff -r -u -w nmap-7.70/libnetutil/netutil.cc nmap-7.70-patched/libnetutil/netutil.cc
--- nmap-7.70/libnetutil/netutil.cc	2018-01-28 21:18:17.000000000 +0000
+++ nmap-7.70-patched/libnetutil/netutil.cc	2018-08-05 14:47:07.479469440 +0000
@@ -3810,7 +3810,7 @@
   p = realloc(msg->msg_control, msg->msg_controllen + CMSG_SPACE(len));
   if (p == NULL)
     return -1;
-  msg->msg_control = p;
+  msg->msg_control = (caddr_t)p;
 
   cm = (struct cmsghdr *) ((char *) msg->msg_control + msg->msg_controllen);
   msg->msg_controllen += CMSG_SPACE(len);
@@ -3894,13 +3894,15 @@
   n = -1;
 
   /* Set up sendmsg data structure. iov is filled in below. */
-  msg.msg_name = (void *) dst;
+  msg.msg_name = (caddr_t) dst;
   msg.msg_namelen = sizeof(*dst);
   msg.msg_iov = &iov;
   msg.msg_iovlen = 1;
   msg.msg_control = NULL;
   msg.msg_controllen = 0;
+#if !defined(__sgi)
   msg.msg_flags = 0;
+#endif
 
   if (packetlen < sizeof(*hdr))
     return -1;
Only in nmap-7.70-patched/libnetutil: netutil.cc.orig
diff -r -u -w nmap-7.70/libpcap/config.h.in nmap-7.70-patched/libpcap/config.h.in
--- nmap-7.70/libpcap/config.h.in	2015-05-01 21:24:47.000000000 +0000
+++ nmap-7.70-patched/libpcap/config.h.in	2018-08-05 14:47:07.482068080 +0000
@@ -226,9 +226,6 @@
 /* path for device for USB sniffing */
 #undef LINUX_USB_MON_DEV
 
-/* if we need a pcap_parse wrapper around yyparse */
-#undef NEED_YYPARSE_WRAPPER
-
 /* Define to 1 if netinet/ether.h declares `ether_hostton' */
 #undef NETINET_ETHER_H_DECLARES_ETHER_HOSTTON
 
Only in nmap-7.70-patched/libpcap: config.h.in.orig
diff -r -u -w nmap-7.70/nbase/nbase.h nmap-7.70-patched/nbase/nbase.h
--- nmap-7.70/nbase/nbase.h	2018-02-20 17:37:47.000000000 +0000
+++ nmap-7.70-patched/nbase/nbase.h	2018-08-05 14:47:07.485900640 +0000
@@ -231,7 +231,9 @@
 #undef NDEBUG
 
 /* Integer types */
+#if !defined(__sgi)
 #include <stdint.h>
+#endif
 typedef uint8_t u8;
 typedef int8_t s8;
 typedef uint16_t u16;
Only in nmap-7.70-patched/nbase: nbase.h.orig
diff -r -u -w nmap-7.70/nbase/nbase_addrset.c nmap-7.70-patched/nbase/nbase_addrset.c
--- nmap-7.70/nbase/nbase_addrset.c	2018-01-28 21:18:17.000000000 +0000
+++ nmap-7.70-patched/nbase/nbase_addrset.c	2018-08-05 14:47:07.490451600 +0000
@@ -134,6 +134,12 @@
 #include "nbase.h"
 #include "nbase_addrset.h"
 
+#if defined(__sgi)
+#include <sys/types.h>
+#include <sys/socket.h>
+#include <netdb.h>
+#endif
+
 /* A fancy logging system to allow this file to take advantage of different logging
    systems used by various programs */
 
@@ -235,10 +241,14 @@
 }
 
 /* This is an address family-agnostic version of inet_ntop. */
-static char *address_to_string(const struct sockaddr *sa, size_t sa_len,
+#if defined(__sgi)
+static char *address_to_string(const struct sockaddr *sa, socklen_t dsa_len, char *buf, socklen_t len)
+#else
+static char *address_to_string(const struct sockaddr *sa, size_t dsa_len,
                                char *buf, size_t len)
+#endif
 {
-    getnameinfo(sa, sa_len, buf, len, NULL, 0, NI_NUMERICHOST);
+    getnameinfo(sa, dsa_len, buf, len, NULL, 0, NI_NUMERICHOST);
 
     return buf;
 }
Only in nmap-7.70-patched/nbase: nbase_addrset.c.orig
diff -r -u -w nmap-7.70/ncat/ncat_posix.c nmap-7.70-patched/ncat/ncat_posix.c
--- nmap-7.70/ncat/ncat_posix.c	2018-01-28 21:18:17.000000000 +0000
+++ nmap-7.70-patched/ncat/ncat_posix.c	2018-08-05 14:47:07.495131840 +0000
@@ -133,6 +133,70 @@
 #include "ncat_lua.h"
 #endif
 
+#if defined(__sgi)
+
+int setenv(const char *name, const char *value, int replace)
+{
+  int out;
+  size_t namelen, valuelen;
+  char *envstr;
+
+  if (!name || strchr(name, '=') || !value) {
+    errno = EINVAL;
+    return -1;
+  }
+  if (!replace) {
+    char *oldval = NULL;
+    oldval = getenv(name);
+    if (oldval) return 0;
+  }
+
+  namelen = strlen(name);
+  valuelen = strlen(value);
+  envstr = malloc(namelen + valuelen + 2);
+  if (!envstr) {
+    errno = ENOMEM;
+    return -1;
+  }
+
+  memcpy(envstr, name, namelen);
+  envstr[namelen] = '=';
+  memcpy(envstr + namelen + 1, value, valuelen);
+  envstr[namelen + valuelen + 1] = 0;
+
+  out = putenv(envstr);
+  /* putenv(3) makes the argument string part of the environment,
+   * and changing that string modifies the environment --- which
+   * means we do not own that storage anymore.  Do not free
+   * envstr.
+   */
+
+  return out;
+}
+
+void unsetenv(const char *name)
+{
+  extern char **environ;
+  int src,dst;
+  size_t nmln;
+  nmln = strlen(name);
+  for( src = dst = 0; environ[src]; ++src) {
+    size_t enln;
+    enln = strlen(environ[src]);
+    if( enln > nmln ) {
+      if( 0 == strncmp( environ[src], name, nmln )
+	  && '=' == environ[src][nmln])
+	{
+	  continue;
+	}
+    }
+    environ[dst] = environ[src];
+    ++dst;
+  }
+  environ[dst] = NULL;
+}
+#endif
+
 char **cmdline_split(const char *cmdexec);
 
 /* fork and exec a child process with netexec. Close the given file descriptor
Only in nmap-7.70-patched/ncat: ncat_posix.c.orig
diff -r -u -w nmap-7.70/ncat/util.c nmap-7.70-patched/ncat/util.c
--- nmap-7.70/ncat/util.c	2018-01-28 21:18:17.000000000 +0000
+++ nmap-7.70-patched/ncat/util.c	2018-08-05 14:47:07.500863760 +0000
@@ -151,6 +151,11 @@
 #include <unistd.h>
 #endif
 
+#if defined(__sgi)
+#include <sys/types.h>
+#include <sys/socket.h>
+#endif
+
 /* safely add 2 size_t */
 size_t sadd(size_t l, size_t r)
 {
@@ -425,7 +430,11 @@
 int do_listen(int type, int proto, const union sockaddr_u *srcaddr_u)
 {
     int sock = 0, option_on = 1;
-    size_t sa_len;
+#if defined(__sgi)
+    socklen_t dsa_len;
+#else
+    size_t dsa_len;
+#endif
 
     if (type != SOCK_STREAM && type != SOCK_DGRAM)
         return -1;
@@ -461,29 +470,29 @@
     switch(srcaddr_u->storage.ss_family) {
 #ifdef HAVE_SYS_UN_H
       case AF_UNIX:
-        sa_len = SUN_LEN(&srcaddr_u->un);
+        dsa_len = SUN_LEN(&srcaddr_u->un);
         break;
 #endif
 #ifdef HAVE_SOCKADDR_SA_LEN
       default:
-        sa_len = srcaddr_u->sockaddr.sa_len;
+        dsa_len = srcaddr_u->sockaddr.sa_len;
         break;
 #else
       case AF_INET:
-        sa_len = sizeof (struct sockaddr_in);
+        dsa_len = sizeof (struct sockaddr_in);
         break;
 #ifdef AF_INET6
       case AF_INET6:
-        sa_len = sizeof (struct sockaddr_in6);
+        dsa_len = sizeof (struct sockaddr_in6);
         break;
 #endif
       default:
-        sa_len = sizeof(*srcaddr_u);
+        dsa_len = sizeof(*srcaddr_u);
         break;
 #endif
     }
 
-    if (bind(sock, &srcaddr_u->sockaddr, sa_len) < 0) {
+    if (bind(sock, &srcaddr_u->sockaddr, dsa_len) < 0) {
 #ifdef HAVE_SYS_UN_H
         if (srcaddr_u->storage.ss_family == AF_UNIX)
             bye("bind to %s: %s.", srcaddr_u->un.sun_path,
@@ -524,14 +533,18 @@
     sock = inheritable_socket(targetaddrs->addr.storage.ss_family, type, 0);
 
     if (srcaddr.storage.ss_family != AF_UNSPEC) {
-        size_t sa_len;
+#if defined(__sgi)
+        socklen_t dsa_len;
+#else
+        size_t dsa_len;
+#endif
 
 #ifdef HAVE_SOCKADDR_SA_LEN
-        sa_len = srcaddr.sockaddr.sa_len;
+        dsa_len = srcaddr.sockaddr.sa_len;
 #else
-        sa_len = sizeof(srcaddr);
+        dsa_len = sizeof(srcaddr);
 #endif
-        if (bind(sock, &srcaddr.sockaddr, sa_len) < 0) {
+        if (bind(sock, &srcaddr.sockaddr, dsa_len) < 0) {
             bye("bind to %s:%hu: %s.", inet_socktop(&srcaddr),
                 inet_port(&srcaddr), socket_strerror(socket_errno()));
         }
Only in nmap-7.70-patched/ncat: util.c.orig
diff -r -u -w nmap-7.70/nping/Makefile.in nmap-7.70-patched/nping/Makefile.in
--- nmap-7.70/nping/Makefile.in	2016-08-16 10:31:59.000000000 +0000
+++ nmap-7.70-patched/nping/Makefile.in	2018-08-05 14:47:07.506147840 +0000
@@ -86,7 +86,7 @@
 $(TARGET): $(NBASEDIR)/libnbase.a $(NSOCKDIR)/src/libnsock.a ../libnetutil/libnetutil.a $(OBJS)
 	@echo Compiling nping
 	rm -f $@
-	$(CXX) $(LDFLAGS) -o $@ $(OBJS) $(LIBS)
+	$(CXX) $(LDFLAGS) -o $@ $(OBJS) $(LIBS) -lm
 	@echo Nping compiled successfully!
 
 
Only in nmap-7.70-patched/nping: Makefile.in.orig
diff -r -u -w nmap-7.70/nping/nping_config.h.in nmap-7.70-patched/nping/nping_config.h.in
--- nmap-7.70/nping/nping_config.h.in	2018-01-28 21:18:17.000000000 +0000
+++ nmap-7.70-patched/nping/nping_config.h.in	2018-08-05 14:47:07.509537840 +0000
@@ -1,239 +1,173 @@
-/***************************************************************************
- * nping_config.h.in -- Autoconf uses this template, combined with the     *
- * configure script knowledge about system capabilities, to build this     *
- * include file that lets nmap better understand system particulars.       *
- *                                                                         *
- ***********************IMPORTANT NMAP LICENSE TERMS************************
- *                                                                         *
- * The Nmap Security Scanner is (C) 1996-2018 Insecure.Com LLC ("The Nmap  *
- * Project"). Nmap is also a registered trademark of the Nmap Project.     *
- * This program is free software; you may redistribute and/or modify it    *
- * under the terms of the GNU General Public License as published by the   *
- * Free Software Foundation; Version 2 ("GPL"), BUT ONLY WITH ALL OF THE   *
- * CLARIFICATIONS AND EXCEPTIONS DESCRIBED HEREIN.  This guarantees your   *
- * right to use, modify, and redistribute this software under certain      *
- * conditions.  If you wish to embed Nmap technology into proprietary      *
- * software, we sell alternative licenses (contact sales@nmap.com).        *
- * Dozens of software vendors already license Nmap technology such as      *
- * host discovery, port scanning, OS detection, version detection, and     *
- * the Nmap Scripting Engine.                                              *
- *                                                                         *
- * Note that the GPL places important restrictions on "derivative works",  *
- * yet it does not provide a detailed definition of that term.  To avoid   *
- * misunderstandings, we interpret that term as broadly as copyright law   *
- * allows.  For example, we consider an application to constitute a        *
- * derivative work for the purpose of this license if it does any of the   *
- * following with any software or content covered by this license          *
- * ("Covered Software"):                                                   *
- *                                                                         *
- * o Integrates source code from Covered Software.                         *
- *                                                                         *
- * o Reads or includes copyrighted data files, such as Nmap's nmap-os-db   *
- * or nmap-service-probes.                                                 *
- *                                                                         *
- * o Is designed specifically to execute Covered Software and parse the    *
- * results (as opposed to typical shell or execution-menu apps, which will *
- * execute anything you tell them to).                                     *
- *                                                                         *
- * o Includes Covered Software in a proprietary executable installer.  The *
- * installers produced by InstallShield are an example of this.  Including *
- * Nmap with other software in compressed or archival form does not        *
- * trigger this provision, provided appropriate open source decompression  *
- * or de-archiving software is widely available for no charge.  For the    *
- * purposes of this license, an installer is considered to include Covered *
- * Software even if it actually retrieves a copy of Covered Software from  *
- * another source during runtime (such as by downloading it from the       *
- * Internet).                                                              *
- *                                                                         *
- * o Links (statically or dynamically) to a library which does any of the  *
- * above.                                                                  *
- *                                                                         *
- * o Executes a helper program, module, or script to do any of the above.  *
- *                                                                         *
- * This list is not exclusive, but is meant to clarify our interpretation  *
- * of derived works with some common examples.  Other people may interpret *
- * the plain GPL differently, so we consider this a special exception to   *
- * the GPL that we apply to Covered Software.  Works which meet any of     *
- * these conditions must conform to all of the terms of this license,      *
- * particularly including the GPL Section 3 requirements of providing      *
- * source code and allowing free redistribution of the work as a whole.    *
- *                                                                         *
- * As another special exception to the GPL terms, the Nmap Project grants  *
- * permission to link the code of this program with any version of the     *
- * OpenSSL library which is distributed under a license identical to that  *
- * listed in the included docs/licenses/OpenSSL.txt file, and distribute   *
- * linked combinations including the two.                                  *
- *                                                                         *
- * The Nmap Project has permission to redistribute Npcap, a packet         *
- * capturing driver and library for the Microsoft Windows platform.        *
- * Npcap is a separate work with it's own license rather than this Nmap    *
- * license.  Since the Npcap license does not permit redistribution        *
- * without special permission, our Nmap Windows binary packages which      *
- * contain Npcap may not be redistributed without special permission.      *
- *                                                                         *
- * Any redistribution of Covered Software, including any derived works,    *
- * must obey and carry forward all of the terms of this license, including *
- * obeying all GPL rules and restrictions.  For example, source code of    *
- * the whole work must be provided and free redistribution must be         *
- * allowed.  All GPL references to "this License", are to be treated as    *
- * including the terms and conditions of this license text as well.        *
- *                                                                         *
- * Because this license imposes special exceptions to the GPL, Covered     *
- * Work may not be combined (even as part of a larger work) with plain GPL *
- * software.  The terms, conditions, and exceptions of this license must   *
- * be included as well.  This license is incompatible with some other open *
- * source licenses as well.  In some cases we can relicense portions of    *
- * Nmap or grant special permissions to use it in other open source        *
- * software.  Please contact fyodor@nmap.org with any such requests.       *
- * Similarly, we don't incorporate incompatible open source software into  *
- * Covered Software without special permission from the copyright holders. *
- *                                                                         *
- * If you have any questions about the licensing restrictions on using     *
- * Nmap in other works, we are happy to help.  As mentioned above, we also *
- * offer an alternative license to integrate Nmap into proprietary         *
- * applications and appliances.  These contracts have been sold to dozens  *
- * of software vendors, and generally include a perpetual license as well  *
- * as providing support and updates.  They also fund the continued         *
- * development of Nmap.  Please email sales@nmap.com for further           *
- * information.                                                            *
- *                                                                         *
- * If you have received a written license agreement or contract for        *
- * Covered Software stating terms other than these, you may choose to use  *
- * and redistribute Covered Software under those terms instead of these.   *
- *                                                                         *
- * Source is provided to this software because we believe users have a     *
- * right to know exactly what a program is going to do before they run it. *
- * This also allows you to audit the software for security holes.          *
- *                                                                         *
- * Source code also allows you to port Nmap to new platforms, fix bugs,    *
- * and add new features.  You are highly encouraged to send your changes   *
- * to the dev@nmap.org mailing list for possible incorporation into the    *
- * main distribution.  By sending these changes to Fyodor or one of the    *
- * Insecure.Org development mailing lists, or checking them into the Nmap  *
- * source code repository, it is understood (unless you specify            *
- * otherwise) that you are offering the Nmap Project the unlimited,        *
- * non-exclusive right to reuse, modify, and relicense the code.  Nmap     *
- * will always be available Open Source, but this is important because     *
- * the inability to relicense code has caused devastating problems for     *
- * other Free Software projects (such as KDE and NASM).  We also           *
- * occasionally relicense the code to third parties as discussed above.    *
- * If you wish to specify special license conditions of your               *
- * contributions, just say so when you send them.                          *
- *                                                                         *
- * This program is distributed in the hope that it will be useful, but     *
- * WITHOUT ANY WARRANTY; without even the implied warranty of              *
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the Nmap      *
- * license file for more details (it's in a COPYING file included with     *
- * Nmap, and also available from https://svn.nmap.org/nmap/COPYING)        *
- *                                                                         *
- ***************************************************************************/
-
-/* $Id: $ */
-
-#ifndef CONFIG_H
-#define CONFIG_H
+/* nping_config.h.in.  Generated from configure.ac by autoheader.  */
 
-#undef PCAP_TIMEOUT_IGNORED
+/* Define if building universal (internal helper macro) */
+#undef AC_APPLE_UNIVERSAL_BUILD
 
-#undef HAVE_STRUCT_IP
+/* BSD/OS */
+#undef BSDI
 
-#undef HAVE_NANOSLEEP
+/* DEC Alpha */
+#undef DEC
 
-#undef HAVE_STRUCT_ICMP
+/* FreeBSD */
+#undef FREEBSD
 
+/* Define to 1 if you have the <inttypes.h> header file. */
+#undef HAVE_INTTYPES_H
+
+/* struct ip has ip_sum member */
 #undef HAVE_IP_IP_SUM
 
-#undef HAVE_SIGNAL
+/* Define to 1 if you have the `cfg' library (-lcfg). */
+#undef HAVE_LIBCFG
 
-#undef inline
+/* Define to 1 if you have the `crypt' library (-lcrypt). */
+#undef HAVE_LIBCRYPT
 
-#undef STDC_HEADERS
+/* Define to 1 if you have the `m' library (-lm). */
+#undef HAVE_LIBM
 
-#undef HAVE_UNISTD_H
+/* Define to 1 if you have the `nm' library (-lnm). */
+#undef HAVE_LIBNM
 
-#undef HAVE_STRING_H
+/* Define to 1 if you have the `odm' library (-lodm). */
+#undef HAVE_LIBODM
 
-#undef HAVE_GETOPT_H
+/* Have libpcap library */
+#undef HAVE_LIBPCAP
 
-#undef HAVE_STRINGS_H
+/* Define to 1 if you have the <memory.h> header file. */
+#undef HAVE_MEMORY_H
+
+/* Define to 1 if you have the <net/bpf.h> header file. */
+#undef HAVE_NET_BPF_H
+
+/* Have OpenSSL library */
+#undef HAVE_OPENSSL
 
+/* Define to 1 if you have the <pwd.h> header file. */
 #undef HAVE_PWD_H
 
-#undef HAVE_BSTRING_H
+/* ssignal function is accessible */
+#undef HAVE_SIGNAL
 
-#undef WORDS_BIGENDIAN
+/* struct sockaddr_in6 has sin6_len member */
+#undef HAVE_SOCKADDR_IN6_SIN6_LEN
 
-#undef HAVE_MEMORY_H
+/* struct sockaddr_in has sin_len member */
+#undef HAVE_SOCKADDR_IN_SIN_LEN
+
+/* struct sockaddr has sa_len member */
+#undef HAVE_SOCKADDR_SA_LEN
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#undef HAVE_STDINT_H
 
-/* both bzero() and memcpy() are used in the source */
-#undef HAVE_BZERO
-#undef HAVE_MEMCPY
+/* Define to 1 if you have the <stdlib.h> header file. */
+#undef HAVE_STDLIB_H
+
+/* Define to 1 if you have the `strerror' function. */
 #undef HAVE_STRERROR
 
-#undef HAVE_SYS_PARAM_H
+/* Define to 1 if you have the <strings.h> header file. */
+#undef HAVE_STRINGS_H
+
+/* Define to 1 if you have the <string.h> header file. */
+#undef HAVE_STRING_H
 
+/* Define to 1 if you have the <sys/ioccom.h> header file. */
+#undef HAVE_SYS_IOCCOM_H
+
+/* Define to 1 if you have the <sys/sockio.h> header file. */
 #undef HAVE_SYS_SOCKIO_H
 
+/* Define to 1 if you have the <sys/stat.h> header file. */
 #undef HAVE_SYS_STAT_H
 
-#undef HAVE_FCNTL_H
+/* Define to 1 if you have the <sys/time.h> header file. */
+#undef HAVE_SYS_TIME_H
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#undef HAVE_SYS_TYPES_H
 
+/* Define to 1 if you have the <termios.h> header file. */
 #undef HAVE_TERMIOS_H
 
-#undef HAVE_PCRE_H
+/* Define to 1 if you have the <unistd.h> header file. */
+#undef HAVE_UNISTD_H
 
-#undef HAVE_PCRE_PCRE_H
+/* HP-UX */
+#undef HPUX
 
-#undef BSD_NETWORKING
+/* */
+#undef IN_ADDR_DEEPSTRUCT
 
-#undef HAVE_STRCASESTR
+/* IRIX */
+#undef IRIX
 
-#undef IN_ADDR_DEEPSTRUCT
+/* Linux */
+#undef LINUX
 
-#undef HAVE_SOCKADDR_SA_LEN
+/* Apple OS X */
+#undef MACOSX
 
-#undef HAVE_SOCKADDR_IN_SIN_LEN
+/* NetBSD */
+#undef NETBSD
 
-#undef HAVE_SOCKADDR_IN6_SIN6_LEN
+/* OpenBSD */
+#undef OPENBSD
 
-#undef HAVE_NETINET_IF_ETHER_H
+/* Define to the address where bug reports for this package should be sent. */
+#undef PACKAGE_BUGREPORT
 
-#undef HAVE_OPENSSL
+/* Define to the full name of this package. */
+#undef PACKAGE_NAME
 
-#undef STUPID_SOLARIS_CHECKSUM_BUG
+/* Define to the full name and version of this package. */
+#undef PACKAGE_STRING
 
+/* Define to the one symbol short name of this package. */
+#undef PACKAGE_TARNAME
+
+/* Define to the home page for this package. */
+#undef PACKAGE_URL
+
+/* Define to the version of this package. */
+#undef PACKAGE_VERSION
+
+/* Sun/Oracle Solaris */
+#undef SOLARIS
+
+/* sprintf(9f) returns its first argument, not the number of characters
+   printed */
 #undef SPRINTF_RETURNS_STRING
 
-#undef TIME_WITH_SYS_TIME
-#undef HAVE_SYS_TIME_H
+/* Define to 1 if you have the ANSI C header files. */
+#undef STDC_HEADERS
 
-#undef recvfrom6_t
+/* */
+#undef STUPID_SOLARIS_CHECKSUM_BUG
 
-#undef NEED_USLEEP_PROTO
-#undef NEED_GETHOSTNAME_PROTO
+/* SunOS 4 */
+#undef SUNOS
 
-#ifdef NEED_USLEEP_PROTO
-#ifdef __cplusplus
-extern "C" int usleep (unsigned int);
-#endif
+/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
+   significant byte first (like Motorola and SPARC, unlike Intel). */
+#if defined AC_APPLE_UNIVERSAL_BUILD
+# if defined __BIG_ENDIAN__
+#  define WORDS_BIGENDIAN 1
 #endif
-
-#ifdef NEED_GETHOSTNAME_PROTO
-#ifdef __cplusplus
-extern "C" int gethostname (char *, unsigned int);
+#else
+# ifndef WORDS_BIGENDIAN
+#  undef WORDS_BIGENDIAN
 #endif
 #endif
 
-#undef DEC
-#undef LINUX
-#undef FREEBSD
-#undef OPENBSD
-#undef SOLARIS
-#undef SUNOS
-#undef BSDI
-#undef IRIX
-#undef HPUX
-#undef NETBSD
-#undef MACOSX
+/* C99-specified function identifier */
+#undef __func__
 
-#endif /* CONFIG_H */
+/* Define to `__inline__' or `__inline' if that's what the C compiler
+   calls it, or to nothing if 'inline' is not supported under any name.  */
+#ifndef __cplusplus
+#undef inline
+#endif
Only in nmap-7.70-patched/nping: nping_config.h.in.orig
diff -r -u -w nmap-7.70/nse_main.cc nmap-7.70-patched/nse_main.cc
--- nmap-7.70/nse_main.cc	2017-12-07 18:20:07.000000000 +0000
+++ nmap-7.70-patched/nse_main.cc	2018-08-05 14:47:07.514111040 +0000
@@ -791,7 +791,8 @@
 
     const lua_Number *version = lua_version(NULL);
     double major = (*version) / 100.0;
-    double minor = fmod(*version, 10.0);
+    double luaNumberAsDouble = *version;
+    double minor = std::fmod(luaNumberAsDouble, 10.0);
     if (o.debugging >= 1)
       log_write(LOG_STDOUT, "%s: Using Lua %.0f.%.0f.\n", SCRIPT_ENGINE, major, minor);
     if (*version < 503)
Only in nmap-7.70-patched: nse_main.cc.orig
diff -r -u -w nmap-7.70/nsock/src/error.h nmap-7.70-patched/nsock/src/error.h
--- nmap-7.70/nsock/src/error.h	2018-01-28 21:18:17.000000000 +0000
+++ nmap-7.70-patched/nsock/src/error.h	2018-08-05 14:47:07.516317760 +0000
@@ -82,10 +82,17 @@
 #define NORETURN
 #endif
 
+
+#if defined(__sgi)
+NORETURN void fatal(char *fmt, ...);
+
+NORETURN void pfatal(char *fmt, ...);
+#else
 NORETURN void fatal(char *fmt, ...)
   __attribute__ ((format (printf, 1, 2)));
 
 NORETURN void pfatal(char *fmt, ...)
   __attribute__ ((format (printf, 1, 2)));
+#endif
 
 #endif /* ERROR_H */
Only in nmap-7.70-patched/nsock/src: error.h.orig
diff -r -u -w nmap-7.70/output.h nmap-7.70-patched/output.h
--- nmap-7.70/output.h	2018-01-28 21:18:17.000000000 +0000
+++ nmap-7.70-patched/output.h	2018-08-05 14:47:07.519223040 +0000
@@ -203,8 +203,11 @@
 
 /* Write some information (printf style args) to the given log stream(s).
    Remember to watch out for format string bugs. */
+/*
 void log_write(int logt, const char *fmt, ...)
      __attribute__ ((format (printf, 2, 3)));
+*/
+void log_write(int logt, const char *fmt, ...);
 
 /* This is the workhorse of the logging functions.  Usually it is
    called through log_write(), but it can be called directly if you
Only in nmap-7.70-patched: output.h.orig
diff -r -u -w nmap-7.70/service_scan.cc nmap-7.70-patched/service_scan.cc
--- nmap-7.70/service_scan.cc	2018-02-12 04:36:43.000000000 +0000
+++ nmap-7.70-patched/service_scan.cc	2018-08-05 14:47:07.543502480 +0000
@@ -1272,7 +1272,7 @@
 
   portv = (tunnel == SERVICE_TUNNEL_SSL)? &probablesslports : &probableports;
 
-  if (find(portv->begin(), portv->end(), portno) == portv->end())
+  if (std::find(portv->begin(), portv->end(), portno) == portv->end())
     return false;
   return true;
 }
Only in nmap-7.70-patched: service_scan.cc.orig
diff -r -u -w nmap-7.70/xml.h nmap-7.70-patched/xml.h
--- nmap-7.70/xml.h	2018-01-28 21:18:17.000000000 +0000
+++ nmap-7.70-patched/xml.h	2018-08-05 14:47:07.863993200 +0000
@@ -132,9 +132,15 @@
 
 #include <stdarg.h>
 
+#if defined(__sgi)
+int xml_write_raw(const char *fmt, ...);
+int xml_write_escaped(const char *fmt, ...);
+int xml_write_escaped_v(const char *fmt, va_list va);
+#else
 int xml_write_raw(const char *fmt, ...) __attribute__ ((format (printf, 1, 2)));
 int xml_write_escaped(const char *fmt, ...) __attribute__ ((format (printf, 1, 2)));
 int xml_write_escaped_v(const char *fmt, va_list va) __attribute__ ((format (printf, 1, 0)));
+#endif
 
 int xml_start_document(const char *rootnode);
 
@@ -150,7 +156,11 @@
 int xml_start_tag(const char *name, const bool write = true);
 int xml_end_tag();
 
+#if defined(__sgi)
+int xml_attribute(const char *name, const char *fmt, ...);
+#else
 int xml_attribute(const char *name, const char *fmt, ...) __attribute__ ((format (printf, 2, 3)));
+#endif
 
 int xml_newline();
 
Only in nmap-7.70-patched: xml.h.orig
