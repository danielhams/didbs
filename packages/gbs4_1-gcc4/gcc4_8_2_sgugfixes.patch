diff -N -u -r -w gcc-4.8.2/fixincludes/Makefile.in gcc-4.8.2-patched/fixincludes/Makefile.in
--- gcc-4.8.2/fixincludes/Makefile.in	2013-01-04 12:49:55.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/Makefile.in	2019-08-06 12:58:55.280882560 +0000
@@ -1,6 +1,6 @@
 # Makefile for fixincludes.
 #
-#   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004, 2009, 2010, 2012
+#   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004, 2009, 2010
 #   Free Software Foundation, Inc.
 
 #This file is part of fixincludes.
@@ -66,7 +66,7 @@
 AUTOCONF = autoconf
 AUTOHEADER = autoheader
 ACLOCAL = aclocal
-ACLOCAL_AMFLAGS = -I .. -I ../config
+ACLOCAL_AMFLAGS = -I ../gcc -I .. -I ../config
 
 default : all
 
diff -N -u -r -w gcc-4.8.2/fixincludes/aclocal.m4 gcc-4.8.2-patched/fixincludes/aclocal.m4
--- gcc-4.8.2/fixincludes/aclocal.m4	2012-05-29 20:28:57.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/aclocal.m4	2019-08-06 12:58:55.371111200 +0000
@@ -12,6 +12,6 @@
 # PARTICULAR PURPOSE.
 
 m4_include([../config/acx.m4])
-m4_include([../config/mmap.m4])
 m4_include([../config/override.m4])
 m4_include([../config/warnings.m4])
+m4_include([../gcc/acinclude.m4])
diff -N -u -r -w gcc-4.8.2/fixincludes/check.tpl gcc-4.8.2-patched/fixincludes/check.tpl
--- gcc-4.8.2/fixincludes/check.tpl	2012-10-29 16:44:34.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/check.tpl	2019-08-06 12:58:55.379113920 +0000
@@ -99,7 +99,6 @@
 
 =]
 
-export TEST_MODE=true
 find . -type f | sed 's;^\./;;' | sort | ../../fixincl
 cd ${DESTDIR}
 
diff -N -u -r -w gcc-4.8.2/fixincludes/configure gcc-4.8.2-patched/fixincludes/configure
--- gcc-4.8.2/fixincludes/configure	2012-05-29 20:28:57.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/configure	2019-08-06 12:58:55.401218720 +0000
@@ -4715,8 +4715,7 @@
 	i?86-*-msdosdjgpp* | \
 	i?86-*-mingw32* | \
 	x86_64-*-mingw32* | \
-	*-*-beos* | \
-        *-*-*vms*)
+	*-*-beos* )
 		TARGET=twoprocess
 		;;
 
@@ -5222,7 +5221,7 @@
    # read() to the same fd.  The only system known to have a problem here
    # is VMS, where text files have record structure.
    case "$host_os" in
-     *vms* | ultrix*)
+     vms* | ultrix*)
         gcc_cv_func_mmap_file=no ;;
      *)
         gcc_cv_func_mmap_file=yes;;
@@ -5246,7 +5245,7 @@
    # Systems known to be in this category are Windows (all variants),
    # VMS, and Darwin.
    case "$host_os" in
-     *vms* | cygwin* | pe | mingw* | darwin* | ultrix* | hpux10* | hpux11.00)
+     vms* | cygwin* | pe | mingw* | darwin* | ultrix* | hpux10* | hpux11.00)
         gcc_cv_func_mmap_dev_zero=no ;;
      *)
         gcc_cv_func_mmap_dev_zero=yes;;
@@ -5303,7 +5302,7 @@
    # above for use of /dev/zero.
    # Systems known to be in this category are Windows, VMS, and SCO Unix.
    case "$host_os" in
-     *vms* | cygwin* | pe | mingw* | sco* | udk* )
+     vms* | cygwin* | pe | mingw* | sco* | udk* )
         gcc_cv_func_mmap_anon=no ;;
      *)
         gcc_cv_func_mmap_anon=yes;;
diff -N -u -r -w gcc-4.8.2/fixincludes/configure.ac gcc-4.8.2-patched/fixincludes/configure.ac
--- gcc-4.8.2/fixincludes/configure.ac	2012-05-29 20:28:57.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/configure.ac	2019-08-06 12:58:55.413079120 +0000
@@ -53,8 +53,7 @@
 	i?86-*-msdosdjgpp* | \
 	i?86-*-mingw32* | \
 	x86_64-*-mingw32* | \
-	*-*-beos* | \
-        *-*-*vms*)
+	*-*-beos* )
 		TARGET=twoprocess
 		;;
 
@@ -96,7 +95,7 @@
 AC_C_CONST
 
 # Checks for library functions.
-GCC_AC_FUNC_MMAP_BLACKLIST
+gcc_AC_FUNC_MMAP_BLACKLIST
 
 AC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])
 AC_ARG_ENABLE(maintainer-mode,
diff -N -u -r -w gcc-4.8.2/fixincludes/fixinc.in gcc-4.8.2-patched/fixincludes/fixinc.in
--- gcc-4.8.2/fixincludes/fixinc.in	2012-10-28 21:42:48.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/fixinc.in	2019-08-06 12:58:55.444851440 +0000
@@ -128,22 +128,6 @@
 
 # # # # # # # # # # # # # # # # # # # # #
 #
-#  Check to see if the machine_name fix needs to be disabled.
-#
-#  On some platforms, machine_name doesn't work properly and
-#  breaks some of the header files.  Since everything works
-#  properly without it, just wipe the macro list to
-#  disable the fix.
-
-case "${target_canonical}" in
-    *-*-vxworks*)
-	test -f ${MACRO_LIST} &&  echo > ${MACRO_LIST}
-        ;;
-esac
-
-
-# # # # # # # # # # # # # # # # # # # # #
-#
 #  In the file macro_list are listed all the predefined
 #  macros that are not in the C89 reserved namespace (the reserved
 #  namespace is all identifiers beginnning with two underscores or one
diff -N -u -r -w gcc-4.8.2/fixincludes/fixincl.c gcc-4.8.2-patched/fixincludes/fixincl.c
--- gcc-4.8.2/fixincludes/fixincl.c	2013-01-04 12:49:55.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/fixincl.c	2019-08-06 12:58:55.456532720 +0000
@@ -2,7 +2,7 @@
    files which are fixed to work correctly with ANSI C and placed in a
    directory that GCC will search.
 
-   Copyright (C) 1997, 1998, 1999, 2000, 2004, 2009, 2012
+   Copyright (C) 1997, 1998, 1999, 2000, 2004, 2009
    Free Software Foundation, Inc.
 
 This file is part of GCC.
@@ -53,8 +53,22 @@
     original, manufacturer supplied header file.  */\n\n";
 
 int find_base_len = 0;
+
+typedef enum {
+  VERB_SILENT = 0,
+  VERB_FIXES,
+  VERB_APPLIES,
+  VERB_PROGRESS,
+  VERB_TESTS,
+  VERB_EVERYTHING
+} te_verbose;
+
+te_verbose  verbose_level = VERB_PROGRESS;
 int have_tty = 0;
 
+#define VLEVEL(l)  ((unsigned int) verbose_level >= (unsigned int) l)
+#define NOT_SILENT VLEVEL(VERB_FIXES)
+
 pid_t process_chain_head = (pid_t) -1;
 
 char*  pz_curr_file;  /*  name of the current file under test/fix  */
@@ -398,17 +412,8 @@
   /* FOR every fixup, ...  */
   do
     {
-      tTestDesc *p_test;
-      int test_ct;
-
-      if (fixinc_mode && (p_fixd->fd_flags & FD_REPLACEMENT))
-        {
-          p_fixd->fd_flags |= FD_SKIP_TEST;
-          continue;
-        }
-
-      p_test = p_fixd->p_test_desc;
-      test_ct = p_fixd->test_ct;
+      tTestDesc *p_test = p_fixd->p_test_desc;
+      int test_ct = p_fixd->test_ct;
 
       /*  IF the machine type pointer is not NULL (we are not in test mode)
              AND this test is for or not done on particular machines
@@ -824,7 +829,7 @@
       /*
        *  Now add the fix number and file names that may be needed
        */
-      sprintf (pz_scan, " %ld '%s' '%s' '%s'", (long) (p_fixd - fixDescList),
+      sprintf (pz_scan, " %ld '%s' '%s'",  (long) (p_fixd - fixDescList),
 	       pz_fix_file, pz_file_source, pz_temp_file);
     }
   else /* NOT an "internal" fix: */
diff -N -u -r -w gcc-4.8.2/fixincludes/fixincl.x gcc-4.8.2-patched/fixincludes/fixincl.x
--- gcc-4.8.2/fixincludes/fixincl.x	2013-05-31 12:43:36.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/fixincl.x	2019-08-06 12:58:55.498028480 +0000
@@ -2,11 +2,11 @@
  * 
  * DO NOT EDIT THIS FILE   (fixincl.x)
  * 
- * It has been AutoGen-ed  Thursday May 16, 2013 at 03:34:25 PM MEST
+ * It has been AutoGen-ed  March 26, 2012 at 10:53:21 AM by AutoGen 5.10
  * From the definitions    inclhack.def
  * and the template file   fixincl
  */
-/* DO NOT SVN-MERGE THIS FILE, EITHER Thu May 16 15:34:25 MEST 2013
+/* DO NOT SVN-MERGE THIS FILE, EITHER Mon Mar 26 10:53:21 EDT 2012
  *
  * You must regenerate it.  Use the ./genfixes script.
  *
@@ -15,7 +15,7 @@
  * certain ANSI-incompatible system header files which are fixed to work
  * correctly with ANSI C and placed in a directory that GNU C will search.
  *
- * This file contains 226 fixup descriptions.
+ * This file contains 224 fixup descriptions.
  *
  * See README for more information.
  *
@@ -101,60 +101,6 @@
 
 /* * * * * * * * * * * * * * * * * * * * * * * * * *
  *
- *  Description of Aab_Aix_Fcntl fix
- */
-tSCC zAab_Aix_FcntlName[] =
-     "AAB_aix_fcntl";
-
-/*
- *  File name selection pattern
- */
-tSCC zAab_Aix_FcntlList[] =
-  "fcntl.h\0";
-/*
- *  Machine/OS name selection pattern
- */
-tSCC* apzAab_Aix_FcntlMachs[] = {
-        "*-*-aix*",
-        (const char*)NULL };
-
-/*
- *  content selection pattern - do fix if pattern found
- */
-tSCC zAab_Aix_FcntlSelect0[] =
-       "define open[ \t]open64";
-
-#define    AAB_AIX_FCNTL_TEST_CT  1
-static tTestDesc aAab_Aix_FcntlTests[] = {
-  { TT_EGREP,    zAab_Aix_FcntlSelect0, (regex_t*)NULL }, };
-
-/*
- *  Fix Command Arguments for Aab_Aix_Fcntl
- */
-static const char* apzAab_Aix_FcntlPatch[] = {
-    "wrap",
-    "",
-    "\n\
-#if defined __GNUG__ && defined _LARGE_FILES && defined __cplusplus\n\
-#define __need__aix_fcntl_h_fix\n\
-#ifdef __need__aix_fcntl_h_fix\n\
-#undef open\n\
-#undef creat\n\
-#undef openat\n\
-/* Alias the symbols using asm */\n\
-extern \"C\" {\n\
-extern int open(const char *, int, ...) __asm__(\"open64\");\n\
-extern int creat(const char *, mode_t) __asm__(\"creat64\");\n\
-#if (_XOPEN_SOURCE >= 700)\n\
-extern int openat(int, const char *, int, ...) __asm__(\"open64at\");\n\
-#endif\n\
-}\n\
-#endif\n\
-#endif\n",
-    (char*)NULL };
-
-/* * * * * * * * * * * * * * * * * * * * * * * * * *
- *
  *  Description of Aab_Darwin7_9_Long_Double_Funcs fix
  */
 tSCC zAab_Darwin7_9_Long_Double_FuncsName[] =
@@ -269,6 +215,44 @@
 
 /* * * * * * * * * * * * * * * * * * * * * * * * * *
  *
+ *  Description of Aab_Darwin7_9_Long_Double_Funcs_2 fix
+ */
+tSCC zAab_Darwin7_9_Long_Double_Funcs_2Name[] =
+     "AAB_darwin7_9_long_double_funcs_2";
+
+/*
+ *  File name selection pattern
+ */
+tSCC zAab_Darwin7_9_Long_Double_Funcs_2List[] =
+  "math.h\0";
+/*
+ *  Machine/OS name selection pattern
+ */
+tSCC* apzAab_Darwin7_9_Long_Double_Funcs_2Machs[] = {
+        "*-*-darwin7.9*",
+        (const char*)NULL };
+
+/*
+ *  content selection pattern - do fix if pattern found
+ */
+tSCC zAab_Darwin7_9_Long_Double_Funcs_2Select0[] =
+       "#include[ \\t]+\\\"";
+
+#define    AAB_DARWIN7_9_LONG_DOUBLE_FUNCS_2_TEST_CT  1
+static tTestDesc aAab_Darwin7_9_Long_Double_Funcs_2Tests[] = {
+  { TT_EGREP,    zAab_Darwin7_9_Long_Double_Funcs_2Select0, (regex_t*)NULL }, };
+
+/*
+ *  Fix Command Arguments for Aab_Darwin7_9_Long_Double_Funcs_2
+ */
+static const char* apzAab_Darwin7_9_Long_Double_Funcs_2Patch[] = {
+    "format",
+    "%1<%2.h>",
+    "([ \\t]*#[ \\t]*include[ \\t]+)\"([a-z0-9/]+)\\.h\"",
+    (char*)NULL };
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * *
+ *
  *  Description of Aab_Fd_Zero_Asm_Posix_Types_H fix
  */
 tSCC zAab_Fd_Zero_Asm_Posix_Types_HName[] =
@@ -501,241 +485,6 @@
 
 /* * * * * * * * * * * * * * * * * * * * * * * * * *
  *
- *  Description of Aab_Vxworks_Assert fix
- */
-tSCC zAab_Vxworks_AssertName[] =
-     "AAB_vxworks_assert";
-
-/*
- *  File name selection pattern
- */
-tSCC zAab_Vxworks_AssertList[] =
-  "assert.h\0";
-/*
- *  Machine/OS name selection pattern
- */
-tSCC* apzAab_Vxworks_AssertMachs[] = {
-        "*-*-vxworks*",
-        (const char*)NULL };
-#define AAB_VXWORKS_ASSERT_TEST_CT  0
-#define aAab_Vxworks_AssertTests   (tTestDesc*)NULL
-
-/*
- *  Fix Command Arguments for Aab_Vxworks_Assert
- */
-static const char* apzAab_Vxworks_AssertPatch[] = {
-"#ifndef _ASSERT_H\n\
-#define _ASSERT_H\n\n\
-#ifdef assert\n\
-#undef assert\n\
-#endif\n\n\
-#if defined(__STDC__) || defined(__cplusplus)\n\
-extern void __assert (const char*);\n\
-#else\n\
-extern void __assert ();\n\
-#endif\n\n\
-#ifdef NDEBUG\n\
-#define assert(ign) ((void)0)\n\
-#else\n\n\
-#define ASSERT_STRINGIFY(str) ASSERT_STRINGIFY_HELPER(str)\n\
-#define ASSERT_STRINGIFY_HELPER(str) #str\n\n\
-#define assert(test) ((void) \\\n\
-        ((test) ? ((void)0) : \\\n\
-        __assert(\"Assertion failed: \" ASSERT_STRINGIFY(test) \", file \" \\\n\
-        __FILE__ \", line \" ASSERT_STRINGIFY(__LINE__) \"\\n\")))\n\n\
-#endif\n\n\
-#endif",
-    (char*)NULL };
-
-/* * * * * * * * * * * * * * * * * * * * * * * * * *
- *
- *  Description of Aab_Vxworks_Regs_Vxtypes fix
- */
-tSCC zAab_Vxworks_Regs_VxtypesName[] =
-     "AAB_vxworks_regs_vxtypes";
-
-/*
- *  File name selection pattern
- */
-tSCC zAab_Vxworks_Regs_VxtypesList[] =
-  "regs.h\0";
-/*
- *  Machine/OS name selection pattern
- */
-tSCC* apzAab_Vxworks_Regs_VxtypesMachs[] = {
-        "*-*-vxworks*",
-        (const char*)NULL };
-#define AAB_VXWORKS_REGS_VXTYPES_TEST_CT  0
-#define aAab_Vxworks_Regs_VxtypesTests   (tTestDesc*)NULL
-
-/*
- *  Fix Command Arguments for Aab_Vxworks_Regs_Vxtypes
- */
-static const char* apzAab_Vxworks_Regs_VxtypesPatch[] = {
-"#ifndef _REGS_H\n\
-#define _REGS_H\n\
-#include <types/vxTypesOld.h>\n\
-#include_next <arch/../regs.h>\n\
-#endif",
-    (char*)NULL };
-
-/* * * * * * * * * * * * * * * * * * * * * * * * * *
- *
- *  Description of Aab_Vxworks_Stdint fix
- */
-tSCC zAab_Vxworks_StdintName[] =
-     "AAB_vxworks_stdint";
-
-/*
- *  File name selection pattern
- */
-tSCC zAab_Vxworks_StdintList[] =
-  "stdint.h\0";
-/*
- *  Machine/OS name selection pattern
- */
-tSCC* apzAab_Vxworks_StdintMachs[] = {
-        "*-*-vxworks*",
-        (const char*)NULL };
-#define AAB_VXWORKS_STDINT_TEST_CT  0
-#define aAab_Vxworks_StdintTests   (tTestDesc*)NULL
-
-/*
- *  Fix Command Arguments for Aab_Vxworks_Stdint
- */
-static const char* apzAab_Vxworks_StdintPatch[] = {
-"#ifndef _STDINT_H\n\
-#define _STDINT_H\n\
-/* get int*_t, uint*_t */\n\
-#include <types/vxTypes.h>\n\n\
-/* get legacy vxworks types for compatibility */\n\
-#include <types/vxTypesOld.h>\n\n\
-typedef long intptr_t;\n\
-typedef unsigned long uintptr_t;\n\n\
-typedef int64_t intmax_t;\n\
-typedef uint64_t uintmax_t;\n\n\
-typedef int8_t int_least8_t;\n\
-typedef int16_t int_least16_t;\n\
-typedef int32_t int_least32_t;\n\
-typedef int64_t int_least64_t;\n\n\
-typedef uint8_t uint_least8_t;\n\
-typedef uint16_t uint_least16_t;\n\
-typedef uint32_t uint_least32_t;\n\
-typedef uint64_t uint_least64_t;\n\n\
-typedef int8_t int_fast8_t;\n\
-typedef int int_fast16_t;\n\
-typedef int32_t int_fast32_t;\n\
-typedef int64_t int_fast64_t;\n\n\
-typedef uint8_t uint_fast8_t;\n\
-typedef unsigned int uint_fast16_t;\n\
-typedef uint32_t uint_fast32_t;\n\
-typedef uint64_t uint_fast64_t;\n\n\
-/* Ranges */\n\
-#define UINT8_MAX (~(uint8_t)0)\n\
-#define UINT8_MIN 0\n\
-#define UINT16_MAX (~(uint16_t)0)\n\
-#define UINT16_MIN 0\n\
-#define UINT32_MAX (~(uint32_t)0)\n\
-#define UINT32_MIN 0\n\
-#define UINT64_MAX (~(uint64_t)0)\n\
-#define UINT64_MIN 0\n\n\
-#define UINTPTR_MAX (~(uintptr_t)0)\n\
-#define UINTPTR_MIN 0\n\n\
-/* Need to do int_fast16_t as well, as type\n\
-   size may be architecture dependent */\n\
-#define UINT_FAST16_MAX (~(uint_fast16_t)0)\n\
-#define UINT_FAST16_MAX 0\n\n\
-#define INT8_MAX (UINT8_MAX>>1)\n\
-#define INT8_MIN (INT8_MAX+1)\n\
-#define INT16_MAX (UINT16_MAX>>1)\n\
-#define INT16_MIN (INT16_MAX+1)\n\
-#define INT32_MAX (UINT32_MAX>>1)\n\
-#define INT32_MIN (INT32_MAX+1)\n\
-#define INT64_MAX (UINT64_MAX>>1)\n\
-#define INT64_MIN (INT64_MAX+1)\n\n\
-#define INTPTR_MAX (UINTPTR_MAX>>1)\n\
-#define INTPTR_MIN (INTPTR_MAX+1)\t\n\n\
-#define INT_FAST16_MAX (UINT_FAST16_MAX>>1)\n\
-#define INT_FAST16_MIN (INT_FAST16_MAX+1)\n\n\
-/* now define equiv. constants */\n\
-#define UINT_FAST8_MAX UINT8_MAX\n\
-#define UINT_FAST8_MIN UINT_FAST8_MIN\n\
-#define INT_FAST8_MAX INT8_MAX\n\
-#define INT_FAST8_MIN INT8_MIN\n\
-#define UINT_FAST32_MAX UINT32_MAX\n\
-#define UINT_FAST32_MIN UINT32_MIN\n\
-#define INT_FAST32_MAX INT32_MAX\n\
-#define INT_FAST32_MIN INT32_MIN\n\
-#define UINT_FAST64_MAX UINT64_MAX\n\
-#define UINT_FAST64_MIN UINT64_MIN\n\
-#define INT_FAST64_MAX INT64_MAX\n\
-#define INT_FAST64_MIN INT64_MIN\n\n\
-#define UINT_LEAST8_MAX UINT8_MAX\n\
-#define UINT_LEAST8_MIN UINT8_MIN\n\
-#define INT_LEAST8_MAX INT8_MAX\n\
-#define INT_LEAST8_MIN INT8_MIN\n\
-#define UINT_LEAST16_MAX UINT16_MAX\n\
-#define UINT_LEAST16_MIN UINT16_MIN\n\
-#define INT_LEAST16_MAX INT16_MAX\n\
-#define INT_LEAST16_MIN INT16_MIN\n\
-#define UINT_LEAST32_MAX UINT32_MAX\n\
-#define UINT_LEAST32_MIN UINT32_MIN\n\
-#define INT_LEAST32_MAX INT32_MAX\n\
-#define INT_LEAST32_MIN INT32_MIN\n\
-#define UINT_LEAST64_MAX UINT64_MAX\n\
-#define UINT_LEAST64_MIN UINT64_MIN\n\
-#define INT_LEAST64_MAX INT64_MAX\n\
-#define INT_LEAST64_MIN INT64_MIN\n\n\
-#define UINTMAX_MAX UINT64_MAX\n\
-#define UINTMAX_MIN UINT64_MIN\n\
-#define INTMAX_MAX INT64_MAX\n\
-#define INTMAX_MIN INT64_MIN\n\n\
-#endif",
-    (char*)NULL };
-
-/* * * * * * * * * * * * * * * * * * * * * * * * * *
- *
- *  Description of Aab_Vxworks_Unistd fix
- */
-tSCC zAab_Vxworks_UnistdName[] =
-     "AAB_vxworks_unistd";
-
-/*
- *  File name selection pattern
- */
-tSCC zAab_Vxworks_UnistdList[] =
-  "unistd.h\0";
-/*
- *  Machine/OS name selection pattern
- */
-tSCC* apzAab_Vxworks_UnistdMachs[] = {
-        "*-*-vxworks*",
-        (const char*)NULL };
-#define AAB_VXWORKS_UNISTD_TEST_CT  0
-#define aAab_Vxworks_UnistdTests   (tTestDesc*)NULL
-
-/*
- *  Fix Command Arguments for Aab_Vxworks_Unistd
- */
-static const char* apzAab_Vxworks_UnistdPatch[] = {
-"#ifndef _UNISTD_H\n\
-#define _UNISTD_H\n\
-#include_next <unistd.h>\n\
-#include <ioLib.h>\n\
-#ifndef STDIN_FILENO\n\
-#define STDIN_FILENO 0\n\
-#endif\n\
-#ifndef STDOUT_FILENO\n\
-#define STDOUT_FILENO 1\n\
-#endif\n\
-#ifndef STDERR_FILENO\n\
-#define STDERR_FILENO 2\n\
-#endif\n\
-#endif /* _UNISTD_H */",
-    (char*)NULL };
-
-/* * * * * * * * * * * * * * * * * * * * * * * * * *
- *
  *  Description of Aix_Complex fix
  */
 tSCC zAix_ComplexName[] =
@@ -925,123 +674,6 @@
 
 /* * * * * * * * * * * * * * * * * * * * * * * * * *
  *
- *  Description of Aix_Mutex_Initializer_1 fix
- */
-tSCC zAix_Mutex_Initializer_1Name[] =
-     "aix_mutex_initializer_1";
-
-/*
- *  File name selection pattern
- */
-tSCC zAix_Mutex_Initializer_1List[] =
-  "pthread.h\0";
-/*
- *  Machine/OS name selection pattern
- */
-tSCC* apzAix_Mutex_Initializer_1Machs[] = {
-        "*-*-aix*",
-        (const char*)NULL };
-
-/*
- *  content selection pattern - do fix if pattern found
- */
-tSCC zAix_Mutex_Initializer_1Select0[] =
-       "#define[ \t]PTHREAD_MUTEX_INITIALIZER \\\\\n\
-\\{ \\\\\n";
-
-#define    AIX_MUTEX_INITIALIZER_1_TEST_CT  1
-static tTestDesc aAix_Mutex_Initializer_1Tests[] = {
-  { TT_EGREP,    zAix_Mutex_Initializer_1Select0, (regex_t*)NULL }, };
-
-/*
- *  Fix Command Arguments for Aix_Mutex_Initializer_1
- */
-static const char* apzAix_Mutex_Initializer_1Patch[] = {
-    "format",
-    "#define PTHREAD_MUTEX_INITIALIZER \\\n\
-{{ \\\n",
-    (char*)NULL };
-
-/* * * * * * * * * * * * * * * * * * * * * * * * * *
- *
- *  Description of Aix_Cond_Initializer_1 fix
- */
-tSCC zAix_Cond_Initializer_1Name[] =
-     "aix_cond_initializer_1";
-
-/*
- *  File name selection pattern
- */
-tSCC zAix_Cond_Initializer_1List[] =
-  "pthread.h\0";
-/*
- *  Machine/OS name selection pattern
- */
-tSCC* apzAix_Cond_Initializer_1Machs[] = {
-        "*-*-aix*",
-        (const char*)NULL };
-
-/*
- *  content selection pattern - do fix if pattern found
- */
-tSCC zAix_Cond_Initializer_1Select0[] =
-       "#define[ \t]PTHREAD_COND_INITIALIZER \\\\\n\
-\\{ \\\\\n";
-
-#define    AIX_COND_INITIALIZER_1_TEST_CT  1
-static tTestDesc aAix_Cond_Initializer_1Tests[] = {
-  { TT_EGREP,    zAix_Cond_Initializer_1Select0, (regex_t*)NULL }, };
-
-/*
- *  Fix Command Arguments for Aix_Cond_Initializer_1
- */
-static const char* apzAix_Cond_Initializer_1Patch[] = {
-    "format",
-    "#define PTHREAD_COND_INITIALIZER \\\n\
-{{ \\\n",
-    (char*)NULL };
-
-/* * * * * * * * * * * * * * * * * * * * * * * * * *
- *
- *  Description of Aix_Rwlock_Initializer_1 fix
- */
-tSCC zAix_Rwlock_Initializer_1Name[] =
-     "aix_rwlock_initializer_1";
-
-/*
- *  File name selection pattern
- */
-tSCC zAix_Rwlock_Initializer_1List[] =
-  "pthread.h\0";
-/*
- *  Machine/OS name selection pattern
- */
-tSCC* apzAix_Rwlock_Initializer_1Machs[] = {
-        "*-*-aix*",
-        (const char*)NULL };
-
-/*
- *  content selection pattern - do fix if pattern found
- */
-tSCC zAix_Rwlock_Initializer_1Select0[] =
-       "#define[ \t]PTHREAD_RWLOCK_INITIALIZER \\\\\n\
-\\{ \\\\\n";
-
-#define    AIX_RWLOCK_INITIALIZER_1_TEST_CT  1
-static tTestDesc aAix_Rwlock_Initializer_1Tests[] = {
-  { TT_EGREP,    zAix_Rwlock_Initializer_1Select0, (regex_t*)NULL }, };
-
-/*
- *  Fix Command Arguments for Aix_Rwlock_Initializer_1
- */
-static const char* apzAix_Rwlock_Initializer_1Patch[] = {
-    "format",
-    "#define PTHREAD_RWLOCK_INITIALIZER \\\n\
-{{ \\\n",
-    (char*)NULL };
-
-/* * * * * * * * * * * * * * * * * * * * * * * * * *
- *
  *  Description of Aix_Pthread fix
  */
 tSCC zAix_PthreadName[] =
@@ -1432,6 +1064,118 @@
 
 /* * * * * * * * * * * * * * * * * * * * * * * * * *
  *
+ *  Description of Alpha___Extern_Prefix fix
+ */
+tSCC zAlpha___Extern_PrefixName[] =
+     "alpha___extern_prefix";
+
+/*
+ *  File name selection pattern
+ */
+#define zAlpha___Extern_PrefixList (char*)NULL
+/*
+ *  Machine/OS name selection pattern
+ */
+tSCC* apzAlpha___Extern_PrefixMachs[] = {
+        "alpha*-dec-osf*",
+        (const char*)NULL };
+
+/*
+ *  content selection pattern - do fix if pattern found
+ */
+tSCC zAlpha___Extern_PrefixSelect0[] =
+       "(.*)(defined\\(__DECC\\)|def[ \t]*__DECC)[ \t]*\n\
+(#[ \t]*pragma[ \t]*extern_prefix.*)";
+
+#define    ALPHA___EXTERN_PREFIX_TEST_CT  1
+static tTestDesc aAlpha___Extern_PrefixTests[] = {
+  { TT_EGREP,    zAlpha___Extern_PrefixSelect0, (regex_t*)NULL }, };
+
+/*
+ *  Fix Command Arguments for Alpha___Extern_Prefix
+ */
+static const char* apzAlpha___Extern_PrefixPatch[] = {
+    "format",
+    "%1 (defined(__DECC) || defined(__PRAGMA_EXTERN_PREFIX))\n\
+%3",
+    (char*)NULL };
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * *
+ *
+ *  Description of Alpha___Extern_Prefix_Standards fix
+ */
+tSCC zAlpha___Extern_Prefix_StandardsName[] =
+     "alpha___extern_prefix_standards";
+
+/*
+ *  File name selection pattern
+ */
+tSCC zAlpha___Extern_Prefix_StandardsList[] =
+  "standards.h\0";
+/*
+ *  Machine/OS name selection pattern
+ */
+tSCC* apzAlpha___Extern_Prefix_StandardsMachs[] = {
+        "alpha*-dec-osf*",
+        (const char*)NULL };
+
+/*
+ *  content selection pattern - do fix if pattern found
+ */
+tSCC zAlpha___Extern_Prefix_StandardsSelect0[] =
+       ".*!defined\\(_LIBC_POLLUTION_H_\\) && !defined\\(__DECC\\)";
+
+#define    ALPHA___EXTERN_PREFIX_STANDARDS_TEST_CT  1
+static tTestDesc aAlpha___Extern_Prefix_StandardsTests[] = {
+  { TT_EGREP,    zAlpha___Extern_Prefix_StandardsSelect0, (regex_t*)NULL }, };
+
+/*
+ *  Fix Command Arguments for Alpha___Extern_Prefix_Standards
+ */
+static const char* apzAlpha___Extern_Prefix_StandardsPatch[] = {
+    "format",
+    "%0 && !defined(__PRAGMA_EXTERN_PREFIX)",
+    (char*)NULL };
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * *
+ *
+ *  Description of Alpha___Extern_Prefix_Sys_Stat fix
+ */
+tSCC zAlpha___Extern_Prefix_Sys_StatName[] =
+     "alpha___extern_prefix_sys_stat";
+
+/*
+ *  File name selection pattern
+ */
+tSCC zAlpha___Extern_Prefix_Sys_StatList[] =
+  "sys/stat.h\0sys/mount.h\0";
+/*
+ *  Machine/OS name selection pattern
+ */
+tSCC* apzAlpha___Extern_Prefix_Sys_StatMachs[] = {
+        "alpha*-dec-osf5*",
+        (const char*)NULL };
+
+/*
+ *  content selection pattern - do fix if pattern found
+ */
+tSCC zAlpha___Extern_Prefix_Sys_StatSelect0[] =
+       "#[ \t]*if[ \t]*defined\\(__DECC\\)";
+
+#define    ALPHA___EXTERN_PREFIX_SYS_STAT_TEST_CT  1
+static tTestDesc aAlpha___Extern_Prefix_Sys_StatTests[] = {
+  { TT_EGREP,    zAlpha___Extern_Prefix_Sys_StatSelect0, (regex_t*)NULL }, };
+
+/*
+ *  Fix Command Arguments for Alpha___Extern_Prefix_Sys_Stat
+ */
+static const char* apzAlpha___Extern_Prefix_Sys_StatPatch[] = {
+    "format",
+    "%0 || defined(__PRAGMA_EXTERN_PREFIX)",
+    (char*)NULL };
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * *
+ *
  *  Description of Alpha_Assert fix
  */
 tSCC zAlpha_AssertName[] =
@@ -1467,6 +1211,41 @@
 
 /* * * * * * * * * * * * * * * * * * * * * * * * * *
  *
+ *  Description of Alpha_Bad_Lval fix
+ */
+tSCC zAlpha_Bad_LvalName[] =
+     "alpha_bad_lval";
+
+/*
+ *  File name selection pattern
+ */
+#define zAlpha_Bad_LvalList (char*)NULL
+/*
+ *  Machine/OS name selection pattern
+ */
+tSCC* apzAlpha_Bad_LvalMachs[] = {
+        "alpha*-dec-osf*",
+        (const char*)NULL };
+
+/*
+ *  content selection pattern - do fix if pattern found
+ */
+tSCC zAlpha_Bad_LvalSelect0[] =
+       "^[ \t]*#[ \t]*pragma[ \t]+extern_prefix";
+
+#define    ALPHA_BAD_LVAL_TEST_CT  1
+static tTestDesc aAlpha_Bad_LvalTests[] = {
+  { TT_EGREP,    zAlpha_Bad_LvalSelect0, (regex_t*)NULL }, };
+
+/*
+ *  Fix Command Arguments for Alpha_Bad_Lval
+ */
+static const char* apzAlpha_Bad_LvalPatch[] = { sed_cmd_z,
+    "-e", "s/^[ \t]*#[ \t]*define[ \t][ \t]*\\([^(]*\\)\\(([^)]*)\\)[ \t]*\\(_.*\\)\\1\\2[ \t]*$/#define \\1 \\3\\1/",
+    (char*)NULL };
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * *
+ *
  *  Description of Alpha_Getopt fix
  */
 tSCC zAlpha_GetoptName[] =
@@ -1572,6 +1351,126 @@
 
 /* * * * * * * * * * * * * * * * * * * * * * * * * *
  *
+ *  Description of Alpha_Pthread fix
+ */
+tSCC zAlpha_PthreadName[] =
+     "alpha_pthread";
+
+/*
+ *  File name selection pattern
+ */
+tSCC zAlpha_PthreadList[] =
+  "pthread.h\0";
+/*
+ *  Machine/OS name selection pattern
+ */
+tSCC* apzAlpha_PthreadMachs[] = {
+        "alpha*-dec-osf*",
+        (const char*)NULL };
+
+/*
+ *  content selection pattern - do fix if pattern found
+ */
+tSCC zAlpha_PthreadSelect0[] =
+       "((#[ \t]*if)([ \t]*defined[ \t]*\\(_PTHREAD_ENV_DECC\\)|def _PTHREAD_ENV_DECC)(.*))\n\
+(#[ \t]*define _PTHREAD_USE_PTDNAM_)";
+
+#define    ALPHA_PTHREAD_TEST_CT  1
+static tTestDesc aAlpha_PthreadTests[] = {
+  { TT_EGREP,    zAlpha_PthreadSelect0, (regex_t*)NULL }, };
+
+/*
+ *  Fix Command Arguments for Alpha_Pthread
+ */
+static const char* apzAlpha_PthreadPatch[] = {
+    "format",
+    "%2 defined (_PTHREAD_ENV_DECC)%4 || defined (__PRAGMA_EXTERN_PREFIX)\n\
+%5",
+    (char*)NULL };
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * *
+ *
+ *  Description of Alpha_Pthread_Gcc fix
+ */
+tSCC zAlpha_Pthread_GccName[] =
+     "alpha_pthread_gcc";
+
+/*
+ *  File name selection pattern
+ */
+tSCC zAlpha_Pthread_GccList[] =
+  "pthread.h\0";
+/*
+ *  Machine/OS name selection pattern
+ */
+tSCC* apzAlpha_Pthread_GccMachs[] = {
+        "alpha*-dec-osf*",
+        (const char*)NULL };
+
+/*
+ *  content selection pattern - do fix if pattern found
+ */
+tSCC zAlpha_Pthread_GccSelect0[] =
+       "#else\n\
+# error <pthread.h>: unrecognized compiler.";
+
+#define    ALPHA_PTHREAD_GCC_TEST_CT  1
+static tTestDesc aAlpha_Pthread_GccTests[] = {
+  { TT_EGREP,    zAlpha_Pthread_GccSelect0, (regex_t*)NULL }, };
+
+/*
+ *  Fix Command Arguments for Alpha_Pthread_Gcc
+ */
+static const char* apzAlpha_Pthread_GccPatch[] = {
+    "format",
+    "#elif defined (__GNUC__)\n\
+# define _PTHREAD_ENV_GCC\n\
+%0",
+    (char*)NULL };
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * *
+ *
+ *  Description of Alpha_Pthread_Init fix
+ */
+tSCC zAlpha_Pthread_InitName[] =
+     "alpha_pthread_init";
+
+/*
+ *  File name selection pattern
+ */
+tSCC zAlpha_Pthread_InitList[] =
+  "pthread.h\0";
+/*
+ *  Machine/OS name selection pattern
+ */
+tSCC* apzAlpha_Pthread_InitMachs[] = {
+        "alpha*-dec-osf*",
+        (const char*)NULL };
+
+/*
+ *  content selection pattern - do fix if pattern found
+ */
+tSCC zAlpha_Pthread_InitSelect0[] =
+       " \\* @\\(#\\).RCSfile: pthread\\.h,v \\$ .Revision: 1\\.1\\.33\\.21 \\$ \\(DEC\\) .Date: 2000/08/15 15:30:13 \\$";
+
+#define    ALPHA_PTHREAD_INIT_TEST_CT  1
+static tTestDesc aAlpha_Pthread_InitTests[] = {
+  { TT_EGREP,    zAlpha_Pthread_InitSelect0, (regex_t*)NULL }, };
+
+/*
+ *  Fix Command Arguments for Alpha_Pthread_Init
+ */
+static const char* apzAlpha_Pthread_InitPatch[] = { sed_cmd_z,
+    "-e", "s@MVALID\\(.*\\)A}@MVALID\\1A, 0, 0, 0, 0, 0, 0 }@\n\
+s@MVALID\\(.*\\)_}@MVALID\\1_, 0, 0, 0, 0 }@\n\
+s@CVALID\\(.*\\)A}@CVALID\\1A, 0, 0, 0, 0 }@\n\
+s@CVALID\\(.*\\)_}@CVALID\\1_, 0, 0 }@\n\
+s@WVALID\\(.*\\)A}@WVALID\\1A, 0, 0, 0, 0, 0, 0, 0, 0, 0 }@\n\
+s@WVALID\\(.*\\)_}@WVALID\\1_, 0, 0, 0, 0, 0, 0, 0 }@\n",
+    (char*)NULL };
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * *
+ *
  *  Description of Alpha_Sbrk fix
  */
 tSCC zAlpha_SbrkName[] =
@@ -1955,7 +1854,7 @@
  *  content selection pattern - do fix if pattern found
  */
 tSCC zBroken_NanSelect0[] =
-       "#if defined\\(__APPLE_CC__\\) && \\(__APPLE_CC__ >= 1345\\)";
+       "#if defined(__APPLE_CC__) && (__APPLE_CC__ >= 1345)";
 
 /*
  *  content bypass pattern - skip fix if pattern found
@@ -2168,44 +2067,6 @@
 
 /* * * * * * * * * * * * * * * * * * * * * * * * * *
  *
- *  Description of Darwin_9_Long_Double_Funcs_2 fix
- */
-tSCC zDarwin_9_Long_Double_Funcs_2Name[] =
-     "darwin_9_long_double_funcs_2";
-
-/*
- *  File name selection pattern
- */
-tSCC zDarwin_9_Long_Double_Funcs_2List[] =
-  "math.h\0";
-/*
- *  Machine/OS name selection pattern
- */
-tSCC* apzDarwin_9_Long_Double_Funcs_2Machs[] = {
-        "*-*-darwin7.9*",
-        (const char*)NULL };
-
-/*
- *  content selection pattern - do fix if pattern found
- */
-tSCC zDarwin_9_Long_Double_Funcs_2Select0[] =
-       "#include[ \\t]+\\\"";
-
-#define    DARWIN_9_LONG_DOUBLE_FUNCS_2_TEST_CT  1
-static tTestDesc aDarwin_9_Long_Double_Funcs_2Tests[] = {
-  { TT_EGREP,    zDarwin_9_Long_Double_Funcs_2Select0, (regex_t*)NULL }, };
-
-/*
- *  Fix Command Arguments for Darwin_9_Long_Double_Funcs_2
- */
-static const char* apzDarwin_9_Long_Double_Funcs_2Patch[] = {
-    "format",
-    "%1<%2.h>",
-    "([ \\t]*#[ \\t]*include[ \\t]+)\"([a-z0-9/]+)\\.h\"",
-    (char*)NULL };
-
-/* * * * * * * * * * * * * * * * * * * * * * * * * *
- *
  *  Description of Darwin_Externc fix
  */
 tSCC zDarwin_ExterncName[] =
@@ -4759,6 +4620,203 @@
 
 /* * * * * * * * * * * * * * * * * * * * * * * * * *
  *
+ *  Description of Irix___Restrict fix
+ */
+tSCC zIrix___RestrictName[] =
+     "irix___restrict";
+
+/*
+ *  File name selection pattern
+ */
+tSCC zIrix___RestrictList[] =
+  "internal/sgimacros.h\0";
+/*
+ *  Machine/OS name selection pattern
+ */
+tSCC* apzIrix___RestrictMachs[] = {
+        "mips-sgi-irix6.5",
+        (const char*)NULL };
+
+/*
+ *  content selection pattern - do fix if pattern found
+ */
+tSCC zIrix___RestrictSelect0[] =
+       "(#ifdef __c99\n\
+)(#[ \t]*define __restrict restrict)";
+
+#define    IRIX___RESTRICT_TEST_CT  1
+static tTestDesc aIrix___RestrictTests[] = {
+  { TT_EGREP,    zIrix___RestrictSelect0, (regex_t*)NULL }, };
+
+/*
+ *  Fix Command Arguments for Irix___Restrict
+ */
+static const char* apzIrix___RestrictPatch[] = {
+    "format",
+    "%1#  ifndef __cplusplus\n\
+%2\n\
+#  endif",
+    (char*)NULL };
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * *
+ *
+ *  Description of Irix___Generic1 fix
+ */
+tSCC zIrix___Generic1Name[] =
+     "irix___generic1";
+
+/*
+ *  File name selection pattern
+ */
+tSCC zIrix___Generic1List[] =
+  "internal/math_core.h\0";
+/*
+ *  Machine/OS name selection pattern
+ */
+tSCC* apzIrix___Generic1Machs[] = {
+        "mips-sgi-irix6.5",
+        (const char*)NULL };
+
+/*
+ *  content selection pattern - do fix if pattern found
+ */
+tSCC zIrix___Generic1Select0[] =
+       "#define ([a-z]+)\\(x\\) *__generic.*";
+
+#define    IRIX___GENERIC1_TEST_CT  1
+static tTestDesc aIrix___Generic1Tests[] = {
+  { TT_EGREP,    zIrix___Generic1Select0, (regex_t*)NULL }, };
+
+/*
+ *  Fix Command Arguments for Irix___Generic1
+ */
+static const char* apzIrix___Generic1Patch[] = {
+    "format",
+    "extern int %1(double);\n\
+extern int %1f(float);\n\
+extern int %1l(long double);\n\
+#define %1(x) (sizeof(x) == sizeof(double) ? _%1(x) \\\n\
+               : sizeof(x) == sizeof(float) ? _%1f(x) \\\n\
+               : _%1l(x))\n",
+    (char*)NULL };
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * *
+ *
+ *  Description of Irix___Generic2 fix
+ */
+tSCC zIrix___Generic2Name[] =
+     "irix___generic2";
+
+/*
+ *  File name selection pattern
+ */
+tSCC zIrix___Generic2List[] =
+  "internal/math_core.h\0";
+/*
+ *  Machine/OS name selection pattern
+ */
+tSCC* apzIrix___Generic2Machs[] = {
+        "mips-sgi-irix6.5",
+        (const char*)NULL };
+
+/*
+ *  content selection pattern - do fix if pattern found
+ */
+tSCC zIrix___Generic2Select0[] =
+       "#define ([a-z]+)\\(x,y\\) *__generic.*";
+
+#define    IRIX___GENERIC2_TEST_CT  1
+static tTestDesc aIrix___Generic2Tests[] = {
+  { TT_EGREP,    zIrix___Generic2Select0, (regex_t*)NULL }, };
+
+/*
+ *  Fix Command Arguments for Irix___Generic2
+ */
+static const char* apzIrix___Generic2Patch[] = {
+    "format",
+    "#define %1(x,y) \\\n\
+  ((sizeof(x)<=4 && sizeof(y)<=4) ? _%1f(x,y) \\\n\
+   : (sizeof(x)<=8 && sizeof(y)<=8) ? _%1(x,y) \\\n\
+   : _%1l(x,y))\n",
+    (char*)NULL };
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * *
+ *
+ *  Description of Irix_Asm_Apostrophe fix
+ */
+tSCC zIrix_Asm_ApostropheName[] =
+     "irix_asm_apostrophe";
+
+/*
+ *  File name selection pattern
+ */
+tSCC zIrix_Asm_ApostropheList[] =
+  "sys/asm.h\0";
+/*
+ *  Machine/OS name selection pattern
+ */
+#define apzIrix_Asm_ApostropheMachs (const char**)NULL
+
+/*
+ *  content selection pattern - do fix if pattern found
+ */
+tSCC zIrix_Asm_ApostropheSelect0[] =
+       "^[ \t]*#.*[Ww]e're";
+
+#define    IRIX_ASM_APOSTROPHE_TEST_CT  1
+static tTestDesc aIrix_Asm_ApostropheTests[] = {
+  { TT_EGREP,    zIrix_Asm_ApostropheSelect0, (regex_t*)NULL }, };
+
+/*
+ *  Fix Command Arguments for Irix_Asm_Apostrophe
+ */
+static const char* apzIrix_Asm_ApostrophePatch[] = {
+    "format",
+    "%1 are",
+    "^([ \t]*#.*[Ww]e)'re",
+    (char*)NULL };
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * *
+ *
+ *  Description of Irix_Complex fix
+ */
+tSCC zIrix_ComplexName[] =
+     "irix_complex";
+
+/*
+ *  File name selection pattern
+ */
+tSCC zIrix_ComplexList[] =
+  "complex.h\0";
+/*
+ *  Machine/OS name selection pattern
+ */
+tSCC* apzIrix_ComplexMachs[] = {
+        "mips-sgi-irix6.5",
+        (const char*)NULL };
+
+/*
+ *  content selection pattern - do fix if pattern found
+ */
+tSCC zIrix_ComplexSelect0[] =
+       "#define[ \t]_Complex_I[ \t]\\(\\(float[ \t]_Complex\\)[ \t]\\(__I__\\)\\)";
+
+#define    IRIX_COMPLEX_TEST_CT  1
+static tTestDesc aIrix_ComplexTests[] = {
+  { TT_EGREP,    zIrix_ComplexSelect0, (regex_t*)NULL }, };
+
+/*
+ *  Fix Command Arguments for Irix_Complex
+ */
+static const char* apzIrix_ComplexPatch[] = { sed_cmd_z,
+    "-e", "s/#define[ \t]_Complex_I[ \t]((float[ \t]_Complex)[ \t](__I__))/#define _Complex_I (__extension__ 1.0iF)/",
+    "-e", "/#define[ \t]imaginary[ \t]_Imaginary/d",
+    "-e", "/#define[ \t]_Imaginary_I/d",
+    "-e", "s/#define[ \t]I[ \t]_Imaginary_I/#define I _Complex_I/",
+    (char*)NULL };
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * *
+ *
  *  Description of Irix_Limits_Const fix
  */
 tSCC zIrix_Limits_ConstName[] =
@@ -4794,6 +4852,201 @@
 
 /* * * * * * * * * * * * * * * * * * * * * * * * * *
  *
+ *  Description of Irix_Pthread_Init fix
+ */
+tSCC zIrix_Pthread_InitName[] =
+     "irix_pthread_init";
+
+/*
+ *  File name selection pattern
+ */
+tSCC zIrix_Pthread_InitList[] =
+  "pthread.h\0";
+/*
+ *  Machine/OS name selection pattern
+ */
+tSCC* apzIrix_Pthread_InitMachs[] = {
+        "mips-sgi-irix6.5",
+        (const char*)NULL };
+
+/*
+ *  content selection pattern - do fix if pattern found
+ */
+tSCC zIrix_Pthread_InitSelect0[] =
+       "^(#define[ \t]+PTHREAD_.*_INITIALIZER[ \t]+)(\\{ 0 \\})";
+
+#define    IRIX_PTHREAD_INIT_TEST_CT  1
+static tTestDesc aIrix_Pthread_InitTests[] = {
+  { TT_EGREP,    zIrix_Pthread_InitSelect0, (regex_t*)NULL }, };
+
+/*
+ *  Fix Command Arguments for Irix_Pthread_Init
+ */
+static const char* apzIrix_Pthread_InitPatch[] = {
+    "format",
+    "%1{ %2 }",
+    (char*)NULL };
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * *
+ *
+ *  Description of Irix_Socklen_T fix
+ */
+tSCC zIrix_Socklen_TName[] =
+     "irix_socklen_t";
+
+/*
+ *  File name selection pattern
+ */
+tSCC zIrix_Socklen_TList[] =
+  "sys/socket.h\0";
+/*
+ *  Machine/OS name selection pattern
+ */
+tSCC* apzIrix_Socklen_TMachs[] = {
+        "mips-sgi-irix6.5",
+        (const char*)NULL };
+
+/*
+ *  content selection pattern - do fix if pattern found
+ */
+tSCC zIrix_Socklen_TSelect0[] =
+       "(#define _SOCKLEN_T\n\
+)(typedef u_int32_t socklen_t;)";
+
+#define    IRIX_SOCKLEN_T_TEST_CT  1
+static tTestDesc aIrix_Socklen_TTests[] = {
+  { TT_EGREP,    zIrix_Socklen_TSelect0, (regex_t*)NULL }, };
+
+/*
+ *  Fix Command Arguments for Irix_Socklen_T
+ */
+static const char* apzIrix_Socklen_TPatch[] = {
+    "format",
+    "%1#if _NO_XOPEN4 && _NO_XOPEN5\n\
+typedef int socklen_t;\n\
+#else\n\
+%2\n\
+#endif /* _NO_XOPEN4 && _NO_XOPEN5 */",
+    (char*)NULL };
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * *
+ *
+ *  Description of Irix_Stdint_C99_Mode fix
+ */
+tSCC zIrix_Stdint_C99_ModeName[] =
+     "irix_stdint_c99_mode";
+
+/*
+ *  File name selection pattern
+ */
+tSCC zIrix_Stdint_C99_ModeList[] =
+  "stdint.h\0";
+/*
+ *  Machine/OS name selection pattern
+ */
+tSCC* apzIrix_Stdint_C99_ModeMachs[] = {
+        "mips-sgi-irix6.5",
+        (const char*)NULL };
+
+/*
+ *  content selection pattern - do fix if pattern found
+ */
+tSCC zIrix_Stdint_C99_ModeSelect0[] =
+       "(#ifndef __c99\n\
+)(#error This header file is to be used only for c99 mode compilations)";
+
+#define    IRIX_STDINT_C99_MODE_TEST_CT  1
+static tTestDesc aIrix_Stdint_C99_ModeTests[] = {
+  { TT_EGREP,    zIrix_Stdint_C99_ModeSelect0, (regex_t*)NULL }, };
+
+/*
+ *  Fix Command Arguments for Irix_Stdint_C99_Mode
+ */
+static const char* apzIrix_Stdint_C99_ModePatch[] = {
+    "format",
+    "#if 0\n\
+%2",
+    (char*)NULL };
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * *
+ *
+ *  Description of Irix_Stdint_C99_Types fix
+ */
+tSCC zIrix_Stdint_C99_TypesName[] =
+     "irix_stdint_c99_types";
+
+/*
+ *  File name selection pattern
+ */
+tSCC zIrix_Stdint_C99_TypesList[] =
+  "stdint-irix65.h\0stdint.h\0";
+/*
+ *  Machine/OS name selection pattern
+ */
+tSCC* apzIrix_Stdint_C99_TypesMachs[] = {
+        "mips-sgi-irix6.5",
+        (const char*)NULL };
+#define IRIX_STDINT_C99_TYPES_TEST_CT  0
+#define aIrix_Stdint_C99_TypesTests   (tTestDesc*)NULL
+
+/*
+ *  Fix Command Arguments for Irix_Stdint_C99_Types
+ */
+static const char* apzIrix_Stdint_C99_TypesPatch[] = { sed_cmd_z,
+    "-e", "s@^#define INT64_MIN.*(-0x7fffffffffffffff - 1)$@#define INT64_MIN               (-0x7fffffffffffffffLL - 1)@",
+    "-e", "s@^#define INT64_MAX.*0x7fffffffffffffff$@#define INT64_MAX               0x7fffffffffffffffLL@",
+    "-e", "s@^#define UINT32_MAX.*0xffffffff$@#define UINT32_MAX              0xffffffffU@",
+    "-e", "s@^#define UINT64_MAX.*0xffffffffffffffff$@#define UINT64_MAX              0xffffffffffffffffULL@",
+    "-e", "s@^#define INTPTR_MIN.*INT32_MIN$@#define INTPTR_MIN              (-0x7fffffffL - 1)@",
+    "-e", "s@^#define INTPTR_MAX.*INT32_MAX$@#define INTPTR_MAX              0x7fffffffL@",
+    "-e", "s@^#define UINTPTR_MAX.*UINT32_MAX$@#define UINTPTR_MAX             0xffffffffUL@",
+    "-e", "s@^#define INTPTR_MIN.*INT64_MIN@#define INTPTR_MIN              (-0x7fffffffffffffffL - 1)@",
+    "-e", "s@^#define INTPTR_MAX.*INT64_MAX$@#define INTPTR_MAX              0x7fffffffffffffffL@",
+    "-e", "s@^#define UINTPTR_MAX.*UINT64_MAX$@#define UINTPTR_MAX             0xffffffffffffffffUL@",
+    "-e", "s@^#define PTRDIFF_MIN.*INT64_MIN$@#define PTRDIFF_MIN             (-0x7fffffffffffffffL - 1)@",
+    "-e", "s@^#define PTRDIFF_MAX.*INT64_MAX$@#define PTRDIFF_MAX             0x7fffffffffffffffL@",
+    "-e", "s@^#define SIZE_MAX.*UINT64_MAX$@#define SIZE_MAX                0xffffffffffffffffUL@",
+    (char*)NULL };
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * *
+ *
+ *  Description of Irix_Stdint_C99_Macros fix
+ */
+tSCC zIrix_Stdint_C99_MacrosName[] =
+     "irix_stdint_c99_macros";
+
+/*
+ *  File name selection pattern
+ */
+tSCC zIrix_Stdint_C99_MacrosList[] =
+  "stdint-irix65.h\0stdint.h\0";
+/*
+ *  Machine/OS name selection pattern
+ */
+tSCC* apzIrix_Stdint_C99_MacrosMachs[] = {
+        "mips-sgi-irix6.5",
+        (const char*)NULL };
+#define IRIX_STDINT_C99_MACROS_TEST_CT  0
+#define aIrix_Stdint_C99_MacrosTests   (tTestDesc*)NULL
+
+/*
+ *  Fix Command Arguments for Irix_Stdint_C99_Macros
+ */
+static const char* apzIrix_Stdint_C99_MacrosPatch[] = { sed_cmd_z,
+    "-e", "s@^#define INT8_C(x).*int.*_t.*$@#define INT8_C(x)               (x)@",
+    "-e", "s@^#define INT16_C(x).*int.*_t.*$@#define INT16_C(x)              (x)@",
+    "-e", "s@^#define INT32_C(x).*int.*_t.*$@#define INT32_C(x)              (x)@",
+    "-e", "s@^#define INT64_C(x).*int.*_t.*$@#define INT64_C(x)              (x ## LL)@",
+    "-e", "s@^#define UINT8_C(x).*int.*_t.*$@#define UINT8_C(x)              (x)@",
+    "-e", "s@^#define UINT16_C(x).*int.*_t.*$@#define UINT16_C(x)             (x)@",
+    "-e", "s@^#define UINT32_C(x).*int.*_t.*$@#define UINT32_C(x)             (x ## U)@",
+    "-e", "s@^#define UINT64_C(x).*int.*_t.*$@#define UINT64_C(x)             (x ## ULL)@",
+    "-e", "s@^#define INTMAX_C(x).*int.*_t.*$@#define INTMAX_C(x)             (x ## LL)@",
+    "-e", "s@^#define UINTMAX_C(x).*int.*_t.*$@#define UINTMAX_C(x)            (x ## ULL)@",
+    (char*)NULL };
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * *
+ *
  *  Description of Irix_Stdio_Va_List fix
  */
 tSCC zIrix_Stdio_Va_ListName[] =
@@ -4803,7 +5056,7 @@
  *  File name selection pattern
  */
 tSCC zIrix_Stdio_Va_ListList[] =
-  "stdio.h\0";
+  "stdio.h\0internal/stdio_core.h\0";
 /*
  *  Machine/OS name selection pattern
  */
@@ -4829,6 +5082,45 @@
 
 /* * * * * * * * * * * * * * * * * * * * * * * * * *
  *
+ *  Description of Irix_Wcsftime fix
+ */
+tSCC zIrix_WcsftimeName[] =
+     "irix_wcsftime";
+
+/*
+ *  File name selection pattern
+ */
+tSCC zIrix_WcsftimeList[] =
+  "internal/wchar_core.h\0";
+/*
+ *  Machine/OS name selection pattern
+ */
+tSCC* apzIrix_WcsftimeMachs[] = {
+        "mips-sgi-irix6.5",
+        (const char*)NULL };
+
+/*
+ *  content selection pattern - do fix if pattern found
+ */
+tSCC zIrix_WcsftimeSelect0[] =
+       "#if _NO_XOPEN5\n\
+(extern size_t[ \t]+wcsftime.*const char *.*)";
+
+#define    IRIX_WCSFTIME_TEST_CT  1
+static tTestDesc aIrix_WcsftimeTests[] = {
+  { TT_EGREP,    zIrix_WcsftimeSelect0, (regex_t*)NULL }, };
+
+/*
+ *  Fix Command Arguments for Irix_Wcsftime
+ */
+static const char* apzIrix_WcsftimePatch[] = {
+    "format",
+    "#if _NO_XOPEN5 && !defined(__c99)\n\
+%1",
+    (char*)NULL };
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * *
+ *
  *  Description of Kandr_Concat fix
  */
 tSCC zKandr_ConcatName[] =
@@ -6163,6 +6455,44 @@
 
 /* * * * * * * * * * * * * * * * * * * * * * * * * *
  *
+ *  Description of Solaris_Cond_Init fix
+ */
+tSCC zSolaris_Cond_InitName[] =
+     "solaris_cond_init";
+
+/*
+ *  File name selection pattern
+ */
+tSCC zSolaris_Cond_InitList[] =
+  "pthread.h\0";
+/*
+ *  Machine/OS name selection pattern
+ */
+tSCC* apzSolaris_Cond_InitMachs[] = {
+        "*-*-solaris2.8",
+        (const char*)NULL };
+
+/*
+ *  content selection pattern - do fix if pattern found
+ */
+tSCC zSolaris_Cond_InitSelect0[] =
+       "@\\(#\\)pthread.h[ \t]+1.[0-9]+[ \t]+[0-9/]+ SMI";
+
+#define    SOLARIS_COND_INIT_TEST_CT  1
+static tTestDesc aSolaris_Cond_InitTests[] = {
+  { TT_EGREP,    zSolaris_Cond_InitSelect0, (regex_t*)NULL }, };
+
+/*
+ *  Fix Command Arguments for Solaris_Cond_Init
+ */
+static const char* apzSolaris_Cond_InitPatch[] = {
+    "format",
+    "%1, 0x4356%2",
+    "^(#define[ \t]+PTHREAD_COND_INITIALIZER[ \t]+\\{.*0)(\\},[ \t]*0\\}.*)$",
+    (char*)NULL };
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * *
+ *
  *  Description of Solaris_Cxx_Linkage fix
  */
 tSCC zSolaris_Cxx_LinkageName[] =
@@ -6663,7 +6993,7 @@
  */
 static const char* apzSolaris_Pow_Int_OverloadPatch[] = {
     "format",
-    "#if __cplusplus < 201103L\n\
+    "#ifndef __GXX_EXPERIMENTAL_CXX0X__\n\
 %0\n\
 #endif",
     (char*)NULL };
@@ -7130,7 +7460,7 @@
  *  Machine/OS name selection pattern
  */
 tSCC* apzSolaris_Sys_Va_ListMachs[] = {
-        "*-*-solaris2.9",
+        "*-*-solaris2.[89]",
         (const char*)NULL };
 
 /*
@@ -7243,7 +7573,7 @@
  *  File name selection pattern
  */
 tSCC zStdio_Va_ListList[] =
-  "stdio.h\0";
+  "stdio.h\0internal/stdio_core.h\0internal/wchar_core.h\0";
 /*
  *  Machine/OS name selection pattern
  */
@@ -7903,8 +8233,15 @@
 tSCC zSvr4_ProfilSelect0[] =
        "profil\\(unsigned short \\*, unsigned int, unsigned int, unsigned int\\)";
 
-#define    SVR4_PROFIL_TEST_CT  1
+/*
+ *  content bypass pattern - skip fix if pattern found
+ */
+tSCC zSvr4_ProfilBypass0[] =
+       "Silicon Graphics";
+
+#define    SVR4_PROFIL_TEST_CT  2
 static tTestDesc aSvr4_ProfilTests[] = {
+  { TT_NEGREP,   zSvr4_ProfilBypass0, (regex_t*)NULL },
   { TT_EGREP,    zSvr4_ProfilSelect0, (regex_t*)NULL }, };
 
 /*
@@ -8374,272 +8711,6 @@
 
 /* * * * * * * * * * * * * * * * * * * * * * * * * *
  *
- *  Description of Vms_Use_Quoted_Include fix
- */
-tSCC zVms_Use_Quoted_IncludeName[] =
-     "vms_use_quoted_include";
-
-/*
- *  File name selection pattern
- */
-tSCC zVms_Use_Quoted_IncludeList[] =
-  "rtldef/wait.h\0starlet_c/pthread.h\0";
-/*
- *  Machine/OS name selection pattern
- */
-tSCC* apzVms_Use_Quoted_IncludeMachs[] = {
-        "*-*-*vms*",
-        (const char*)NULL };
-
-/*
- *  content selection pattern - do fix if pattern found
- */
-tSCC zVms_Use_Quoted_IncludeSelect0[] =
-       "(#[ \t]*include[ \t]+)<(resource|builtins)\\.h>";
-
-#define    VMS_USE_QUOTED_INCLUDE_TEST_CT  1
-static tTestDesc aVms_Use_Quoted_IncludeTests[] = {
-  { TT_EGREP,    zVms_Use_Quoted_IncludeSelect0, (regex_t*)NULL }, };
-
-/*
- *  Fix Command Arguments for Vms_Use_Quoted_Include
- */
-static const char* apzVms_Use_Quoted_IncludePatch[] = {
-    "format",
-    "%1<sys/%2.h>",
-    (char*)NULL };
-
-/* * * * * * * * * * * * * * * * * * * * * * * * * *
- *
- *  Description of Vms_Add_Missing_Braces fix
- */
-tSCC zVms_Add_Missing_BracesName[] =
-     "vms_add_missing_braces";
-
-/*
- *  File name selection pattern
- */
-tSCC zVms_Add_Missing_BracesList[] =
-  "rtldef/signal.h\0";
-/*
- *  Machine/OS name selection pattern
- */
-tSCC* apzVms_Add_Missing_BracesMachs[] = {
-        "*-*-*vms*",
-        (const char*)NULL };
-
-/*
- *  content selection pattern - do fix if pattern found
- */
-tSCC zVms_Add_Missing_BracesSelect0[] =
-       "(_SIG_[A-Z]+_SET[ \t]+= \\{)(0x[0F]+, 0x[0F]+)";
-
-#define    VMS_ADD_MISSING_BRACES_TEST_CT  1
-static tTestDesc aVms_Add_Missing_BracesTests[] = {
-  { TT_EGREP,    zVms_Add_Missing_BracesSelect0, (regex_t*)NULL }, };
-
-/*
- *  Fix Command Arguments for Vms_Add_Missing_Braces
- */
-static const char* apzVms_Add_Missing_BracesPatch[] = {
-    "format",
-    "%1 {%2} ",
-    (char*)NULL };
-
-/* * * * * * * * * * * * * * * * * * * * * * * * * *
- *
- *  Description of Vms_Do_Not_Redeclare_Hostalias fix
- */
-tSCC zVms_Do_Not_Redeclare_HostaliasName[] =
-     "vms_do_not_redeclare_hostalias";
-
-/*
- *  File name selection pattern
- */
-tSCC zVms_Do_Not_Redeclare_HostaliasList[] =
-  "rtldef/resolv.h\0";
-/*
- *  Machine/OS name selection pattern
- */
-tSCC* apzVms_Do_Not_Redeclare_HostaliasMachs[] = {
-        "*-*-*vms*",
-        (const char*)NULL };
-
-/*
- *  content selection pattern - do fix if pattern found
- */
-tSCC zVms_Do_Not_Redeclare_HostaliasSelect0[] =
-       "(void[ \t]+fp_nquery \\(const u_char \\*, int, FILE \\*\\);)\n\
-(__char_ptr32[ \t]+hostalias \\(const char \\*\\);)";
-
-#define    VMS_DO_NOT_REDECLARE_HOSTALIAS_TEST_CT  1
-static tTestDesc aVms_Do_Not_Redeclare_HostaliasTests[] = {
-  { TT_EGREP,    zVms_Do_Not_Redeclare_HostaliasSelect0, (regex_t*)NULL }, };
-
-/*
- *  Fix Command Arguments for Vms_Do_Not_Redeclare_Hostalias
- */
-static const char* apzVms_Do_Not_Redeclare_HostaliasPatch[] = {
-    "format",
-    "%1\n\
-/* %2 */",
-    (char*)NULL };
-
-/* * * * * * * * * * * * * * * * * * * * * * * * * *
- *
- *  Description of Vms_Decc_Builtin fix
- */
-tSCC zVms_Decc_BuiltinName[] =
-     "vms_decc_builtin";
-
-/*
- *  File name selection pattern
- */
-tSCC zVms_Decc_BuiltinList[] =
-  "rtldef/string.h\0rtldef/time.h\0rtldef/strings.h\0rtldef/socket.h\0";
-/*
- *  Machine/OS name selection pattern
- */
-tSCC* apzVms_Decc_BuiltinMachs[] = {
-        "*-*-*vms*",
-        (const char*)NULL };
-
-/*
- *  content selection pattern - do fix if pattern found
- */
-tSCC zVms_Decc_BuiltinSelect0[] =
-       "(__MEMSET|__MEMMOVE|__MEMCPY|__STRLEN|__STRCPY)";
-
-#define    VMS_DECC_BUILTIN_TEST_CT  1
-static tTestDesc aVms_Decc_BuiltinTests[] = {
-  { TT_EGREP,    zVms_Decc_BuiltinSelect0, (regex_t*)NULL }, };
-
-/*
- *  Fix Command Arguments for Vms_Decc_Builtin
- */
-static const char* apzVms_Decc_BuiltinPatch[] = { sed_cmd_z,
-    "-e", "s@__MEMSET@memset@",
-    "-e", "s@__MEMMOVE@memmove@",
-    "-e", "s@__MEMCPY@memcpy@",
-    "-e", "s@__STRLEN@strlen@",
-    "-e", "s@__STRCPY@strcpy@",
-    (char*)NULL };
-
-/* * * * * * * * * * * * * * * * * * * * * * * * * *
- *
- *  Description of Vms_No_64bit_Getopt fix
- */
-tSCC zVms_No_64bit_GetoptName[] =
-     "vms_no_64bit_getopt";
-
-/*
- *  File name selection pattern
- */
-tSCC zVms_No_64bit_GetoptList[] =
-  "rtldef/stdio.h\0rtldef/unistd.h\0";
-/*
- *  Machine/OS name selection pattern
- */
-tSCC* apzVms_No_64bit_GetoptMachs[] = {
-        "*-*-*vms*",
-        (const char*)NULL };
-
-/*
- *  content selection pattern - do fix if pattern found
- */
-tSCC zVms_No_64bit_GetoptSelect0[] =
-       "^[ \t]*(extern[ \t]*)?(int[ \t]*(getopt|optind|opterr|optopt)|(char \\*optarg))([ \t]*\\(.*\\))?;\n";
-
-#define    VMS_NO_64BIT_GETOPT_TEST_CT  1
-static tTestDesc aVms_No_64bit_GetoptTests[] = {
-  { TT_EGREP,    zVms_No_64bit_GetoptSelect0, (regex_t*)NULL }, };
-
-/*
- *  Fix Command Arguments for Vms_No_64bit_Getopt
- */
-static const char* apzVms_No_64bit_GetoptPatch[] = {
-    "format",
-    "#if __INITIAL_POINTER_SIZE != 64 /* getopt is short ptr only.  */\n\
-%0#endif\n",
-    (char*)NULL };
-
-/* * * * * * * * * * * * * * * * * * * * * * * * * *
- *
- *  Description of Vms_Forward_Declare_Struct fix
- */
-tSCC zVms_Forward_Declare_StructName[] =
-     "vms_forward_declare_struct";
-
-/*
- *  File name selection pattern
- */
-tSCC zVms_Forward_Declare_StructList[] =
-  "rtldef/if.h\0";
-/*
- *  Machine/OS name selection pattern
- */
-tSCC* apzVms_Forward_Declare_StructMachs[] = {
-        "*-*-*vms*",
-        (const char*)NULL };
-
-/*
- *  content selection pattern - do fix if pattern found
- */
-tSCC zVms_Forward_Declare_StructSelect0[] =
-       "(/\\* forward decls for C\\+\\+ \\*/\n\
-)#ifdef __cplusplus\n";
-
-#define    VMS_FORWARD_DECLARE_STRUCT_TEST_CT  1
-static tTestDesc aVms_Forward_Declare_StructTests[] = {
-  { TT_EGREP,    zVms_Forward_Declare_StructSelect0, (regex_t*)NULL }, };
-
-/*
- *  Fix Command Arguments for Vms_Forward_Declare_Struct
- */
-static const char* apzVms_Forward_Declare_StructPatch[] = {
-    "format",
-    "%1#if defined (__cplusplus) || defined (__GNUC__)\n",
-    (char*)NULL };
-
-/* * * * * * * * * * * * * * * * * * * * * * * * * *
- *
- *  Description of Vms_Use_Fast_Setjmp fix
- */
-tSCC zVms_Use_Fast_SetjmpName[] =
-     "vms_use_fast_setjmp";
-
-/*
- *  File name selection pattern
- */
-tSCC zVms_Use_Fast_SetjmpList[] =
-  "rtldef/setjmp.h\0";
-/*
- *  Machine/OS name selection pattern
- */
-tSCC* apzVms_Use_Fast_SetjmpMachs[] = {
-        "*-*-*vms*",
-        (const char*)NULL };
-
-/*
- *  content selection pattern - do fix if pattern found
- */
-tSCC zVms_Use_Fast_SetjmpSelect0[] =
-       "(#[ \t]*if[ \t]*defined\\(__FAST_SETJMP\\)[ \t]*\\|\\|)";
-
-#define    VMS_USE_FAST_SETJMP_TEST_CT  1
-static tTestDesc aVms_Use_Fast_SetjmpTests[] = {
-  { TT_EGREP,    zVms_Use_Fast_SetjmpSelect0, (regex_t*)NULL }, };
-
-/*
- *  Fix Command Arguments for Vms_Use_Fast_Setjmp
- */
-static const char* apzVms_Use_Fast_SetjmpPatch[] = {
-    "format",
-    "%0 defined (__GNUC__) ||",
-    (char*)NULL };
-
-/* * * * * * * * * * * * * * * * * * * * * * * * * *
- *
  *  Description of Void_Null fix
  */
 tSCC zVoid_NullName[] =
@@ -8734,68 +8805,6 @@
 
 /* * * * * * * * * * * * * * * * * * * * * * * * * *
  *
- *  Description of Vxworks_Ioctl_Macro fix
- */
-tSCC zVxworks_Ioctl_MacroName[] =
-     "vxworks_ioctl_macro";
-
-/*
- *  File name selection pattern
- */
-tSCC zVxworks_Ioctl_MacroList[] =
-  "ioLib.h\0";
-/*
- *  Machine/OS name selection pattern
- */
-tSCC* apzVxworks_Ioctl_MacroMachs[] = {
-        "*-*-vxworks*",
-        (const char*)NULL };
-#define VXWORKS_IOCTL_MACRO_TEST_CT  0
-#define aVxworks_Ioctl_MacroTests   (tTestDesc*)NULL
-
-/*
- *  Fix Command Arguments for Vxworks_Ioctl_Macro
- */
-static const char* apzVxworks_Ioctl_MacroPatch[] = {
-    "format",
-    "%0\n\
-#define ioctl(fd, func, arg) (ioctl)(fd, func, (int)(arg))\n",
-    "extern[\t ]+int[\t ]+ioctl[\t ]*\\([\t ,[:alnum:]]*\\);",
-    (char*)NULL };
-
-/* * * * * * * * * * * * * * * * * * * * * * * * * *
- *
- *  Description of Vxworks_Mkdir_Macro fix
- */
-tSCC zVxworks_Mkdir_MacroName[] =
-     "vxworks_mkdir_macro";
-
-/*
- *  File name selection pattern
- */
-tSCC zVxworks_Mkdir_MacroList[] =
-  "sys/stat.h\0";
-/*
- *  Machine/OS name selection pattern
- */
-tSCC* apzVxworks_Mkdir_MacroMachs[] = {
-        "*-*-vxworks*",
-        (const char*)NULL };
-#define VXWORKS_MKDIR_MACRO_TEST_CT  0
-#define aVxworks_Mkdir_MacroTests   (tTestDesc*)NULL
-
-/*
- *  Fix Command Arguments for Vxworks_Mkdir_Macro
- */
-static const char* apzVxworks_Mkdir_MacroPatch[] = {
-    "format",
-    "%0\n\
-#define mkdir(dir, ...) ((void)0, ##__VA_ARGS__, (mkdir)(dir))\n",
-    "extern[\t ]+STATUS[\t ]+mkdir[\t ]*\\([\t ]*const[\t ]+char[\t ]*\\*[\t ]*(|[_[:alpha:]][_[:alnum:]]*)\\)[\t ]*;",
-    (char*)NULL };
-
-/* * * * * * * * * * * * * * * * * * * * * * * * * *
- *
  *  Description of Vxworks_Needs_Vxtypes fix
  */
 tSCC zVxworks_Needs_VxtypesName[] =
@@ -8879,42 +8888,6 @@
 
 /* * * * * * * * * * * * * * * * * * * * * * * * * *
  *
- *  Description of Vxworks_Regs fix
- */
-tSCC zVxworks_RegsName[] =
-     "vxworks_regs";
-
-/*
- *  File name selection pattern
- */
-#define zVxworks_RegsList (char*)NULL
-/*
- *  Machine/OS name selection pattern
- */
-tSCC* apzVxworks_RegsMachs[] = {
-        "*-*-vxworks*",
-        (const char*)NULL };
-
-/*
- *  content selection pattern - do fix if pattern found
- */
-tSCC zVxworks_RegsSelect0[] =
-       "#[\t ]*include[\t ]+[<\"]regs.h[>\"]";
-
-#define    VXWORKS_REGS_TEST_CT  1
-static tTestDesc aVxworks_RegsTests[] = {
-  { TT_EGREP,    zVxworks_RegsSelect0, (regex_t*)NULL }, };
-
-/*
- *  Fix Command Arguments for Vxworks_Regs
- */
-static const char* apzVxworks_RegsPatch[] = {
-    "format",
-    "#include <arch/../regs.h>",
-    (char*)NULL };
-
-/* * * * * * * * * * * * * * * * * * * * * * * * * *
- *
  *  Description of Vxworks_Time fix
  */
 tSCC zVxworks_TimeName[] =
@@ -8965,36 +8938,6 @@
 
 /* * * * * * * * * * * * * * * * * * * * * * * * * *
  *
- *  Description of Vxworks_Write_Const fix
- */
-tSCC zVxworks_Write_ConstName[] =
-     "vxworks_write_const";
-
-/*
- *  File name selection pattern
- */
-tSCC zVxworks_Write_ConstList[] =
-  "ioLib.h\0";
-/*
- *  Machine/OS name selection pattern
- */
-tSCC* apzVxworks_Write_ConstMachs[] = {
-        "*-*-vxworks*",
-        (const char*)NULL };
-#define VXWORKS_WRITE_CONST_TEST_CT  0
-#define aVxworks_Write_ConstTests   (tTestDesc*)NULL
-
-/*
- *  Fix Command Arguments for Vxworks_Write_Const
- */
-static const char* apzVxworks_Write_ConstPatch[] = {
-    "format",
-    "extern int  write (int, const char*, size_t);",
-    "extern[\t ]+int[\t ]+write[\t ]*\\([\t ]*int[\t ]*,[\t ]*char[\t ]*\\*[\t ]*,[\t ]*size_t[\t ]*\\)[\t ]*;",
-    (char*)NULL };
-
-/* * * * * * * * * * * * * * * * * * * * * * * * * *
- *
  *  Description of X11_Class fix
  */
 tSCC zX11_ClassName[] =
@@ -9158,141 +9101,32 @@
 #endif /* !defined __STDC__ */",
     (char*)NULL };
 
-/* * * * * * * * * * * * * * * * * * * * * * * * * *
- *
- *  Description of Feraiseexcept_Nosse_Invalid fix
- */
-tSCC zFeraiseexcept_Nosse_InvalidName[] =
-     "feraiseexcept_nosse_invalid";
-
-/*
- *  File name selection pattern
- */
-tSCC zFeraiseexcept_Nosse_InvalidList[] =
-  "bits/fenv.h\0";
-/*
- *  Machine/OS name selection pattern
- */
-tSCC* apzFeraiseexcept_Nosse_InvalidMachs[] = {
-        "i[34567]86-*-linux*",
-        "x86*-linux*",
-        "amd64-*-linux*",
-        (const char*)NULL };
-
-/*
- *  content selection pattern - do fix if pattern found
- */
-tSCC zFeraiseexcept_Nosse_InvalidSelect0[] =
-       "^([\t ]*)__asm__ __volatile__ \\(\"divss %0, %0 *\" : : \"x\" \\(__f\\)\\);$";
-
-/*
- *  content bypass pattern - skip fix if pattern found
- */
-tSCC zFeraiseexcept_Nosse_InvalidBypass0[] =
-       "\"fdiv .*; fwait\"";
-
-#define    FERAISEEXCEPT_NOSSE_INVALID_TEST_CT  2
-static tTestDesc aFeraiseexcept_Nosse_InvalidTests[] = {
-  { TT_NEGREP,   zFeraiseexcept_Nosse_InvalidBypass0, (regex_t*)NULL },
-  { TT_EGREP,    zFeraiseexcept_Nosse_InvalidSelect0, (regex_t*)NULL }, };
-
-/*
- *  Fix Command Arguments for Feraiseexcept_Nosse_Invalid
- */
-static const char* apzFeraiseexcept_Nosse_InvalidPatch[] = {
-    "format",
-    "# ifdef __SSE_MATH__\n\
-%0\n\
-# else\n\
-%1__asm__ __volatile__ (\"fdiv %%%%st, %%%%st(0); fwait\"\n\
-%1\t\t\t: \"=t\" (__f) : \"0\" (__f));\n\
-# endif",
-    (char*)NULL };
-
-/* * * * * * * * * * * * * * * * * * * * * * * * * *
- *
- *  Description of Feraiseexcept_Nosse_Divbyzero fix
- */
-tSCC zFeraiseexcept_Nosse_DivbyzeroName[] =
-     "feraiseexcept_nosse_divbyzero";
-
-/*
- *  File name selection pattern
- */
-tSCC zFeraiseexcept_Nosse_DivbyzeroList[] =
-  "bits/fenv.h\0";
-/*
- *  Machine/OS name selection pattern
- */
-tSCC* apzFeraiseexcept_Nosse_DivbyzeroMachs[] = {
-        "i[34567]86-*-linux*",
-        "x86*-linux*",
-        "amd64-*-linux*",
-        (const char*)NULL };
-
-/*
- *  content selection pattern - do fix if pattern found
- */
-tSCC zFeraiseexcept_Nosse_DivbyzeroSelect0[] =
-       "^([\t ]*)__asm__ __volatile__ \\(\"divss %1, %0 *\" : : \"x\" \\(__f\\), \"x\" \\(__g\\)\\);$";
-
-/*
- *  content bypass pattern - skip fix if pattern found
- */
-tSCC zFeraiseexcept_Nosse_DivbyzeroBypass0[] =
-       "\"fdivp .*; fwait\"";
-
-#define    FERAISEEXCEPT_NOSSE_DIVBYZERO_TEST_CT  2
-static tTestDesc aFeraiseexcept_Nosse_DivbyzeroTests[] = {
-  { TT_NEGREP,   zFeraiseexcept_Nosse_DivbyzeroBypass0, (regex_t*)NULL },
-  { TT_EGREP,    zFeraiseexcept_Nosse_DivbyzeroSelect0, (regex_t*)NULL }, };
-
-/*
- *  Fix Command Arguments for Feraiseexcept_Nosse_Divbyzero
- */
-static const char* apzFeraiseexcept_Nosse_DivbyzeroPatch[] = {
-    "format",
-    "# ifdef __SSE_MATH__\n\
-%0\n\
-# else\n\
-%1__asm__ __volatile__ (\"fdivp %%%%st, %%%%st(1); fwait\"\n\
-%1\t\t\t: \"=t\" (__f) : \"0\" (__f), \"u\" (__g) : \"st(1)\");\n\
-# endif",
-    (char*)NULL };
-
 
 /* * * * * * * * * * * * * * * * * * * * * * * * * *
  *
  *  List of all fixes
  */
-#define REGEX_COUNT          264
-#define MACH_LIST_SIZE_LIMIT 187
-#define FIX_COUNT            226
+#define REGEX_COUNT          266
+#define MACH_LIST_SIZE_LIMIT 181
+#define FIX_COUNT            224
 
 /*
  *  Enumerate the fixes
  */
 typedef enum {
     AAB_AIX_STDIO_FIXIDX,
-    AAB_AIX_FCNTL_FIXIDX,
     AAB_DARWIN7_9_LONG_DOUBLE_FUNCS_FIXIDX,
+    AAB_DARWIN7_9_LONG_DOUBLE_FUNCS_2_FIXIDX,
     AAB_FD_ZERO_ASM_POSIX_TYPES_H_FIXIDX,
     AAB_FD_ZERO_GNU_TYPES_H_FIXIDX,
     AAB_FD_ZERO_SELECTBITS_H_FIXIDX,
     AAB_SOLARIS_SYS_VARARGS_H_FIXIDX,
     AAB_SUN_MEMCPY_FIXIDX,
-    AAB_VXWORKS_ASSERT_FIXIDX,
-    AAB_VXWORKS_REGS_VXTYPES_FIXIDX,
-    AAB_VXWORKS_STDINT_FIXIDX,
-    AAB_VXWORKS_UNISTD_FIXIDX,
     AIX_COMPLEX_FIXIDX,
     AIX_MALLOC_FIXIDX,
     AIX_NET_IF_ARP_FIXIDX,
     AIX_ONCE_INIT_1_FIXIDX,
     AIX_ONCE_INIT_2_FIXIDX,
-    AIX_MUTEX_INITIALIZER_1_FIXIDX,
-    AIX_COND_INITIALIZER_1_FIXIDX,
-    AIX_RWLOCK_INITIALIZER_1_FIXIDX,
     AIX_PTHREAD_FIXIDX,
     AIX_STDINT_1_FIXIDX,
     AIX_STDINT_2_FIXIDX,
@@ -9303,10 +9137,17 @@
     AIX_SYSWAIT_2_FIXIDX,
     AIX_VOLATILE_FIXIDX,
     ALPHA___ASSERT_FIXIDX,
+    ALPHA___EXTERN_PREFIX_FIXIDX,
+    ALPHA___EXTERN_PREFIX_STANDARDS_FIXIDX,
+    ALPHA___EXTERN_PREFIX_SYS_STAT_FIXIDX,
     ALPHA_ASSERT_FIXIDX,
+    ALPHA_BAD_LVAL_FIXIDX,
     ALPHA_GETOPT_FIXIDX,
     ALPHA_IF_SEMICOLON_FIXIDX,
     ALPHA_PARENS_FIXIDX,
+    ALPHA_PTHREAD_FIXIDX,
+    ALPHA_PTHREAD_GCC_FIXIDX,
+    ALPHA_PTHREAD_INIT_FIXIDX,
     ALPHA_SBRK_FIXIDX,
     AVOID_BOOL_DEFINE_FIXIDX,
     AVOID_BOOL_TYPE_FIXIDX,
@@ -9322,7 +9163,6 @@
     CTRL_QUOTES_DEF_FIXIDX,
     CTRL_QUOTES_USE_FIXIDX,
     CXX_UNREADY_FIXIDX,
-    DARWIN_9_LONG_DOUBLE_FUNCS_2_FIXIDX,
     DARWIN_EXTERNC_FIXIDX,
     DARWIN_GCC4_BREAKAGE_FIXIDX,
     DARWIN_PRIVATE_EXTERN_FIXIDX,
@@ -9386,8 +9226,19 @@
     IO_QUOTES_DEF_FIXIDX,
     IO_QUOTES_USE_FIXIDX,
     IP_MISSING_SEMI_FIXIDX,
+    IRIX___RESTRICT_FIXIDX,
+    IRIX___GENERIC1_FIXIDX,
+    IRIX___GENERIC2_FIXIDX,
+    IRIX_ASM_APOSTROPHE_FIXIDX,
+    IRIX_COMPLEX_FIXIDX,
     IRIX_LIMITS_CONST_FIXIDX,
+    IRIX_PTHREAD_INIT_FIXIDX,
+    IRIX_SOCKLEN_T_FIXIDX,
+    IRIX_STDINT_C99_MODE_FIXIDX,
+    IRIX_STDINT_C99_TYPES_FIXIDX,
+    IRIX_STDINT_C99_MACROS_FIXIDX,
     IRIX_STDIO_VA_LIST_FIXIDX,
+    IRIX_WCSFTIME_FIXIDX,
     KANDR_CONCAT_FIXIDX,
     LINUX_IA64_UCONTEXT_FIXIDX,
     LYNXOS_NO_WARNING_IN_SYS_TIME_H_FIXIDX,
@@ -9422,6 +9273,7 @@
     SOLARIS___RESTRICT_FIXIDX,
     SOLARIS_COMPLEX_FIXIDX,
     SOLARIS_COMPLEX_CXX_FIXIDX,
+    SOLARIS_COND_INIT_FIXIDX,
     SOLARIS_CXX_LINKAGE_FIXIDX,
     SOLARIS_GETC_STRICT_STDC_FIXIDX,
     SOLARIS_LONGJMP_NORETURN_FIXIDX,
@@ -9477,28 +9329,15 @@
     VMS_DEFINE_CAN_USE_EXTERN_PREFIX_FIXIDX,
     VMS_USE_PRAGMA_EXTERN_MODEL_FIXIDX,
     VMS_DISABLE_DECC_STRING_BUILTINS_FIXIDX,
-    VMS_USE_QUOTED_INCLUDE_FIXIDX,
-    VMS_ADD_MISSING_BRACES_FIXIDX,
-    VMS_DO_NOT_REDECLARE_HOSTALIAS_FIXIDX,
-    VMS_DECC_BUILTIN_FIXIDX,
-    VMS_NO_64BIT_GETOPT_FIXIDX,
-    VMS_FORWARD_DECLARE_STRUCT_FIXIDX,
-    VMS_USE_FAST_SETJMP_FIXIDX,
     VOID_NULL_FIXIDX,
     VXWORKS_GCC_PROBLEM_FIXIDX,
-    VXWORKS_IOCTL_MACRO_FIXIDX,
-    VXWORKS_MKDIR_MACRO_FIXIDX,
     VXWORKS_NEEDS_VXTYPES_FIXIDX,
     VXWORKS_NEEDS_VXWORKS_FIXIDX,
-    VXWORKS_REGS_FIXIDX,
     VXWORKS_TIME_FIXIDX,
-    VXWORKS_WRITE_CONST_FIXIDX,
     X11_CLASS_FIXIDX,
     X11_CLASS_USAGE_FIXIDX,
     X11_NEW_FIXIDX,
-    X11_SPRINTF_FIXIDX,
-    FERAISEEXCEPT_NOSSE_INVALID_FIXIDX,
-    FERAISEEXCEPT_NOSSE_DIVBYZERO_FIXIDX
+    X11_SPRINTF_FIXIDX
 } t_fixinc_idx;
 
 tFixDesc fixDescList[ FIX_COUNT ] = {
@@ -9507,16 +9346,16 @@
      AAB_AIX_STDIO_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
      aAab_Aix_StdioTests,   apzAab_Aix_StdioPatch, 0 },
 
-  {  zAab_Aix_FcntlName,    zAab_Aix_FcntlList,
-     apzAab_Aix_FcntlMachs,
-     AAB_AIX_FCNTL_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
-     aAab_Aix_FcntlTests,   apzAab_Aix_FcntlPatch, 0 },
-
   {  zAab_Darwin7_9_Long_Double_FuncsName,    zAab_Darwin7_9_Long_Double_FuncsList,
      apzAab_Darwin7_9_Long_Double_FuncsMachs,
      AAB_DARWIN7_9_LONG_DOUBLE_FUNCS_TEST_CT, FD_MACH_ONLY | FD_REPLACEMENT,
      aAab_Darwin7_9_Long_Double_FuncsTests,   apzAab_Darwin7_9_Long_Double_FuncsPatch, 0 },
 
+  {  zAab_Darwin7_9_Long_Double_Funcs_2Name,    zAab_Darwin7_9_Long_Double_Funcs_2List,
+     apzAab_Darwin7_9_Long_Double_Funcs_2Machs,
+     AAB_DARWIN7_9_LONG_DOUBLE_FUNCS_2_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
+     aAab_Darwin7_9_Long_Double_Funcs_2Tests,   apzAab_Darwin7_9_Long_Double_Funcs_2Patch, 0 },
+
   {  zAab_Fd_Zero_Asm_Posix_Types_HName,    zAab_Fd_Zero_Asm_Posix_Types_HList,
      apzAab_Fd_Zero_Asm_Posix_Types_HMachs,
      AAB_FD_ZERO_ASM_POSIX_TYPES_H_TEST_CT, FD_MACH_ONLY | FD_REPLACEMENT,
@@ -9542,26 +9381,6 @@
      AAB_SUN_MEMCPY_TEST_CT, FD_MACH_ONLY | FD_REPLACEMENT,
      aAab_Sun_MemcpyTests,   apzAab_Sun_MemcpyPatch, 0 },
 
-  {  zAab_Vxworks_AssertName,    zAab_Vxworks_AssertList,
-     apzAab_Vxworks_AssertMachs,
-     AAB_VXWORKS_ASSERT_TEST_CT, FD_MACH_ONLY | FD_REPLACEMENT,
-     aAab_Vxworks_AssertTests,   apzAab_Vxworks_AssertPatch, 0 },
-
-  {  zAab_Vxworks_Regs_VxtypesName,    zAab_Vxworks_Regs_VxtypesList,
-     apzAab_Vxworks_Regs_VxtypesMachs,
-     AAB_VXWORKS_REGS_VXTYPES_TEST_CT, FD_MACH_ONLY | FD_REPLACEMENT,
-     aAab_Vxworks_Regs_VxtypesTests,   apzAab_Vxworks_Regs_VxtypesPatch, 0 },
-
-  {  zAab_Vxworks_StdintName,    zAab_Vxworks_StdintList,
-     apzAab_Vxworks_StdintMachs,
-     AAB_VXWORKS_STDINT_TEST_CT, FD_MACH_ONLY | FD_REPLACEMENT,
-     aAab_Vxworks_StdintTests,   apzAab_Vxworks_StdintPatch, 0 },
-
-  {  zAab_Vxworks_UnistdName,    zAab_Vxworks_UnistdList,
-     apzAab_Vxworks_UnistdMachs,
-     AAB_VXWORKS_UNISTD_TEST_CT, FD_MACH_ONLY | FD_REPLACEMENT,
-     aAab_Vxworks_UnistdTests,   apzAab_Vxworks_UnistdPatch, 0 },
-
   {  zAix_ComplexName,    zAix_ComplexList,
      apzAix_ComplexMachs,
      AIX_COMPLEX_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
@@ -9587,21 +9406,6 @@
      AIX_ONCE_INIT_2_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
      aAix_Once_Init_2Tests,   apzAix_Once_Init_2Patch, 0 },
 
-  {  zAix_Mutex_Initializer_1Name,    zAix_Mutex_Initializer_1List,
-     apzAix_Mutex_Initializer_1Machs,
-     AIX_MUTEX_INITIALIZER_1_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
-     aAix_Mutex_Initializer_1Tests,   apzAix_Mutex_Initializer_1Patch, 0 },
-
-  {  zAix_Cond_Initializer_1Name,    zAix_Cond_Initializer_1List,
-     apzAix_Cond_Initializer_1Machs,
-     AIX_COND_INITIALIZER_1_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
-     aAix_Cond_Initializer_1Tests,   apzAix_Cond_Initializer_1Patch, 0 },
-
-  {  zAix_Rwlock_Initializer_1Name,    zAix_Rwlock_Initializer_1List,
-     apzAix_Rwlock_Initializer_1Machs,
-     AIX_RWLOCK_INITIALIZER_1_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
-     aAix_Rwlock_Initializer_1Tests,   apzAix_Rwlock_Initializer_1Patch, 0 },
-
   {  zAix_PthreadName,    zAix_PthreadList,
      apzAix_PthreadMachs,
      AIX_PTHREAD_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
@@ -9652,11 +9456,31 @@
      ALPHA___ASSERT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
      aAlpha___AssertTests,   apzAlpha___AssertPatch, 0 },
 
+  {  zAlpha___Extern_PrefixName,    zAlpha___Extern_PrefixList,
+     apzAlpha___Extern_PrefixMachs,
+     ALPHA___EXTERN_PREFIX_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
+     aAlpha___Extern_PrefixTests,   apzAlpha___Extern_PrefixPatch, 0 },
+
+  {  zAlpha___Extern_Prefix_StandardsName,    zAlpha___Extern_Prefix_StandardsList,
+     apzAlpha___Extern_Prefix_StandardsMachs,
+     ALPHA___EXTERN_PREFIX_STANDARDS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
+     aAlpha___Extern_Prefix_StandardsTests,   apzAlpha___Extern_Prefix_StandardsPatch, 0 },
+
+  {  zAlpha___Extern_Prefix_Sys_StatName,    zAlpha___Extern_Prefix_Sys_StatList,
+     apzAlpha___Extern_Prefix_Sys_StatMachs,
+     ALPHA___EXTERN_PREFIX_SYS_STAT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
+     aAlpha___Extern_Prefix_Sys_StatTests,   apzAlpha___Extern_Prefix_Sys_StatPatch, 0 },
+
   {  zAlpha_AssertName,    zAlpha_AssertList,
      apzAlpha_AssertMachs,
      ALPHA_ASSERT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
      aAlpha_AssertTests,   apzAlpha_AssertPatch, 0 },
 
+  {  zAlpha_Bad_LvalName,    zAlpha_Bad_LvalList,
+     apzAlpha_Bad_LvalMachs,
+     ALPHA_BAD_LVAL_TEST_CT, FD_MACH_ONLY,
+     aAlpha_Bad_LvalTests,   apzAlpha_Bad_LvalPatch, 0 },
+
   {  zAlpha_GetoptName,    zAlpha_GetoptList,
      apzAlpha_GetoptMachs,
      ALPHA_GETOPT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
@@ -9672,6 +9496,21 @@
      ALPHA_PARENS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
      aAlpha_ParensTests,   apzAlpha_ParensPatch, 0 },
 
+  {  zAlpha_PthreadName,    zAlpha_PthreadList,
+     apzAlpha_PthreadMachs,
+     ALPHA_PTHREAD_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
+     aAlpha_PthreadTests,   apzAlpha_PthreadPatch, 0 },
+
+  {  zAlpha_Pthread_GccName,    zAlpha_Pthread_GccList,
+     apzAlpha_Pthread_GccMachs,
+     ALPHA_PTHREAD_GCC_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
+     aAlpha_Pthread_GccTests,   apzAlpha_Pthread_GccPatch, 0 },
+
+  {  zAlpha_Pthread_InitName,    zAlpha_Pthread_InitList,
+     apzAlpha_Pthread_InitMachs,
+     ALPHA_PTHREAD_INIT_TEST_CT, FD_MACH_ONLY,
+     aAlpha_Pthread_InitTests,   apzAlpha_Pthread_InitPatch, 0 },
+
   {  zAlpha_SbrkName,    zAlpha_SbrkList,
      apzAlpha_SbrkMachs,
      ALPHA_SBRK_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
@@ -9747,11 +9586,6 @@
      CXX_UNREADY_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
      aCxx_UnreadyTests,   apzCxx_UnreadyPatch, 0 },
 
-  {  zDarwin_9_Long_Double_Funcs_2Name,    zDarwin_9_Long_Double_Funcs_2List,
-     apzDarwin_9_Long_Double_Funcs_2Machs,
-     DARWIN_9_LONG_DOUBLE_FUNCS_2_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
-     aDarwin_9_Long_Double_Funcs_2Tests,   apzDarwin_9_Long_Double_Funcs_2Patch, 0 },
-
   {  zDarwin_ExterncName,    zDarwin_ExterncList,
      apzDarwin_ExterncMachs,
      DARWIN_EXTERNC_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
@@ -10067,16 +9901,71 @@
      IP_MISSING_SEMI_TEST_CT, FD_MACH_ONLY,
      aIp_Missing_SemiTests,   apzIp_Missing_SemiPatch, 0 },
 
+  {  zIrix___RestrictName,    zIrix___RestrictList,
+     apzIrix___RestrictMachs,
+     IRIX___RESTRICT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
+     aIrix___RestrictTests,   apzIrix___RestrictPatch, 0 },
+
+  {  zIrix___Generic1Name,    zIrix___Generic1List,
+     apzIrix___Generic1Machs,
+     IRIX___GENERIC1_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
+     aIrix___Generic1Tests,   apzIrix___Generic1Patch, 0 },
+
+  {  zIrix___Generic2Name,    zIrix___Generic2List,
+     apzIrix___Generic2Machs,
+     IRIX___GENERIC2_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
+     aIrix___Generic2Tests,   apzIrix___Generic2Patch, 0 },
+
+  {  zIrix_Asm_ApostropheName,    zIrix_Asm_ApostropheList,
+     apzIrix_Asm_ApostropheMachs,
+     IRIX_ASM_APOSTROPHE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
+     aIrix_Asm_ApostropheTests,   apzIrix_Asm_ApostrophePatch, 0 },
+
+  {  zIrix_ComplexName,    zIrix_ComplexList,
+     apzIrix_ComplexMachs,
+     IRIX_COMPLEX_TEST_CT, FD_MACH_ONLY,
+     aIrix_ComplexTests,   apzIrix_ComplexPatch, 0 },
+
   {  zIrix_Limits_ConstName,    zIrix_Limits_ConstList,
      apzIrix_Limits_ConstMachs,
      IRIX_LIMITS_CONST_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
      aIrix_Limits_ConstTests,   apzIrix_Limits_ConstPatch, 0 },
 
+  {  zIrix_Pthread_InitName,    zIrix_Pthread_InitList,
+     apzIrix_Pthread_InitMachs,
+     IRIX_PTHREAD_INIT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
+     aIrix_Pthread_InitTests,   apzIrix_Pthread_InitPatch, 0 },
+
+  {  zIrix_Socklen_TName,    zIrix_Socklen_TList,
+     apzIrix_Socklen_TMachs,
+     IRIX_SOCKLEN_T_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
+     aIrix_Socklen_TTests,   apzIrix_Socklen_TPatch, 0 },
+
+  {  zIrix_Stdint_C99_ModeName,    zIrix_Stdint_C99_ModeList,
+     apzIrix_Stdint_C99_ModeMachs,
+     IRIX_STDINT_C99_MODE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
+     aIrix_Stdint_C99_ModeTests,   apzIrix_Stdint_C99_ModePatch, 0 },
+
+  {  zIrix_Stdint_C99_TypesName,    zIrix_Stdint_C99_TypesList,
+     apzIrix_Stdint_C99_TypesMachs,
+     IRIX_STDINT_C99_TYPES_TEST_CT, FD_MACH_ONLY,
+     aIrix_Stdint_C99_TypesTests,   apzIrix_Stdint_C99_TypesPatch, 0 },
+
+  {  zIrix_Stdint_C99_MacrosName,    zIrix_Stdint_C99_MacrosList,
+     apzIrix_Stdint_C99_MacrosMachs,
+     IRIX_STDINT_C99_MACROS_TEST_CT, FD_MACH_ONLY,
+     aIrix_Stdint_C99_MacrosTests,   apzIrix_Stdint_C99_MacrosPatch, 0 },
+
   {  zIrix_Stdio_Va_ListName,    zIrix_Stdio_Va_ListList,
      apzIrix_Stdio_Va_ListMachs,
      IRIX_STDIO_VA_LIST_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
      aIrix_Stdio_Va_ListTests,   apzIrix_Stdio_Va_ListPatch, 0 },
 
+  {  zIrix_WcsftimeName,    zIrix_WcsftimeList,
+     apzIrix_WcsftimeMachs,
+     IRIX_WCSFTIME_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
+     aIrix_WcsftimeTests,   apzIrix_WcsftimePatch, 0 },
+
   {  zKandr_ConcatName,    zKandr_ConcatList,
      apzKandr_ConcatMachs,
      KANDR_CONCAT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
@@ -10247,6 +10136,11 @@
      SOLARIS_COMPLEX_CXX_TEST_CT, FD_MACH_ONLY,
      aSolaris_Complex_CxxTests,   apzSolaris_Complex_CxxPatch, 0 },
 
+  {  zSolaris_Cond_InitName,    zSolaris_Cond_InitList,
+     apzSolaris_Cond_InitMachs,
+     SOLARIS_COND_INIT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
+     aSolaris_Cond_InitTests,   apzSolaris_Cond_InitPatch, 0 },
+
   {  zSolaris_Cxx_LinkageName,    zSolaris_Cxx_LinkageList,
      apzSolaris_Cxx_LinkageMachs,
      SOLARIS_CXX_LINKAGE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
@@ -10522,41 +10416,6 @@
      VMS_DISABLE_DECC_STRING_BUILTINS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
      aVms_Disable_Decc_String_BuiltinsTests,   apzVms_Disable_Decc_String_BuiltinsPatch, 0 },
 
-  {  zVms_Use_Quoted_IncludeName,    zVms_Use_Quoted_IncludeList,
-     apzVms_Use_Quoted_IncludeMachs,
-     VMS_USE_QUOTED_INCLUDE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
-     aVms_Use_Quoted_IncludeTests,   apzVms_Use_Quoted_IncludePatch, 0 },
-
-  {  zVms_Add_Missing_BracesName,    zVms_Add_Missing_BracesList,
-     apzVms_Add_Missing_BracesMachs,
-     VMS_ADD_MISSING_BRACES_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
-     aVms_Add_Missing_BracesTests,   apzVms_Add_Missing_BracesPatch, 0 },
-
-  {  zVms_Do_Not_Redeclare_HostaliasName,    zVms_Do_Not_Redeclare_HostaliasList,
-     apzVms_Do_Not_Redeclare_HostaliasMachs,
-     VMS_DO_NOT_REDECLARE_HOSTALIAS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
-     aVms_Do_Not_Redeclare_HostaliasTests,   apzVms_Do_Not_Redeclare_HostaliasPatch, 0 },
-
-  {  zVms_Decc_BuiltinName,    zVms_Decc_BuiltinList,
-     apzVms_Decc_BuiltinMachs,
-     VMS_DECC_BUILTIN_TEST_CT, FD_MACH_ONLY,
-     aVms_Decc_BuiltinTests,   apzVms_Decc_BuiltinPatch, 0 },
-
-  {  zVms_No_64bit_GetoptName,    zVms_No_64bit_GetoptList,
-     apzVms_No_64bit_GetoptMachs,
-     VMS_NO_64BIT_GETOPT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
-     aVms_No_64bit_GetoptTests,   apzVms_No_64bit_GetoptPatch, 0 },
-
-  {  zVms_Forward_Declare_StructName,    zVms_Forward_Declare_StructList,
-     apzVms_Forward_Declare_StructMachs,
-     VMS_FORWARD_DECLARE_STRUCT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
-     aVms_Forward_Declare_StructTests,   apzVms_Forward_Declare_StructPatch, 0 },
-
-  {  zVms_Use_Fast_SetjmpName,    zVms_Use_Fast_SetjmpList,
-     apzVms_Use_Fast_SetjmpMachs,
-     VMS_USE_FAST_SETJMP_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
-     aVms_Use_Fast_SetjmpTests,   apzVms_Use_Fast_SetjmpPatch, 0 },
-
   {  zVoid_NullName,    zVoid_NullList,
      apzVoid_NullMachs,
      VOID_NULL_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
@@ -10567,16 +10426,6 @@
      VXWORKS_GCC_PROBLEM_TEST_CT, FD_MACH_ONLY,
      aVxworks_Gcc_ProblemTests,   apzVxworks_Gcc_ProblemPatch, 0 },
 
-  {  zVxworks_Ioctl_MacroName,    zVxworks_Ioctl_MacroList,
-     apzVxworks_Ioctl_MacroMachs,
-     VXWORKS_IOCTL_MACRO_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
-     aVxworks_Ioctl_MacroTests,   apzVxworks_Ioctl_MacroPatch, 0 },
-
-  {  zVxworks_Mkdir_MacroName,    zVxworks_Mkdir_MacroList,
-     apzVxworks_Mkdir_MacroMachs,
-     VXWORKS_MKDIR_MACRO_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
-     aVxworks_Mkdir_MacroTests,   apzVxworks_Mkdir_MacroPatch, 0 },
-
   {  zVxworks_Needs_VxtypesName,    zVxworks_Needs_VxtypesList,
      apzVxworks_Needs_VxtypesMachs,
      VXWORKS_NEEDS_VXTYPES_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
@@ -10587,21 +10436,11 @@
      VXWORKS_NEEDS_VXWORKS_TEST_CT, FD_MACH_ONLY,
      aVxworks_Needs_VxworksTests,   apzVxworks_Needs_VxworksPatch, 0 },
 
-  {  zVxworks_RegsName,    zVxworks_RegsList,
-     apzVxworks_RegsMachs,
-     VXWORKS_REGS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
-     aVxworks_RegsTests,   apzVxworks_RegsPatch, 0 },
-
   {  zVxworks_TimeName,    zVxworks_TimeList,
      apzVxworks_TimeMachs,
      VXWORKS_TIME_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
      aVxworks_TimeTests,   apzVxworks_TimePatch, 0 },
 
-  {  zVxworks_Write_ConstName,    zVxworks_Write_ConstList,
-     apzVxworks_Write_ConstMachs,
-     VXWORKS_WRITE_CONST_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
-     aVxworks_Write_ConstTests,   apzVxworks_Write_ConstPatch, 0 },
-
   {  zX11_ClassName,    zX11_ClassList,
      apzX11_ClassMachs,
      X11_CLASS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
@@ -10620,15 +10459,5 @@
   {  zX11_SprintfName,    zX11_SprintfList,
      apzX11_SprintfMachs,
      X11_SPRINTF_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
-     aX11_SprintfTests,   apzX11_SprintfPatch, 0 },
-
-  {  zFeraiseexcept_Nosse_InvalidName,    zFeraiseexcept_Nosse_InvalidList,
-     apzFeraiseexcept_Nosse_InvalidMachs,
-     FERAISEEXCEPT_NOSSE_INVALID_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
-     aFeraiseexcept_Nosse_InvalidTests,   apzFeraiseexcept_Nosse_InvalidPatch, 0 },
-
-  {  zFeraiseexcept_Nosse_DivbyzeroName,    zFeraiseexcept_Nosse_DivbyzeroList,
-     apzFeraiseexcept_Nosse_DivbyzeroMachs,
-     FERAISEEXCEPT_NOSSE_DIVBYZERO_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,
-     aFeraiseexcept_Nosse_DivbyzeroTests,   apzFeraiseexcept_Nosse_DivbyzeroPatch, 0 }
+     aX11_SprintfTests,   apzX11_SprintfPatch, 0 }
 };
diff -N -u -r -w gcc-4.8.2/fixincludes/fixlib.h gcc-4.8.2-patched/fixincludes/fixlib.h
--- gcc-4.8.2/fixincludes/fixlib.h	2013-01-14 11:13:09.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/fixlib.h	2019-08-06 12:58:55.541229040 +0000
@@ -3,7 +3,7 @@
    files which are fixed to work correctly with ANSI C and placed in a
    directory that GCC will search.
 
-   Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2004, 2009, 2012
+   Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2004, 2009
    Free Software Foundation, Inc.
 
 This file is part of GCC.
@@ -140,10 +140,7 @@
          "amount of user entertainment" )            \
                                                      \
   _ENV_( pz_find_base, BOOL_TRUE, "FIND_BASE",       \
-         "leader to trim from file names" )          \
-                                                     \
-  _ENV_( pz_test_mode, BOOL_FALSE, "TEST_MODE",      \
-         "run fixincludes in test mode" )
+         "leader to trim from file names" )
 
 #define _ENV_(v,m,n,t)   extern tCC* v;
 ENV_TABLE
@@ -214,27 +211,6 @@
 
 extern int gnu_type_map_ct;
 
-typedef enum {
-  VERB_SILENT = 0,
-  VERB_FIXES,
-  VERB_APPLIES,
-  VERB_PROGRESS,
-  VERB_TESTS,
-  VERB_EVERYTHING
-} te_verbose;
-
-extern te_verbose  verbose_level;
-
-#define VLEVEL(l)  ((unsigned int) verbose_level >= (unsigned int) l)
-#define NOT_SILENT VLEVEL(VERB_FIXES)
-
-typedef enum {
-  TESTING_OFF = 0,
-  TESTING_ON  = 1
-} fixinc_mode_t;
-
-extern fixinc_mode_t fixinc_mode;
-
 #ifdef HAVE_MMAP_FILE
 #define UNLOAD_DATA() do { if (curr_data_mapped) { \
   munmap ((void*)pz_curr_data, data_map_size); close (data_map_fd); } \
diff -N -u -r -w gcc-4.8.2/fixincludes/fixopts.c gcc-4.8.2-patched/fixincludes/fixopts.c
--- gcc-4.8.2/fixincludes/fixopts.c	2013-01-04 12:49:55.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/fixopts.c	2019-08-06 12:58:55.550637200 +0000
@@ -1,6 +1,6 @@
 /* Handle options that are passed from environment variables.
 
-   Copyright (C) 2004, 2009, 2012 Free Software Foundation, Inc.
+   Copyright (C) 2004, 2009 Free Software Foundation, Inc.
 
 This file is part of GCC.
 
@@ -20,43 +20,31 @@
 
 #include "fixlib.h"
 
-te_verbose  verbose_level = VERB_PROGRESS;
-
-fixinc_mode_t fixinc_mode = TESTING_OFF;
-
-#define _ENV_(v,m,n,t) char const * v = NULL;
+#define _ENV_(v,m,n,t)   tCC* v = NULL;
 ENV_TABLE
 #undef _ENV_
 
-static void
-show_not_def (char const * vname)
+void
+initialize_opts (void)
 {
   static const char var_not_found[] =
+#ifndef __STDC__
     "fixincl ERROR:  %s environment variable not defined\n"
-    "each of these must be defined:\n";
-  static char const not_found_var[] = "\t%s\n";
-
-  fprintf (stderr, var_not_found, vname);
-# define _ENV_(vv,mm,nn,tt) \
-  if (mm) fprintf (stderr, not_found_var, nn);
+#else
+    "fixincl ERROR:  %s environment variable not defined\n"
+    "each of these must be defined:\n"
+# define _ENV_(vv,mm,nn,tt) "\t" nn "  - " tt "\n"
   ENV_TABLE
 # undef _ENV_
+#endif
+    ;
 
-  exit (EXIT_FAILURE);
-}
+#define _ENV_(v,m,n,t)   { tSCC var[] = n;  \
+  v = getenv (var); if (m && (v == NULL)) { \
+  fprintf (stderr, var_not_found, var);     \
+  exit (EXIT_FAILURE); } }
 
-void
-initialize_opts (void)
-{
-#define _ENV_(v,m,n,t)   {                      \
-    static char const var[] = n;                \
-    v = getenv (var);                           \
-    if (m && (v == NULL)) show_not_def (var);   \
-  }
+ENV_TABLE
 
-  ENV_TABLE;
 #undef _ENV_
-
-  if ((pz_test_mode != NULL) && (strcmp (pz_test_mode, "true") == 0))
-    fixinc_mode = TESTING_ON;
 }
diff -N -u -r -w gcc-4.8.2/fixincludes/fixtests.c gcc-4.8.2-patched/fixincludes/fixtests.c
--- gcc-4.8.2/fixincludes/fixtests.c	2013-01-04 12:49:55.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/fixtests.c	2019-08-06 12:58:55.554060640 +0000
@@ -3,8 +3,7 @@
 
    Test to see if a particular fix should be applied to a header file.
 
-   Copyright (C) 1997, 1998, 1999, 2000, 2009, 2012
-   Free Software Foundation, Inc.
+   Copyright (C) 1997, 1998, 1999, 2000, 2009 Free Software Foundation, Inc.
 
 = = = = = = = = = = = = = = = = = = = = = = = = =
 
@@ -47,7 +46,7 @@
 
 #include "fixlib.h"
 
-#define _ENV_(v,m,n,t)   extern char const * v;
+#define _ENV_(v,m,n,t)   extern tCC* v;
 ENV_TABLE
 #undef _ENV_
 
diff -N -u -r -w gcc-4.8.2/fixincludes/genfixes gcc-4.8.2-patched/fixincludes/genfixes
--- gcc-4.8.2/fixincludes/genfixes	2013-01-04 12:49:55.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/genfixes	2019-08-06 12:58:55.574123760 +0000
@@ -1,6 +1,6 @@
 #! /bin/sh
 
-# Copyright (C) 1999, 2000, 2001, 2009, 2012 Free Software Foundation, Inc.
+# Copyright (C) 1999, 2000, 2001, 2009 Free Software Foundation, Inc.
 # This file is part of GCC.
 
 # GCC is free software; you can redistribute it and/or modify
diff -N -u -r -w gcc-4.8.2/fixincludes/inclhack.def gcc-4.8.2-patched/fixincludes/inclhack.def
--- gcc-4.8.2/fixincludes/inclhack.def	2013-05-31 12:43:36.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/inclhack.def	2019-08-06 12:58:55.591881040 +0000
@@ -65,45 +65,6 @@
 };
 
 
-/* On AIX when _LARGE_FILES is defined fcntl.h defines open to
- * open64 and creat to creat64.  This fixes fcntl.h to
- * undef those defines and use __asm__ to alias the symbols if
- * building with g++ and -D_LARGE_FILES
- */
-fix = {
-    hackname  = AAB_aix_fcntl;
-    files     = fcntl.h;
-    select    = "define open[ \t]open64";
-    mach      = "*-*-aix*";
-    test-text = ''; /* no way to test */
-
-    c_fix     = wrap;
-
-    c_fix_arg = "";
-
-    c_fix_arg = <<- _EOArg_
-
-	#if defined __GNUG__ && defined _LARGE_FILES && defined __cplusplus
-	#define __need__aix_fcntl_h_fix
-	#ifdef __need__aix_fcntl_h_fix
-	#undef open
-	#undef creat
-	#undef openat
-	/* Alias the symbols using asm */
-	extern "C" {
-	extern int open(const char *, int, ...) __asm__("open64");
-	extern int creat(const char *, mode_t) __asm__("creat64");
-	#if (_XOPEN_SOURCE >= 700)
-	extern int openat(int, const char *, int, ...) __asm__("open64at");
-	#endif
-	}
-	#endif
-	#endif
-
-	_EOArg_;
-};
-
-
 /*
  *  On Mac OS 10.3.9, the 'long double' functions are available in
  *  libSystem, but are not prototyped in math.h.
@@ -196,6 +157,25 @@
 	_EndOfHeader_;
 };
 
+
+/*
+ *  ... and for the previous fix to be useful, you have to not use ""
+ *  includes.
+ */
+fix = {
+  hackname  = AAB_darwin7_9_long_double_funcs_2;
+  mach      = "*-*-darwin7.9*";
+  files     = math.h;
+  select    = '#include[ \t]+\"';
+  c_fix     = format;
+  c_fix_arg = "%1<%2.h>";
+  
+  c_fix_arg = '([ \t]*#[ \t]*include[ \t]+)"([a-z0-9/]+)\.h"';
+  
+  test_text = '#include "architecture/ppc/math.h"';
+};
+
+
 /*
  *  This fixes __FD_ZERO bug for linux 2.x.y (x <= 2 && y <= some n)
  */
@@ -374,206 +354,6 @@
 	_EndOfHeader_;
 };
 
-/*
- * Fix assert.h on VxWorks:
- */
-fix = {
-    hackname    = AAB_vxworks_assert;
-    files       = assert.h;
-    mach        = "*-*-vxworks*";
-        
-    replace     = <<- _EndOfHeader_
-	#ifndef _ASSERT_H
-	#define _ASSERT_H
-
-	#ifdef assert
-	#undef assert
-	#endif
-
-	#if defined(__STDC__) || defined(__cplusplus)
-	extern void __assert (const char*);
-	#else
-	extern void __assert ();
-	#endif
-
-	#ifdef NDEBUG
-	#define assert(ign) ((void)0)
-	#else
-
-	#define ASSERT_STRINGIFY(str) ASSERT_STRINGIFY_HELPER(str)
-	#define ASSERT_STRINGIFY_HELPER(str) #str
-
-	#define assert(test) ((void) \
-	        ((test) ? ((void)0) : \
-	        __assert("Assertion failed: " ASSERT_STRINGIFY(test) ", file " \
-	        __FILE__ ", line " ASSERT_STRINGIFY(__LINE__) "\n")))
-
-	#endif
-
-	#endif
-	_EndOfHeader_;
-};
-
-/*
- * Add needed include to regs.h (NOT the gcc header) on VxWorks
- */
-
-fix = {
-    hackname    = AAB_vxworks_regs_vxtypes;
-    files       = regs.h;
-    mach        = "*-*-vxworks*";
-
-    replace     = <<- _EndOfHeader_
-	#ifndef _REGS_H
-	#define _REGS_H
-	#include <types/vxTypesOld.h>
-	#include_next <arch/../regs.h>
-	#endif
-	_EndOfHeader_;
-};
-
-/*
- * Make VxWorks stdint.h a bit more compliant - add typedefs
- */
-fix = {
-    hackname    = AAB_vxworks_stdint;
-    files       = stdint.h;
-    mach        = "*-*-vxworks*";
-        
-    replace     = <<- _EndOfHeader_
-	#ifndef _STDINT_H
-	#define _STDINT_H
-	/* get int*_t, uint*_t */
-	#include <types/vxTypes.h>
-	
-	/* get legacy vxworks types for compatibility */
-	#include <types/vxTypesOld.h>
-	
-	typedef long intptr_t;
-	typedef unsigned long uintptr_t;
-	
-	typedef int64_t intmax_t;
-	typedef uint64_t uintmax_t;
-	
-	typedef int8_t int_least8_t;
-	typedef int16_t int_least16_t;
-	typedef int32_t int_least32_t;
-	typedef int64_t int_least64_t;
-	
-	typedef uint8_t uint_least8_t;
-	typedef uint16_t uint_least16_t;
-	typedef uint32_t uint_least32_t;
-	typedef uint64_t uint_least64_t;
-	
-	typedef int8_t int_fast8_t;
-	typedef int int_fast16_t;
-	typedef int32_t int_fast32_t;
-	typedef int64_t int_fast64_t;
-	
-	typedef uint8_t uint_fast8_t;
-	typedef unsigned int uint_fast16_t;
-	typedef uint32_t uint_fast32_t;
-	typedef uint64_t uint_fast64_t;
-	
-	/* Ranges */
-	#define UINT8_MAX (~(uint8_t)0)
-	#define UINT8_MIN 0
-	#define UINT16_MAX (~(uint16_t)0)
-	#define UINT16_MIN 0
-	#define UINT32_MAX (~(uint32_t)0)
-	#define UINT32_MIN 0
-	#define UINT64_MAX (~(uint64_t)0)
-	#define UINT64_MIN 0
-	
-	#define UINTPTR_MAX (~(uintptr_t)0)
-	#define UINTPTR_MIN 0
-	
-	/* Need to do int_fast16_t as well, as type
-	   size may be architecture dependent */
-	#define UINT_FAST16_MAX (~(uint_fast16_t)0)
-	#define UINT_FAST16_MAX 0
-	
-	#define INT8_MAX (UINT8_MAX>>1)
-	#define INT8_MIN (INT8_MAX+1)
-	#define INT16_MAX (UINT16_MAX>>1)
-	#define INT16_MIN (INT16_MAX+1)
-	#define INT32_MAX (UINT32_MAX>>1)
-	#define INT32_MIN (INT32_MAX+1)
-	#define INT64_MAX (UINT64_MAX>>1)
-	#define INT64_MIN (INT64_MAX+1)
-	
-	#define INTPTR_MAX (UINTPTR_MAX>>1)
-	#define INTPTR_MIN (INTPTR_MAX+1)	
-	
-	#define INT_FAST16_MAX (UINT_FAST16_MAX>>1)
-	#define INT_FAST16_MIN (INT_FAST16_MAX+1)
-	
-	/* now define equiv. constants */
-	#define UINT_FAST8_MAX UINT8_MAX
-	#define UINT_FAST8_MIN UINT_FAST8_MIN
-	#define INT_FAST8_MAX INT8_MAX
-	#define INT_FAST8_MIN INT8_MIN
-	#define UINT_FAST32_MAX UINT32_MAX
-	#define UINT_FAST32_MIN UINT32_MIN
-	#define INT_FAST32_MAX INT32_MAX
-	#define INT_FAST32_MIN INT32_MIN
-	#define UINT_FAST64_MAX UINT64_MAX
-	#define UINT_FAST64_MIN UINT64_MIN
-	#define INT_FAST64_MAX INT64_MAX
-	#define INT_FAST64_MIN INT64_MIN
-	
-	#define UINT_LEAST8_MAX UINT8_MAX
-	#define UINT_LEAST8_MIN UINT8_MIN
-	#define INT_LEAST8_MAX INT8_MAX
-	#define INT_LEAST8_MIN INT8_MIN
-	#define UINT_LEAST16_MAX UINT16_MAX
-	#define UINT_LEAST16_MIN UINT16_MIN
-	#define INT_LEAST16_MAX INT16_MAX
-	#define INT_LEAST16_MIN INT16_MIN
-	#define UINT_LEAST32_MAX UINT32_MAX
-	#define UINT_LEAST32_MIN UINT32_MIN
-	#define INT_LEAST32_MAX INT32_MAX
-	#define INT_LEAST32_MIN INT32_MIN
-	#define UINT_LEAST64_MAX UINT64_MAX
-	#define UINT_LEAST64_MIN UINT64_MIN
-	#define INT_LEAST64_MAX INT64_MAX
-	#define INT_LEAST64_MIN INT64_MIN
-	
-	#define UINTMAX_MAX UINT64_MAX
-	#define UINTMAX_MIN UINT64_MIN
-	#define INTMAX_MAX INT64_MAX
-	#define INTMAX_MIN INT64_MIN
-	
-	#endif
-	_EndOfHeader_;
-};
-
-/*
- *  This hack makes makes unistd.h more POSIX-compliant on VxWorks
- */
-fix = {
-    hackname    = AAB_vxworks_unistd;
-    files       = unistd.h;
-    mach        = "*-*-vxworks*";
-        
-    replace     = <<- _EndOfHeader_
-	#ifndef _UNISTD_H
-	#define _UNISTD_H
-	#include_next <unistd.h>
-	#include <ioLib.h>
-	#ifndef STDIN_FILENO
-	#define STDIN_FILENO 0
-	#endif
-	#ifndef STDOUT_FILENO
-	#define STDOUT_FILENO 1
-	#endif
-	#ifndef STDERR_FILENO
-	#define STDERR_FILENO 2
-	#endif
-	#endif /* _UNISTD_H */
-	_EndOfHeader_;
-};
-
 
 /*
  * complex.h on AIX 5 and AIX 6 define _Complex_I and I in terms of __I,
@@ -617,9 +397,7 @@
 };
 
 /*
- *  pthread.h on AIX defines PTHREAD_ONCE_INIT, PTHREAD_MUTEX_INITIALIZER,
- *  PTHREAD_COND_INITIALIZER and PTHREAD_RWLOCK_INITIALIZER without enough
- *  braces.
+ *  pthread.h on AIX defines PTHREAD_ONCE_INIT without enough braces.
  */
 fix = {
     hackname  = aix_once_init_1;
@@ -647,45 +425,6 @@
 		"}\n";
 };
 
-fix = {
-    hackname  = aix_mutex_initializer_1;
-    mach      = "*-*-aix*";
-    files     = "pthread.h";
-    select    = "#define[ \t]PTHREAD_MUTEX_INITIALIZER \\\\\n"
-		"\\{ \\\\\n";
-    c_fix     = format;
-    c_fix_arg = "#define PTHREAD_MUTEX_INITIALIZER \\\n"
-		"{{ \\\n";
-    test_text = "#define PTHREAD_MUTEX_INITIALIZER \\\\\n"
-		"{ \\\\\n";
-};
-
-fix = {
-    hackname  = aix_cond_initializer_1;
-    mach      = "*-*-aix*";
-    files     = "pthread.h";
-    select    = "#define[ \t]PTHREAD_COND_INITIALIZER \\\\\n"
-		"\\{ \\\\\n";
-    c_fix     = format;
-    c_fix_arg = "#define PTHREAD_COND_INITIALIZER \\\n"
-		"{{ \\\n";
-    test_text = "#define PTHREAD_COND_INITIALIZER \\\\\n"
-		"{ \\\\\n";
-};
-
-fix = {
-    hackname  = aix_rwlock_initializer_1;
-    mach      = "*-*-aix*";
-    files     = "pthread.h";
-    select    = "#define[ \t]PTHREAD_RWLOCK_INITIALIZER \\\\\n"
-		"\\{ \\\\\n";
-    c_fix     = format;
-    c_fix_arg = "#define PTHREAD_RWLOCK_INITIALIZER \\\n"
-		"{{ \\\n";
-    test_text = "#define PTHREAD_RWLOCK_INITIALIZER \\\\\n"
-		"{ \\\\\n";
-};
-
 /*
  *  pthread.h on AIX 4.3.3 tries to define a macro without whitspace
  *  which violates a requirement of ISO C.
@@ -860,6 +599,63 @@
 
 
 /*
+ *  Obey __PRAGMA_EXTERN_PREFIX for Tru64 UNIX V4/5 headers.
+ */
+fix = {
+    hackname  = alpha___extern_prefix;
+    select    = "(.*)(defined\\(__DECC\\)|def[ \t]*__DECC)[ \t]*\n"
+                "(#[ \t]*pragma[ \t]*extern_prefix.*)";
+
+    mach      = "alpha*-dec-osf*";
+    c_fix     = format;
+    c_fix_arg = "%1 (defined(__DECC) || defined(__PRAGMA_EXTERN_PREFIX))\n%3";
+
+    test_text = "#ifdef  __DECC\n"
+		"#pragma extern_prefix \"_P\"\n"
+		"#   if defined(__DECC)\n"
+		"#     pragma extern_prefix \"_E\"\n"
+		"# if !defined(_LIBC_POLLUTION_H_) && defined(__DECC)\n"
+		"#  pragma extern_prefix \"\"";
+};
+
+
+/*
+ *  Obey __PRAGMA_EXTERN_PREFIX for Tru64 UNIX V4/5 <standards.h>.
+ */
+fix = {
+    hackname  = alpha___extern_prefix_standards;
+    files     = standards.h;
+    select    = ".*!defined\\(_LIBC_POLLUTION_H_\\) && !defined\\(__DECC\\)";
+
+    mach      = "alpha*-dec-osf*";
+    c_fix     = format;
+    c_fix_arg = "%0 && !defined(__PRAGMA_EXTERN_PREFIX)";
+
+    test_text = "#if (_ISO_C_SOURCE>=19990L) "
+                "&& !defined(_LIBC_POLLUTION_H_) && !defined(__DECC)";
+};
+
+
+/*
+ *  Obey __PRAGMA_EXTERN_PREFIX for Tru64 UNIX V5 <sys/mount.h> and
+ *  <sys/stat.h>.  The tests for __DECC are special in various ways, so
+ *  alpha__extern_prefix cannot be used.
+ */
+fix = {
+    hackname  = alpha___extern_prefix_sys_stat;
+    files     = sys/stat.h;
+    files     = sys/mount.h;
+    select    = "#[ \t]*if[ \t]*defined\\(__DECC\\)";
+
+    mach      = "alpha*-dec-osf5*";
+    c_fix     = format;
+    c_fix_arg = "%0 || defined(__PRAGMA_EXTERN_PREFIX)";
+
+    test_text = "#   if defined(__DECC)";
+};
+
+
+/*
  *  Fix assert macro in assert.h on Alpha OSF/1.
  *  The superfluous int cast breaks C++.
  */
@@ -875,6 +671,37 @@
 
 
 /*
+ *  Fix #defines under Alpha OSF/1:
+ *  The following files contain '#pragma extern_prefix "_FOO"' followed by
+ *  a '#define something(x,y,z) _FOOsomething(x,y,z)'.  The intent of these
+ *  statements is to reduce namespace pollution.  While these macros work
+ *  properly in most cases, they don't allow you to take a pointer to the
+ *  "something" being modified.  To get around this limitation, change these
+ *  statements to be of the form '#define something _FOOsomething'.
+ *
+ *  sed ain't egrep, lesson 2463:  sed can use self-referential
+ *  regular expressions.  In the substitute expression below,
+ *  "\\1" and "\\2" refer to subexpressions found earlier in the
+ *  same match.  So, we continue to use sed.  "extern_prefix" will
+ *  be a rare match anyway...
+ */
+fix = {
+    hackname = alpha_bad_lval;
+
+    select   = "^[ \t]*#[ \t]*pragma[ \t]+extern_prefix";
+    mach      = "alpha*-dec-osf*";
+
+    sed      =
+        "s/^[ \t]*#[ \t]*define[ \t][ \t]*\\([^(]*\\)\\(([^)]*)\\)[ \t]*"
+               "\\(_.*\\)\\1\\2[ \t]*$/#define \\1 \\3\\1/";
+
+    test_text = '#pragma extern_prefix "_FOO"'"\n"
+                "#define something(x,y,z) _FOOsomething(x,y,z)\n"
+                "#define mumble _FOOmumble";
+};
+
+
+/*
  *  Fix getopt declarations in stdio.h and stdlib.h on Alpha OSF/1 and AIX.
  */
 fix = {
@@ -915,6 +742,99 @@
 
 
 /*
+ *  Obey __PRAGMA_EXTERN_PREFIX for Tru64 UNIX <pthread.h>.
+ */
+fix = {
+    hackname  = alpha_pthread;
+    files     = pthread.h;
+    select    = "((#[ \t]*if)([ \t]*defined[ \t]*\\(_PTHREAD_ENV_DECC\\)"
+                "|def _PTHREAD_ENV_DECC)(.*))\n"
+		"(#[ \t]*define _PTHREAD_USE_PTDNAM_)";
+
+    mach      = "alpha*-dec-osf*";
+    c_fix     = format;
+    c_fix_arg = "%2 defined (_PTHREAD_ENV_DECC)%4 "
+                "|| defined (__PRAGMA_EXTERN_PREFIX)\n%5";
+
+    test_text = "#  if defined (_PTHREAD_ENV_DECC) "
+                      "|| defined (_PTHREAD_ENV_EPCC)\n"
+		"#   define _PTHREAD_USE_PTDNAM_\n"
+		"#  endif\n"
+		"#  ifdef _PTHREAD_ENV_DECC\n"
+		"#   define _PTHREAD_USE_PTDNAM_\n"
+		"#  endif";
+};
+
+
+/*
+ *  Recognize GCC in Tru64 UNIX V5.1B <pthread.h>.
+ */
+fix = {
+    hackname  = alpha_pthread_gcc;
+    files     = pthread.h;
+    select    = "#else\n# error <pthread.h>: unrecognized compiler.";
+
+    mach      = "alpha*-dec-osf*";
+    c_fix     = format;
+    c_fix_arg = "#elif defined (__GNUC__)\n"
+		"# define _PTHREAD_ENV_GCC\n"
+    		"%0";
+
+    test_text = "# define _PTHREAD_ENV_INTELC\n"
+		"#else\n"
+		"# error <pthread.h>: unrecognized compiler.\n"
+		"#endif";
+};
+
+
+/*
+ * Compaq Tru64 v5.1 defines all of its PTHREAD_*_INITIALIZER macros
+ * incorrectly, specifying less fields in the initializers than are
+ * defined in the corresponding structure types.  Use of these macros
+ * in user code results in spurious warnings.
+ */
+fix = {
+    hackname  = alpha_pthread_init;
+    files     = pthread.h;
+    select    = ' \* @\(#\).RCSfile: pthread\.h,v \$'
+                ' .Revision: 1\.1\.33\.21 \$ \(DEC\)'
+                ' .Date: 2000/08/15 15:30:13 \$';
+    mach      = "alpha*-dec-osf*";
+    sed       = "s@MVALID\\(.*\\)A}@MVALID\\1A, 0, 0, 0, 0, 0, 0 }@\n"
+                "s@MVALID\\(.*\\)_}@MVALID\\1_, 0, 0, 0, 0 }@\n"
+                "s@CVALID\\(.*\\)A}@CVALID\\1A, 0, 0, 0, 0 }@\n"
+                "s@CVALID\\(.*\\)_}@CVALID\\1_, 0, 0 }@\n"
+                "s@WVALID\\(.*\\)A}@WVALID\\1A, 0, 0, 0, 0, 0, 0, 0, 0, 0 }@\n"
+                "s@WVALID\\(.*\\)_}@WVALID\\1_, 0, 0, 0, 0, 0, 0, 0 }@\n";
+    test_text = <<- _EOText_
+	/*
+	 * @(#)_RCSfile: pthread.h,v $ _Revision: 1.1.33.21 $ (DEC) _Date: 2000/08/15 15:30:13 $
+	 */
+	#ifndef _PTHREAD_NOMETER_STATIC
+	# define PTHREAD_MUTEX_INITIALIZER \
+	    {_PTHREAD_MSTATE_CONFIG, _PTHREAD_MVALID | _PTHREAD_MVF_STA}
+	# define PTHREAD_COND_INITIALIZER \
+	    {_PTHREAD_CSTATE_SLOW, _PTHREAD_CVALID | _PTHREAD_CVF_STA}
+	# define PTHREAD_MUTEX_INITWITHNAME_NP(_n_,_a_) \
+	    {_PTHREAD_MSTATE_CONFIG, _PTHREAD_MVALID | _PTHREAD_MVF_STA, _n_, _a_}
+	# define PTHREAD_COND_INITWITHNAME_NP(_n_,_a_) \
+	    {_PTHREAD_CSTATE_SLOW, _PTHREAD_CVALID | _PTHREAD_CVF_STA, _n_, _a_}
+	#else
+	# define PTHREAD_MUTEX_INITIALIZER {0, _PTHREAD_MVALID | _PTHREAD_MVF_STA}
+	# define PTHREAD_MUTEX_INITWITHNAME_NP(_n_,_a_) \
+	    {0, _PTHREAD_MVALID | _PTHREAD_MVF_STA, _n_, _a_}
+	# define PTHREAD_COND_INITWITHNAME_NP(_n_,_a_) \
+	    {0, _PTHREAD_CVALID | _PTHREAD_CVF_STA, _n_, _a_}
+	#endif
+
+	#define PTHREAD_RWLOCK_INITIALIZER {_PTHREAD_RWVALID | _PTHREAD_RWVF_STA}
+	#define PTHREAD_RWLOCK_INITWITHNAME_NP(_n_,_a_) \
+	        {_PTHREAD_RWVALID | _PTHREAD_RWVF_STA, _n_, _a_}
+	_EOText_;
+};
+
+
+/*
  *  Fix return value of sbrk in unistd.h on Alpha OSF/1 V2.0
  *  And OpenBSD.
  */
@@ -1050,9 +970,14 @@
     test_text = "extern void exit ( int );";
 };
 
+
 /*
  *  Remove `extern double cabs' declarations from math.h.
  *  This conflicts with C99.  Discovered on AIX.
+ *  IRIX 5 and IRIX 6 before 6.5.18 (where C99 support was introduced)
+ *  declares cabs() to take a struct __cabs_s argument.
+ *  SunOS4 has its cabs() declaration followed by a comment which
+ *  terminates on the following line.
  *  Darwin hides its broken cabs in architecture-specific subdirs.
  */
 fix = {
@@ -1068,7 +993,11 @@
                 "#else\n"
                 "extern     double   cabs();\n"
                 "#endif\n"
-                "extern double cabs ( _Complex z );";
+                "extern double cabs ( _Complex z );\n"
+                "extern double cabs(); /* This is a comment\n"
+                "                         and it ends here. */\n"
+                "extern double	cabs(struct __cabs_s);\n"
+                "extern long double cabsl( struct __cabsl_s );";
 };
 
 
@@ -1085,7 +1014,7 @@
      */
     files     = "architecture/ppc/math.h";
     files     = "architecture/*/math.h";
-    select    = '#if defined\(__APPLE_CC__\) && \(__APPLE_CC__ >= 1345\)';
+    select    = "#if defined(__APPLE_CC__) && (__APPLE_CC__ >= 1345)";
     bypass    = "powl";
     c_fix     = format; 
     c_fix_arg = "#if 1";
@@ -1159,9 +1088,6 @@
     test_text = "#define _CTRL(c) ('c'&037)";
 };
 
-/*
- *  Fix various macros used to define ioctl numbers.
- */
 fix = {
     hackname  = ctrl_quotes_use;
     select    = "define[ \t]+[A-Z0-9_]+[ \t]+[A-Z0-9_]+CTRL[ \t]*\\( *[^,']";
@@ -1198,23 +1124,6 @@
     test_text = "extern void* malloc( size_t );";
 };
 
-/*
- *  For the AAB_darwin7_9_long_double_funcs fix to be useful,
- *  you have to not use "" includes.
- */
-fix = {
-    hackname  = darwin_9_long_double_funcs_2;
-    mach      = "*-*-darwin7.9*";
-    files     = math.h;
-    select    = '#include[ \t]+\"';
-    c_fix     = format;
-    c_fix_arg = "%1<%2.h>";
-  
-    c_fix_arg = '([ \t]*#[ \t]*include[ \t]+)"([a-z0-9/]+)\.h"';
-  
-    test_text = '#include "architecture/ppc/math.h"';
-};
-
 
 /*
  *  On darwin8 and earlier, mach-o/swap.h isn't properly guarded
@@ -2498,9 +2407,6 @@
     "#define XX_IO(x)        ('x'<<8|256)";
 };
 
-/*
- *  Fix the usage of the ioctl macro numbers.
- */
 fix = {
     hackname  = io_quotes_use;
     select    = "define[ \t]+[A-Z0-9_]+[ \t]+[A-Z0-9_]+IO[A-Z]*[ \t]*"
@@ -2531,6 +2437,110 @@
 
 
 /*
+ *  IRIX 6.5.1[89] <internal/sgimacros.h> unconditionally defines
+ *  __restrict as restrict iff __c99.  This is wrong for C++, which
+ *  needs many C99 features, but only supports __restrict.
+ */
+fix = {
+    hackname  = irix___restrict;
+    files     = internal/sgimacros.h;
+    select    = "(#ifdef __c99\n)(#[ \t]*define __restrict restrict)";
+
+    mach      = "mips-sgi-irix6.5";
+    c_fix     = format;
+    c_fix_arg = "%1"
+		"#  ifndef __cplusplus\n%2\n#  endif";
+
+    test_text = "#ifdef __c99\n#  define __restrict restrict";
+};
+
+/*
+ * IRIX 6.5.22 <internal/math_core.h> uses the SGI c99 __generic() intrinsic
+ * to define the fpclasify, isfinite, isinf, isnan, isnormal and signbit 
+ * functions.
+ *
+ * This was probably introduced around IRIX 6.5.18
+ */
+fix = {
+    hackname  = irix___generic1;
+    files     = internal/math_core.h;
+    mach      = "mips-sgi-irix6.5";
+    select    = "#define ([a-z]+)\\(x\\) *__generic.*";
+
+    c_fix     = format;
+    c_fix_arg = "extern int %1(double);\n"
+		"extern int %1f(float);\n"
+		"extern int %1l(long double);\n"
+		"#define %1(x) (sizeof(x) == sizeof(double) ? _%1(x) \\\n"
+		"               : sizeof(x) == sizeof(float) ? _%1f(x) \\\n"
+		"               : _%1l(x))\n";
+
+    test_text = 
+      "#define isnan(x) __generic(x,,, _isnan, _isnanf, _isnanl,,,)(x)\n";
+};
+
+
+/* Likewise <internal/math_core.h> on IRIX 6.5.19 and later uses the SGI
+   compiler's __generic intrinsic to define isgreater, isgreaterequal,
+   isless, islessequal, islessgreater and isunordered functions.  */
+fix = {
+    hackname  = irix___generic2;
+    files     = internal/math_core.h;
+    mach      = "mips-sgi-irix6.5";
+    select    = "#define ([a-z]+)\\(x,y\\) *__generic.*";
+
+    c_fix     = format;
+    c_fix_arg = "#define %1(x,y) \\\n"
+		"  ((sizeof(x)<=4 && sizeof(y)<=4) ? _%1f(x,y) \\\n"
+		"   : (sizeof(x)<=8 && sizeof(y)<=8) ? _%1(x,y) \\\n"
+		"   : _%1l(x,y))\n";
+
+    test_text = 
+      "#define isless(x,y)         __generic(x,y,, _isless, _islessf, _islessl,,,)(x,y)";
+};
+
+
+/*
+ *  IRIX 5.2's <sys/asm.h> contains an asm comment with a contraction
+ *  that causes the assembly preprocessor to complain about an
+ *  unterminated character constant.
+ */
+fix = {
+    hackname  = irix_asm_apostrophe;
+    files     = sys/asm.h;
+
+    select    = "^[ \t]*#.*[Ww]e're";
+    c_fix     = format;
+    c_fix_arg = "%1 are";
+    c_fix_arg = "^([ \t]*#.*[Ww]e)'re";
+    test_text = "\t# and we're on vacation";
+};
+
+
+/*
+ * IRIX 6.5 complex.h defines _Complex_I and _Imaginary_I in terms of __I__,
+ * which is a MIPSpro compiler builtin.  Remove _Imaginary_I and imaginary
+ * definitions which are not supported by GCC. 
+ */
+fix = {
+    hackname  = irix_complex;
+    mach      = "mips-sgi-irix6.5";
+    files     = complex.h;
+    select    = "#define[ \t]_Complex_I[ \t]\\(\\(float[ \t]_Complex\\)[ \t]\\(__I__\\)\\)";
+    sed	      = "s/#define[ \t]_Complex_I[ \t]((float[ \t]_Complex)[ \t](__I__))/"
+		"#define _Complex_I (__extension__ 1.0iF)/";
+    sed	      = "/#define[ \t]imaginary[ \t]_Imaginary/d";
+    sed	      = "/#define[ \t]_Imaginary_I/d";
+    sed       = "s/#define[ \t]I[ \t]_Imaginary_I/#define I _Complex_I/";
+    test_text = "#define _Complex_I ((float _Complex) (__I__))\n"
+		"#define imaginary _Imaginary\n"
+		"// #define _Imaginary_I ((float _Imaginary) 1)\n"
+		"#define _Imaginary_I __I__\n"
+		"#define I _Imaginary_I";
+};
+
+
+/*
  *  Non-traditional "const" declaration in Irix's limits.h.
  */
 fix = {
@@ -2544,12 +2554,155 @@
 
 
 /*
- *  IRIX 5.x's stdio.h declares some functions that take a va_list as
+ *  IRIX 6.5 PTHREAD_*_INITIALIZER need an additional level of braces in
+ *  <pthread.h>.
+ */
+fix = {
+    hackname    = irix_pthread_init;
+    files       = pthread.h;
+    select      = "^(#define[ \t]+PTHREAD_.*_INITIALIZER[ \t]+)(\\{ 0 \\})";
+
+    mach	= "mips-sgi-irix6.5";
+    c_fix       = format;
+    c_fix_arg   = "%1{ %2 }";
+    test_text   = "#define PTHREAD_MUTEX_INITIALIZER	{ 0 }\n"
+		  "#define PTHREAD_COND_INITIALIZER	{ 0 }\n"
+		  "#define PTHREAD_RWLOCK_INITIALIZER	{ 0 }";
+};
+
+
+/*
+ *  IRIX 6.5.1[78] <sys/socket.h> has a broken definition of socklen_t.
+ *  Various socket function prototypes use different types instead,
+ *  depending on the API in use (BSD, XPG4/5), but the socklen_t
+ *  definition doesn't reflect this (SGI Bug Id 864477, fixed in
+ *  IRIX 6.5.19).
+ */
+fix = {
+    hackname  = irix_socklen_t;
+    files     = sys/socket.h;
+    select    = "(#define _SOCKLEN_T\n)(typedef u_int32_t socklen_t;)";
+
+    mach      = "mips-sgi-irix6.5";
+    c_fix     = format;
+    c_fix_arg = "%1"
+    		"#if _NO_XOPEN4 && _NO_XOPEN5\n"
+    		"typedef int socklen_t;\n"
+		"#else\n"
+    		"%2\n"
+    		"#endif /* _NO_XOPEN4 && _NO_XOPEN5 */";
+
+    test_text = "#define _SOCKLEN_T\ntypedef u_int32_t socklen_t;";
+};
+
+/*
+ *  IRIX 6.5 <stdint.h> only works with ISO C99 and errors out
+ *  otherwise.
+ */
+fix = {
+    hackname  = irix_stdint_c99_mode;
+    files     = stdint.h;
+    select = "(#ifndef __c99\n)(#error This header file is to be used only for c99 mode compilations)";
+
+    mach      = "mips-sgi-irix6.5";
+    c_fix  = format;
+    c_fix_arg = "#if 0\n"
+	        "%2";
+    test_text =
+    "#ifndef __c99\n#error This header file is to be used only for c99 mode compilations\n#else";
+};
+
+
+/*
+ *  IRIX 6.5 <stdint.h> has some *_MIN/MAX constants whose types don't
+ *  match the corresponding types, as required by ISO C99.
+ */
+fix = {
+    hackname  = irix_stdint_c99_types;
+    files     = stdint-irix65.h, stdint.h;
+    mach      = "mips-sgi-irix6.5";
+    sed       = "s@^#define INT64_MIN.*(-0x7fffffffffffffff - 1)$@"
+                "#define INT64_MIN               (-0x7fffffffffffffffLL - 1)@";
+    sed       = "s@^#define INT64_MAX.*0x7fffffffffffffff$@"
+                "#define INT64_MAX               0x7fffffffffffffffLL@";
+    sed       = "s@^#define UINT32_MAX.*0xffffffff$@"
+                "#define UINT32_MAX              0xffffffffU@";
+    sed       = "s@^#define UINT64_MAX.*0xffffffffffffffff$@"
+                "#define UINT64_MAX              0xffffffffffffffffULL@";
+    sed       = "s@^#define INTPTR_MIN.*INT32_MIN$@"
+                "#define INTPTR_MIN              (-0x7fffffffL - 1)@";
+    sed       = "s@^#define INTPTR_MAX.*INT32_MAX$@"
+                "#define INTPTR_MAX              0x7fffffffL@";
+    sed       = "s@^#define UINTPTR_MAX.*UINT32_MAX$@"
+                "#define UINTPTR_MAX             0xffffffffUL@";
+    sed       = "s@^#define INTPTR_MIN.*INT64_MIN@"
+                "#define INTPTR_MIN              (-0x7fffffffffffffffL - 1)@";
+    sed       = "s@^#define INTPTR_MAX.*INT64_MAX$@"
+                "#define INTPTR_MAX              0x7fffffffffffffffL@";
+    sed       = "s@^#define UINTPTR_MAX.*UINT64_MAX$@"
+                "#define UINTPTR_MAX             0xffffffffffffffffUL@";
+    sed       = "s@^#define PTRDIFF_MIN.*INT64_MIN$@"
+                "#define PTRDIFF_MIN             (-0x7fffffffffffffffL - 1)@";
+    sed       = "s@^#define PTRDIFF_MAX.*INT64_MAX$@"
+                "#define PTRDIFF_MAX             0x7fffffffffffffffL@";
+    sed       = "s@^#define SIZE_MAX.*UINT64_MAX$@"
+                "#define SIZE_MAX                0xffffffffffffffffUL@";
+    test_text = "#define INT64_MIN               (-0x7fffffffffffffff - 1)\n"
+                "#define INT64_MAX               0x7fffffffffffffff\n"
+                "#define UINT32_MAX              0xffffffff\n"
+                "#define UINT64_MAX              0xffffffffffffffff\n"
+                "#define INTPTR_MIN              INT32_MIN\n"
+                "#define INTPTR_MAX              INT32_MAX\n"
+                "#define UINTPTR_MAX             UINT32_MAX\n"
+                "#define INTPTR_MIN              INT64_MIN\n"
+                "#define INTPTR_MAX              INT64_MAX\n"
+                "#define UINTPTR_MAX             UINT64_MAX\n"
+                "#define PTRDIFF_MIN             INT64_MIN\n"
+                "#define PTRDIFF_MAX             INT64_MAX\n"
+                "#define SIZE_MAX                UINT64_MAX";
+};
+
+
+/*
+ *  IRIX 6.5 <stdint.h> uses casts in some macros which cannot thus be used
+ *  in preprocessor tests, although ISO C99 requires this.
+ */
+fix = {
+    hackname  = irix_stdint_c99_macros;
+    files     = stdint-irix65.h, stdint.h;
+    mach      = "mips-sgi-irix6.5";
+    sed       = "s@^#define INT8_C(x).*int.*_t.*$@#define INT8_C(x)               (x)@";
+    sed       = "s@^#define INT16_C(x).*int.*_t.*$@#define INT16_C(x)              (x)@";
+    sed       = "s@^#define INT32_C(x).*int.*_t.*$@#define INT32_C(x)              (x)@";
+    sed       = "s@^#define INT64_C(x).*int.*_t.*$@#define INT64_C(x)              (x ## LL)@";
+    sed       = "s@^#define UINT8_C(x).*int.*_t.*$@#define UINT8_C(x)              (x)@";
+    sed       = "s@^#define UINT16_C(x).*int.*_t.*$@#define UINT16_C(x)             (x)@";
+    sed       = "s@^#define UINT32_C(x).*int.*_t.*$@#define UINT32_C(x)             (x ## U)@";
+    sed       = "s@^#define UINT64_C(x).*int.*_t.*$@#define UINT64_C(x)             (x ## ULL)@";
+    sed       = "s@^#define INTMAX_C(x).*int.*_t.*$@#define INTMAX_C(x)             (x ## LL)@";
+    sed       = "s@^#define UINTMAX_C(x).*int.*_t.*$@#define UINTMAX_C(x)            (x ## ULL)@";
+    test_text = "#define INT8_C(x)               (int_least8_t)(x)\n"
+                "#define INT16_C(x)              (int_least16_t)(x)\n"
+                "#define INT32_C(x)              (int_least32_t)(x)\n"
+                "#define INT64_C(x)              (int_least64_t)(x)\n"
+                "#define UINT8_C(x)              (uint_least8_t)(x)\n"
+                "#define UINT16_C(x)             (uint_least16_t)(x)\n"
+                "#define UINT32_C(x)             (uint_least32_t)(x)\n"
+                "#define UINT64_C(x)             (uint_least64_t)(x)\n"
+                "#define INTMAX_C(x)             (intmax_t)(x)\n"
+                "#define UINTMAX_C(x)            (uintmax_t)(x)";
+};
+
+
+/*
+ *  IRIX 5.x's stdio.h and IRIX 6.5's internal/stdio_core.h declare
+ *  some functions that take a va_list as
  *  taking char *.  However, GCC uses void * for va_list, so
  *  calling vfprintf with a va_list fails in C++.  */
 fix = {
     hackname  = irix_stdio_va_list;
     files     = stdio.h;
+    files     = internal/stdio_core.h;
 
     select = '/\* va_list \*/ char \*';
     c_fix  = format;
@@ -2560,6 +2713,26 @@
 
 
 /*
+ *  IRIX 6.5.19 <internal/wchar_core.h> provides the XPG4 variant of
+ *  wcsftime by default.  ISO C99 requires the XPG5 variant instead.
+ */
+fix = {
+    hackname  = irix_wcsftime;
+    files     = internal/wchar_core.h;
+    select    = "#if _NO_XOPEN5\n(extern size_t[ \t]+wcsftime.*const char \*.*)";
+
+    mach      = "mips-sgi-irix6.5";
+    c_fix     = format;
+    c_fix_arg = "#if _NO_XOPEN5 && !defined(__c99)\n%1";
+
+    test_text = "#if _NO_XOPEN5\n"
+		"extern size_t wcsftime(wchar_t *, "
+		"__SGI_LIBC_NAMESPACE_QUALIFIER size_t, const char *, "
+		"const struct tm *);";
+};
+
+
+/*
  * These files in Sun OS 4.x and ARM/RISCiX and BSD4.3
  * use / * * / to concatenate tokens.
  */
@@ -2678,7 +2851,7 @@
     files     = math.h;
     select    = "struct exception";
     /*
-     * This should be bypassed on __cplusplus, but some supposedly C++
+     * This should be bypassed on __cplusplus, but some supposedly C++ C++
      * aware headers, such as Solaris 8 and 9, don't wrap their struct
      * exception either.  So currently we bypass only for glibc, based on a
      * comment in the fixed glibc header.  Ick.
@@ -3222,6 +3395,26 @@
 
 
 /*
+ * Solaris 8 PTHREAD_COND_INITIALIZER lacks the __pthread_cond_magic field.
+ * COND_MAGIC is only defined in <synch.h> and pollutes the namespace, so
+ * use the value literally instead.
+ */
+fix = {
+    hackname = solaris_cond_init;
+    select = '@\(#\)pthread.h' "[ \t]+1.[0-9]+[ \t]+[0-9/]+ SMI";
+    files = pthread.h;
+    mach = '*-*-solaris2.8';
+    c_fix = format;
+    c_fix_arg = "%1, 0x4356%2";
+    c_fix_arg = "^(#define[ \t]+PTHREAD_COND_INITIALIZER[ \t]+"
+                "\\{.*0)(\\},[ \t]*0\\}.*)$";
+    test_text =
+    '#pragma ident	"@(#)pthread.h	1.29	01/07/07 SMI"'"\n"
+    '#define	PTHREAD_COND_INITIALIZER	{{{0}, 0}, 0}	/* = DEFAULTCV */';
+};
+
+
+/*
  *  g++ rejects functions declared with both C and C++ linkage.
  */
 fix = {
@@ -3447,7 +3640,7 @@
 
 
 /*
- *  The pow overloads with int were removed in C++ 2011 DR 550.
+ *  The pow overloads with int were removed in C++ 2011.
  */
 fix = {
     hackname  = solaris_pow_int_overload;
@@ -3456,7 +3649,7 @@
     select    = "^[ \t]*inline [a-z ]* pow\\([^()]*, int [^()]*\\)"
 		" *\\{[^{}]*\n[^{}]*\\}";
     c_fix     = format;
-    c_fix_arg = "#if __cplusplus < 201103L\n%0\n#endif";
+    c_fix_arg = "#ifndef __GXX_EXPERIMENTAL_CXX0X__\n%0\n#endif";
 
     test_text =
     "	inline long double pow(long double __X, int __Y) { return\n"
@@ -3698,13 +3891,13 @@
 
 
 /*
- * On Solaris 9, __va_list needs to become a typedef for
+ * On Solaris 8 and 9, __va_list needs to become a typedef for
  * __builtin_va_list to make -Wmissing-format-attribute work.
  */
 fix = {
     hackname = solaris_sys_va_list;
     files    = sys/va_list.h;
-    mach     = '*-*-solaris2.9';
+    mach     = '*-*-solaris2.[89]';
     select   = "#if.*__STDC__.*\n"
 	       "typedef void \\*__va_list;\n"
 	       "#else\n"
@@ -3768,11 +3961,15 @@
  *  of __gnuc_va_list, __DJ_va_list, or _G_va_list is taken to
  *  indicate that the header knows what it's doing -- under SUSv2,
  *  stdio.h is required to define va_list, and we shouldn't break
- *  that.
+ *  that.  On IRIX 6.5, internal/wchar_core.h used to get its
+ *  definition of va_list from stdio.h.  Since this doesn't happen any
+ *  longer, use __gnuc_va_list there, too.
  */
 fix = {
     hackname = stdio_va_list;
     files    = stdio.h;
+    files    = internal/stdio_core.h;
+    files    = internal/wchar_core.h;
     bypass   = '__gnuc_va_list|_BSD_VA_LIST_|__DJ_va_list|_G_va_list';
     /* 
      * On Solaris 10, the definition in 
@@ -4148,6 +4345,9 @@
 
     select    =
     'profil\(unsigned short \*, unsigned int, unsigned int, unsigned int\)';
+    /* The fix is wrong on IRIX 5/6 and creates a conflict with another
+       prototype in <sys/profil.h>.  */
+    bypass    = 'Silicon Graphics';
     c_fix     = format;
     c_fix_arg = 'profil(unsigned short *, size_t, int, unsigned int)';
 
@@ -4424,129 +4624,6 @@
 };
 
 /*
- * On VMS, change <resource.h> to <sys/resource.h> to avoid a
- * conflict while building gcc.  Likewise for <builtins.h>
- */
-fix = {
-    hackname  = vms_use_quoted_include;
-    select    = "(#[ \t]*include[ \t]+)<(resource|builtins)\\.h>";
-    mach      = "*-*-*vms*";
-    files     = rtldef/wait.h, starlet_c/pthread.h;
-    c_fix     = format;
-
-    c_fix_arg = '%1<sys/%2.h>';
-
-    test_text = "#   include <resource.h>";
-};
-
-/*
- * On VMS, add missing braces around sigset_t constants.
- */
-fix = {
-    hackname  = vms_add_missing_braces;
-    select    = "(_SIG_[A-Z]+_SET[ \t]+= \\{)(0x[0F]+, 0x[0F]+)";
-    mach      = "*-*-*vms*";
-    files     = "rtldef/signal.h";
-    c_fix     = format;
-
-    c_fix_arg = '%1 {%2} ';
-
-    test_text = "static const __sigset_t _SIG_EMPTY_SET  = "
-                "{0x00000000, 0x00000000},\n"
-                " _SIG_FULL_SET   = {0xFFFFFFFF, 0xFFFFFFFF};\n";
-};
-
-/*
- * On VMS, fix incompatible redeclaration of hostalias.
- */
-fix = {
-    hackname  = vms_do_not_redeclare_hostalias;
-    select    = "(void[ \t]+fp_nquery \\(const u_char \\*, int, FILE \\*\\);)\n"
-                "(__char_ptr32[ \t]+hostalias \\(const char \\*\\);)";
-    mach      = "*-*-*vms*";
-    files     = "rtldef/resolv.h";
-    c_fix     = format;
-
-    c_fix_arg = "%1\n"
-                "/* %2 */";
-
-    test_text = "void		fp_nquery (const u_char *, int, FILE *);\n"
-                "__char_ptr32	hostalias (const char *);\n";
-};
-
-/*
- * On VMS, some DEC-C builtins are directly used.
- */
-fix = {
-    hackname  = vms_decc_builtin;
-    select    = "(__MEMSET|__MEMMOVE|__MEMCPY|__STRLEN|__STRCPY)";
-    mach      = "*-*-*vms*";
-    files     = rtldef/string.h, rtldef/time.h, rtldef/strings.h,
-                rtldef/socket.h;
-    sed       = "s@__MEMSET@memset@";
-    sed       = "s@__MEMMOVE@memmove@";
-    sed       = "s@__MEMCPY@memcpy@";
-    sed       = "s@__STRLEN@strlen@";
-    sed       = "s@__STRCPY@strcpy@";
-
-    test_text = "define FD_ZERO(__p) __MEMSET((__p), 0, sizeof(*(__p)))\n";
-};
-
-/*
- * On VMS, do not declare getopt and al if pointers are 64 bit.
- */
-fix = {
-    hackname  = vms_no_64bit_getopt;
-    select    = "^[ \t]*(extern[ \t]*)?(int[ \t]*(getopt|optind|opterr|optopt)|(char \\*optarg))([ \t]*\\(.*\\))?;\n";
-    /*    select    = "^[ \t](extern[ \t))?(int[ \t](getopt|optind|opterr|optopt))|(char *optarg).*;\n"; */
-    mach      = "*-*-*vms*";
-    files     = rtldef/stdio.h, rtldef/unistd.h;
-    c_fix     = format;
-
-    c_fix_arg = "#if __INITIAL_POINTER_SIZE != 64 /* getopt is short ptr only.  */\n"
-                "%0"
-                "#endif\n";
-
-    test_text = "int getopt (int, char * const [], const char *);";
-};
-
-/*
- * On VMS, forward declare structure before referencing them in prototypes.
- */
-fix = {
-    hackname  = vms_forward_declare_struct;
-    select    = "(/\\* forward decls for C\\+\\+ \\*/\n)"
-                "#ifdef __cplusplus\n";
-    mach      = "*-*-*vms*";
-    files     = rtldef/if.h;
-    c_fix     = format;
-
-    c_fix_arg = "%1"
-                "#if defined (__cplusplus) || defined (__GNUC__)\n";
-
-    test_text = "/* forward decls for C++ */\n"
-                "#ifdef __cplusplus\n"
-                "struct foo;\n"
-                "#endif\n";
-};
-
-/*
- * On VMS, force the use of fast setjmp, as the normal setjmp uses conditions
- * which is not yet fully supported by gcc.
- */
-fix = {
-    hackname  = vms_use_fast_setjmp;
-    select    = "(#[ \t]*if[ \t]*defined\\(__FAST_SETJMP\\)[ \t]*\\|\\|)";
-    mach      = "*-*-*vms*";
-    files     = rtldef/setjmp.h;
-    c_fix     = format;
-
-    c_fix_arg = "%0 defined (__GNUC__) ||";
-
-    test_text = "#   if defined(__FAST_SETJMP) || defined(__UNIX_SETJMP)";
-};
-
-/*
  *  AIX and Interix headers define NULL to be cast to a void pointer,
  *  which is illegal in ANSI C++.
  */
@@ -4613,41 +4690,6 @@
     "#endif /* __GNUC_TYPEOF_FEATURE_BROKEN_USE_DEFAULT_UNTIL_FIXED__ */\n";
 };
 
-/*
- *  Wrap VxWorks ioctl to keep everything pretty
- */
-fix = {
-    hackname    = vxworks_ioctl_macro;
-    files       = ioLib.h;
-    mach        = "*-*-vxworks*";
-
-    c_fix       = format;
-    c_fix_arg   = "%0\n"
-        "#define ioctl(fd, func, arg) (ioctl)(fd, func, (int)(arg))\n";
-    c_fix_arg   = "extern[\t ]+int[\t ]+ioctl[\t ]*\\([\t ,[:alnum:]]*\\);";
-        
-    test_text   = "extern int ioctl ( int asdf1234, int jkl , int qwerty ) ;";
-};
-
-/*
- *  Wrap VxWorks mkdir to be posix compliant
- */
-fix = {
-    hackname    = vxworks_mkdir_macro;
-    files       = sys/stat.h;
-    mach        = "*-*-vxworks*";
-
-    c_fix       = format;
-    c_fix_arg   = "%0\n"
-                "#define mkdir(dir, ...) ((void)0, ##__VA_ARGS__, (mkdir)(dir))\n";
-    c_fix_arg   = "extern[\t ]+STATUS[\t ]+mkdir[\t ]*"
-                "\\([\t ]*const[\t ]+char[\t ]*\\*[\t ]*" /* arg type */
-                "(|[_[:alpha:]][_[:alnum:]]*)" /* arg name (optional) */
-                "\\)[\t ]*;";
-        
-    test_text   = "extern STATUS mkdir (const char * _qwerty) ;";
-};
-
 
 /*
  *  Fix VxWorks <time.h> to not require including <vxTypes.h>.
@@ -4681,20 +4723,6 @@
     "# define\t__INCstath <sys/stat.h>";
 };
 
-/*
- *  Make it so VxWorks does not include gcc/regs.h accidentally
- */
-fix = {
-    hackname    = vxworks_regs;
-    mach        = "*-*-vxworks*";
-
-    select      = "#[\t ]*include[\t ]+[<\"]regs.h[>\"]";
-    c_fix       = format;
-    c_fix_arg   = "#include <arch/../regs.h>";
-        
-    test_text   = "#include <regs.h>\n";
-};
-
 
 /*
  *  Another bad dependency in VxWorks 5.2 <time.h>.
@@ -4722,23 +4750,6 @@
                 "#define VOIDFUNCPTR (void(*)())";
 };
 
-/*
- *  This hack makes write const-correct on VxWorks
- */
-fix = {
-    hackname    = vxworks_write_const;
-    files       = ioLib.h;
-    mach        = "*-*-vxworks*";
-
-    c_fix       = format;
-    c_fix_arg   = "extern int  write (int, const char*, size_t);";
-    c_fix_arg   = "extern[\t ]+int[\t ]+write[\t ]*\\("
-                "[\t ]*int[\t ]*,"
-                "[\t ]*char[\t ]*\\*[\t ]*,"
-                "[\t ]*size_t[\t ]*\\)[\t ]*;";
-
-    test_text       = "extern int write ( int , char * , size_t ) ;";
-};
 
 /*
  *  There are several name conflicts with C++ reserved words in X11 header
@@ -4815,53 +4826,4 @@
     test_text = "extern char *\tsprintf();";
 };
 
-/*
- *  Incorrect feraiseexcept extern inline in bits/fenv.h on x86_64
- *  that fails when compiling for SSE-less 32-bit x86.
- */
-fix = {
-    hackname  = feraiseexcept_nosse_invalid;
-    mach      = 'i[34567]86-*-linux*', 'x86*-linux*', 'amd64-*-linux*';
-    files     = bits/fenv.h;
-    select    = "^([\t ]*)__asm__ __volatile__ \\(\"divss %0, %0 *\" : "
-		": \"x\" \\(__f\\)\\);$";
-    bypass    = "\"fdiv .*; fwait\"";
-    
-    c_fix     = format;
-    c_fix_arg = <<- _EOText_
-	# ifdef __SSE_MATH__
-	%0
-	# else
-	%1__asm__ __volatile__ ("fdiv %%%%st, %%%%st(0); fwait"
-	%1			: "=t" (__f) : "0" (__f));
-	# endif
-	_EOText_;
-
-    test_text = <<- _EOText_
-	  __asm__ __volatile__ ("divss %0, %0" : : "x" (__f));
-	_EOText_;
-};
-fix = {
-    hackname  = feraiseexcept_nosse_divbyzero;
-    mach      = 'i[34567]86-*-linux*', 'x86*-linux*', 'amd64-*-linux*';
-    files     = bits/fenv.h;
-    select    = "^([\t ]*)__asm__ __volatile__ \\(\"divss %1, %0 *\" : "
-		": \"x\" \\(__f\\), \"x\" \\(__g\\)\\);$";
-    bypass    = "\"fdivp .*; fwait\"";
-    
-    c_fix     = format;
-    c_fix_arg = <<- _EOText_
-	# ifdef __SSE_MATH__
-	%0
-	# else
-	%1__asm__ __volatile__ ("fdivp %%%%st, %%%%st(1); fwait"
-	%1			: "=t" (__f) : "0" (__f), "u" (__g) : "st(1)");
-	# endif
-	_EOText_;
-
-    test_text = <<- _EOText_
-	  __asm__ __volatile__ ("divss %1, %0" : : "x" (__f), "x" (__g));
-	_EOText_;
-};
-
 /*EOF*/
diff -N -u -r -w gcc-4.8.2/fixincludes/mkfixinc.sh gcc-4.8.2-patched/fixincludes/mkfixinc.sh
--- gcc-4.8.2/fixincludes/mkfixinc.sh	2012-10-28 21:42:48.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/mkfixinc.sh	2019-08-06 12:58:55.600479440 +0000
@@ -15,6 +15,7 @@
     i?86-*-mingw32* | \
     x86_64-*-mingw32* | \
     i?86-*-interix* | \
+    *-*-vxworks* | \
     powerpc-*-eabisim* | \
     powerpc-*-eabi*    | \
     powerpc-*-rtems*   | \
diff -N -u -r -w gcc-4.8.2/fixincludes/tests/base/architecture/ppc/math.h gcc-4.8.2-patched/fixincludes/tests/base/architecture/ppc/math.h
--- gcc-4.8.2/fixincludes/tests/base/architecture/ppc/math.h	2012-10-29 16:44:34.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/tests/base/architecture/ppc/math.h	2019-08-06 12:58:58.699161200 +0000
@@ -7,8 +7,82 @@
     This had to be done to correct non-standard usages in the
     original, manufacturer supplied header file.  */
 
-
-
-#if defined( BROKEN_NAN_CHECK )
-#if 1
-#endif  /* BROKEN_NAN_CHECK */
+/* This file prototypes the long double functions available on Mac OS
+   10.3.9.  */
+#ifndef __MATH__
+# undef __APPLE_CC__
+# define __APPLE_CC__  1345
+# include_next <architecture/ppc/math.h>
+# undef __APPLE_CC__
+# define __APPLE_CC__ 1
+# ifndef __LIBMLDBL_COMPAT
+#  ifdef __LONG_DOUBLE_128__
+#   define __LIBMLDBL_COMPAT(sym) __asm("_" #sym "$LDBL128")
+#  else
+#   define __LIBMLDBL_COMPAT(sym)
+#  endif /* __LONG_DOUBLE_128__ */
+# endif /* __LIBMLDBL_COMPAT */
+# ifdef __cplusplus
+   extern "C" {
+# endif
+  extern long double acosl( long double ) __LIBMLDBL_COMPAT(acosl);
+  extern long double asinl( long double ) __LIBMLDBL_COMPAT(asinl);
+  extern long double atanl( long double ) __LIBMLDBL_COMPAT(atanl);
+  extern long double atan2l( long double, long double ) __LIBMLDBL_COMPAT(atan2l);
+  extern long double cosl( long double ) __LIBMLDBL_COMPAT(cosl);
+  extern long double sinl( long double ) __LIBMLDBL_COMPAT(sinl);
+  extern long double tanl( long double ) __LIBMLDBL_COMPAT(tanl);
+  extern long double acoshl( long double ) __LIBMLDBL_COMPAT(acoshl);
+  extern long double asinhl( long double ) __LIBMLDBL_COMPAT(asinhl);
+  extern long double atanhl( long double ) __LIBMLDBL_COMPAT(atanhl);
+  extern long double coshl( long double ) __LIBMLDBL_COMPAT(coshl);
+  extern long double sinhl( long double ) __LIBMLDBL_COMPAT(sinhl);
+  extern long double tanhl( long double ) __LIBMLDBL_COMPAT(tanhl);
+  extern long double expl( long double ) __LIBMLDBL_COMPAT(expl);
+  extern long double exp2l( long double ) __LIBMLDBL_COMPAT(exp2l);
+  extern long double expm1l( long double ) __LIBMLDBL_COMPAT(expm1l);
+  extern long double logl( long double ) __LIBMLDBL_COMPAT(logl);
+  extern long double log10l( long double ) __LIBMLDBL_COMPAT(log10l);
+  extern long double log2l( long double ) __LIBMLDBL_COMPAT(log2l);
+  extern long double log1pl( long double ) __LIBMLDBL_COMPAT(log1pl);
+  extern long double logbl( long double ) __LIBMLDBL_COMPAT(logbl);
+  extern long double modfl( long double, long double * ) __LIBMLDBL_COMPAT(modfl);
+  extern long double ldexpl( long double, int ) __LIBMLDBL_COMPAT(ldexpl);
+  extern long double frexpl( long double, int * ) __LIBMLDBL_COMPAT(frexpl);
+  extern int ilogbl( long double ) __LIBMLDBL_COMPAT(ilogbl);
+  extern long double scalbnl( long double, int ) __LIBMLDBL_COMPAT(scalbnl);
+  extern long double scalblnl( long double, long int ) __LIBMLDBL_COMPAT(scalblnl);
+  extern long double fabsl( long double ) __LIBMLDBL_COMPAT(fabsl);
+  extern long double cbrtl( long double ) __LIBMLDBL_COMPAT(cbrtl);
+  extern long double hypotl( long double, long double ) __LIBMLDBL_COMPAT(hypotl);
+  extern long double powl( long double, long double ) __LIBMLDBL_COMPAT(powl);
+  extern long double sqrtl( long double ) __LIBMLDBL_COMPAT(sqrtl);
+  extern long double erfl( long double ) __LIBMLDBL_COMPAT(erfl);
+  extern long double erfcl( long double ) __LIBMLDBL_COMPAT(erfcl);
+  extern long double lgammal( long double ) __LIBMLDBL_COMPAT(lgammal);
+  extern long double tgammal( long double ) __LIBMLDBL_COMPAT(tgammal);
+  extern long double ceill( long double ) __LIBMLDBL_COMPAT(ceill);
+  extern long double floorl( long double ) __LIBMLDBL_COMPAT(floorl);
+  extern long double nearbyintl( long double ) __LIBMLDBL_COMPAT(nearbyintl);
+  extern long double rintl( long double ) __LIBMLDBL_COMPAT(rintl);
+  extern long int lrintl( long double ) __LIBMLDBL_COMPAT(lrintl);
+  extern long long int llrintl( long double ) __LIBMLDBL_COMPAT(llrintl);
+  extern long double roundl( long double ) __LIBMLDBL_COMPAT(roundl);
+  extern long int lroundl( long double ) __LIBMLDBL_COMPAT(lroundl);
+  extern long long int llroundl( long double ) __LIBMLDBL_COMPAT(llroundl);
+  extern long double truncl( long double ) __LIBMLDBL_COMPAT(truncl);
+  extern long double fmodl( long double, long double) __LIBMLDBL_COMPAT(fmodl);
+  extern long double remainderl( long double, long double ) __LIBMLDBL_COMPAT(remainderl);
+  extern long double remquol( long double, long double, int * ) __LIBMLDBL_COMPAT(remquol);
+  extern long double copysignl( long double, long double ) __LIBMLDBL_COMPAT(copysignl);
+  extern long double nanl( const char * ) __LIBMLDBL_COMPAT(nanl);
+  extern long double nextafterl( long double, long double ) __LIBMLDBL_COMPAT(nextafterl);
+  extern long double nexttowardl( long double, long double ) __LIBMLDBL_COMPAT(nexttowardl);
+  extern long double fdiml( long double, long double ) __LIBMLDBL_COMPAT(fdiml);
+  extern long double fmaxl( long double, long double ) __LIBMLDBL_COMPAT(fmaxl);
+  extern long double fminl( long double, long double ) __LIBMLDBL_COMPAT(fminl);
+  extern long double fmal( long double, long double, long double ) __LIBMLDBL_COMPAT(fmal);
+# ifdef __cplusplus
+   }
+# endif
+#endif /* __MATH__ */
diff -N -u -r -w gcc-4.8.2/fixincludes/tests/base/complex.h gcc-4.8.2-patched/fixincludes/tests/base/complex.h
--- gcc-4.8.2/fixincludes/tests/base/complex.h	2012-03-14 16:33:37.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/tests/base/complex.h	2019-08-06 12:58:55.869966000 +0000
@@ -21,6 +21,12 @@
 #endif  /* HPUX_IMAGINARY_I_CHECK */
 
 
+#if defined( IRIX_COMPLEX_CHECK )
+#define _Complex_I (__extension__ 1.0iF)
+#define I _Complex_I
+#endif  /* IRIX_COMPLEX_CHECK */
+
+
 #if defined( SOLARIS_COMPLEX_CHECK )
 #define _Complex_I (__extension__ 1.0iF)
 #define	complex		_Complex
diff -N -u -r -w gcc-4.8.2/fixincludes/tests/base/internal/math_core.h gcc-4.8.2-patched/fixincludes/tests/base/internal/math_core.h
--- gcc-4.8.2/fixincludes/tests/base/internal/math_core.h	1970-01-01 00:00:00.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/tests/base/internal/math_core.h	2019-08-06 12:58:56.554745440 +0000
@@ -0,0 +1,30 @@
+/*  DO NOT EDIT THIS FILE.
+
+    It has been auto-edited by fixincludes from:
+
+	"fixinc/tests/inc/internal/math_core.h"
+
+    This had to be done to correct non-standard usages in the
+    original, manufacturer supplied header file.  */
+
+
+
+#if defined( IRIX___GENERIC1_CHECK )
+extern int isnan(double);
+extern int isnanf(float);
+extern int isnanl(long double);
+#define isnan(x) (sizeof(x) == sizeof(double) ? _isnan(x) \
+               : sizeof(x) == sizeof(float) ? _isnanf(x) \
+               : _isnanl(x))
+
+
+#endif  /* IRIX___GENERIC1_CHECK */
+
+
+#if defined( IRIX___GENERIC2_CHECK )
+#define isless(x,y) \
+  ((sizeof(x)<=4 && sizeof(y)<=4) ? _islessf(x,y) \
+   : (sizeof(x)<=8 && sizeof(y)<=8) ? _isless(x,y) \
+   : _islessl(x,y))
+
+#endif  /* IRIX___GENERIC2_CHECK */
diff -N -u -r -w gcc-4.8.2/fixincludes/tests/base/internal/sgimacros.h gcc-4.8.2-patched/fixincludes/tests/base/internal/sgimacros.h
--- gcc-4.8.2/fixincludes/tests/base/internal/sgimacros.h	1970-01-01 00:00:00.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/tests/base/internal/sgimacros.h	2019-08-06 12:58:56.562210800 +0000
@@ -0,0 +1,17 @@
+/*  DO NOT EDIT THIS FILE.
+
+    It has been auto-edited by fixincludes from:
+
+	"fixinc/tests/inc/internal/sgimacros.h"
+
+    This had to be done to correct non-standard usages in the
+    original, manufacturer supplied header file.  */
+
+
+
+#if defined( IRIX___RESTRICT_CHECK )
+#ifdef __c99
+#  ifndef __cplusplus
+#  define __restrict restrict
+#  endif
+#endif  /* IRIX___RESTRICT_CHECK */
diff -N -u -r -w gcc-4.8.2/fixincludes/tests/base/internal/wchar_core.h gcc-4.8.2-patched/fixincludes/tests/base/internal/wchar_core.h
--- gcc-4.8.2/fixincludes/tests/base/internal/wchar_core.h	1970-01-01 00:00:00.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/tests/base/internal/wchar_core.h	2019-08-06 12:58:56.563994560 +0000
@@ -0,0 +1,15 @@
+/*  DO NOT EDIT THIS FILE.
+
+    It has been auto-edited by fixincludes from:
+
+	"fixinc/tests/inc/internal/wchar_core.h"
+
+    This had to be done to correct non-standard usages in the
+    original, manufacturer supplied header file.  */
+
+
+
+#if defined( IRIX_WCSFTIME_CHECK )
+#if _NO_XOPEN5 && !defined(__c99)
+extern size_t wcsftime(wchar_t *, __SGI_LIBC_NAMESPACE_QUALIFIER size_t, const char *, const struct tm *);
+#endif  /* IRIX_WCSFTIME_CHECK */
diff -N -u -r -w gcc-4.8.2/fixincludes/tests/base/iso/math_iso.h gcc-4.8.2-patched/fixincludes/tests/base/iso/math_iso.h
--- gcc-4.8.2/fixincludes/tests/base/iso/math_iso.h	2013-05-31 12:43:36.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/tests/base/iso/math_iso.h	2019-08-06 12:58:58.969723600 +0000
@@ -10,7 +10,7 @@
 
 
 #if defined( SOLARIS_POW_INT_OVERLOAD_CHECK )
-#if __cplusplus < 201103L
+#ifndef __GXX_EXPERIMENTAL_CXX0X__
 	inline long double pow(long double __X, int __Y) { return
 		__powl(__X, (long double) (__Y)); }
 #endif
diff -N -u -r -w gcc-4.8.2/fixincludes/tests/base/math.h gcc-4.8.2-patched/fixincludes/tests/base/math.h
--- gcc-4.8.2/fixincludes/tests/base/math.h	2012-10-28 21:42:48.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/tests/base/math.h	2019-08-06 12:58:55.775763360 +0000
@@ -15,6 +15,11 @@
 #endif
 
 
+#if defined( AAB_DARWIN7_9_LONG_DOUBLE_FUNCS_2_CHECK )
+#include <architecture/ppc/math.h>
+#endif  /* AAB_DARWIN7_9_LONG_DOUBLE_FUNCS_2_CHECK */
+
+
 #if defined( BROKEN_CABS_CHECK )
 #ifdef __STDC__
 
@@ -22,12 +27,11 @@
 
 #endif
 
-#endif  /* BROKEN_CABS_CHECK */
+ /* This is a comment
+                         and it ends here. */
 
 
-#if defined( DARWIN_9_LONG_DOUBLE_FUNCS_2_CHECK )
-#include <architecture/ppc/math.h>
-#endif  /* DARWIN_9_LONG_DOUBLE_FUNCS_2_CHECK */
+#endif  /* BROKEN_CABS_CHECK */
 
 
 #if defined( HPPA_HPUX_FP_MACROS_CHECK )
diff -N -u -r -w gcc-4.8.2/fixincludes/tests/base/pthread.h gcc-4.8.2-patched/fixincludes/tests/base/pthread.h
--- gcc-4.8.2/fixincludes/tests/base/pthread.h	2012-06-19 18:55:14.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/tests/base/pthread.h	2019-08-06 12:58:56.409712560 +0000
@@ -23,31 +23,50 @@
 #endif  /* AIX_ONCE_INIT_2_CHECK */
 
 
-#if defined( AIX_MUTEX_INITIALIZER_1_CHECK )
+#if defined( AIX_PTHREAD_CHECK )
 #define PTHREAD_MUTEX_INITIALIZER \
-{{ \
+{...init stuff...}
+#endif  /* AIX_PTHREAD_CHECK */
 
-#endif  /* AIX_MUTEX_INITIALIZER_1_CHECK */
 
+#if defined( ALPHA_PTHREAD_CHECK )
+#  if defined (_PTHREAD_ENV_DECC) || defined (_PTHREAD_ENV_EPCC) || defined (__PRAGMA_EXTERN_PREFIX)
+#   define _PTHREAD_USE_PTDNAM_
+#  endif
+#  if defined (_PTHREAD_ENV_DECC) || defined (__PRAGMA_EXTERN_PREFIX)
+#   define _PTHREAD_USE_PTDNAM_
+#  endif
+#endif  /* ALPHA_PTHREAD_CHECK */
 
-#if defined( AIX_COND_INITIALIZER_1_CHECK )
-#define PTHREAD_COND_INITIALIZER \
-{{ \
 
-#endif  /* AIX_COND_INITIALIZER_1_CHECK */
+#if defined( ALPHA_PTHREAD_GCC_CHECK )
+# define _PTHREAD_ENV_INTELC
+#elif defined (__GNUC__)
+# define _PTHREAD_ENV_GCC
+#else
+# error <pthread.h>: unrecognized compiler.
+#endif
+#endif  /* ALPHA_PTHREAD_GCC_CHECK */
 
 
-#if defined( AIX_RWLOCK_INITIALIZER_1_CHECK )
-#define PTHREAD_RWLOCK_INITIALIZER \
-{{ \
+#if defined( ALPHA_PTHREAD_INIT_CHECK )
+/*
+ * @(#)_RCSfile: pthread.h,v $ _Revision: 1.1.33.21 $ (DEC) _Date: 2000/08/15 15:30:13 $
+ */
+#ifndef _PTHREAD_NOMETER_STATIC
+# define PTHREAD_MUTEX_INITIALIZER     {_PTHREAD_MSTATE_CONFIG, _PTHREAD_MVALID | _PTHREAD_MVF_STA, 0, 0, 0, 0, 0, 0 }
+# define PTHREAD_COND_INITIALIZER     {_PTHREAD_CSTATE_SLOW, _PTHREAD_CVALID | _PTHREAD_CVF_STA, 0, 0, 0, 0 }
+# define PTHREAD_MUTEX_INITWITHNAME_NP(_n_,_a_)     {_PTHREAD_MSTATE_CONFIG, _PTHREAD_MVALID | _PTHREAD_MVF_STA, _n_, _a_, 0, 0, 0, 0 }
+# define PTHREAD_COND_INITWITHNAME_NP(_n_,_a_)     {_PTHREAD_CSTATE_SLOW, _PTHREAD_CVALID | _PTHREAD_CVF_STA, _n_, _a_, 0, 0 }
+#else
+# define PTHREAD_MUTEX_INITIALIZER {0, _PTHREAD_MVALID | _PTHREAD_MVF_STA, 0, 0, 0, 0, 0, 0 }
+# define PTHREAD_MUTEX_INITWITHNAME_NP(_n_,_a_)     {0, _PTHREAD_MVALID | _PTHREAD_MVF_STA, _n_, _a_, 0, 0, 0, 0 }
+# define PTHREAD_COND_INITWITHNAME_NP(_n_,_a_)     {0, _PTHREAD_CVALID | _PTHREAD_CVF_STA, _n_, _a_, 0, 0 }
+#endif
 
-#endif  /* AIX_RWLOCK_INITIALIZER_1_CHECK */
-
-
-#if defined( AIX_PTHREAD_CHECK )
-#define PTHREAD_MUTEX_INITIALIZER \
-{...init stuff...}
-#endif  /* AIX_PTHREAD_CHECK */
+#define PTHREAD_RWLOCK_INITIALIZER {_PTHREAD_RWVALID | _PTHREAD_RWVF_STA, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
+#define PTHREAD_RWLOCK_INITWITHNAME_NP(_n_,_a_)         {_PTHREAD_RWVALID | _PTHREAD_RWVF_STA, _n_, _a_, 0, 0, 0, 0, 0, 0, 0 }
+#endif  /* ALPHA_PTHREAD_INIT_CHECK */
 
 
 #if defined( GLIBC_MUTEX_INIT_CHECK )
@@ -91,11 +110,28 @@
 #endif  /* GLIBC_MUTEX_INIT_CHECK */
 
 
+#if defined( IRIX_PTHREAD_INIT_CHECK )
+#define PTHREAD_MUTEX_INITIALIZER	{ { 0 } }
+#define PTHREAD_COND_INITIALIZER	{ { 0 } }
+#define PTHREAD_RWLOCK_INITIALIZER	{ { 0 } }
+#endif  /* IRIX_PTHREAD_INIT_CHECK */
+
+
 #if defined( PTHREAD_INCOMPLETE_STRUCT_ARGUMENT_CHECK )
 extern int __sigsetjmp (struct __jmp_buf_tag *__env, int __savemask);
 #endif  /* PTHREAD_INCOMPLETE_STRUCT_ARGUMENT_CHECK */
 
 
+#if defined( SOLARIS_COND_INIT_CHECK )
+#pragma ident	"@(#)pthread.h	1.29	01/07/07 SMI"
+#if __STDC__ - 0 == 0 && !defined(_NO_LONGLONG)
+#define	PTHREAD_COND_INITIALIZER	{{{0}, 0, 0x4356}, 0}	/* = DEFAULTCV */
+#else
+#define	PTHREAD_COND_INITIALIZER	{{{0}, 0, 0x4356}, {0}}	/* = DEFAULTCV */
+#endif
+#endif  /* SOLARIS_COND_INIT_CHECK */
+
+
 #if defined( SOLARIS_MUTEX_INIT_2_CHECK )
 #ident "@(#)pthread.h  1.26  98/04/12 SMI"
 #if __STDC__ - 0 == 0 && !defined(_NO_LONGLONG)
@@ -104,9 +140,9 @@
 #define PTHREAD_MUTEX_INITIALIZER	{{{0},0}, {{{0}}}, {0}}
 #endif
 #if __STDC__ - 0 == 0 && !defined(_NO_LONGLONG)
-#define PTHREAD_COND_INITIALIZER	{{{0}, 0}, 0}	/* DEFAULTCV */
+#define PTHREAD_COND_INITIALIZER	{{{0}, 0, 0x4356}, 0}	/* DEFAULTCV */
 #else
-#define PTHREAD_COND_INITIALIZER	{{{0}, 0}, {0}}	/* DEFAULTCV */
+#define PTHREAD_COND_INITIALIZER	{{{0}, 0, 0x4356}, {0}}	/* DEFAULTCV */
 #endif
 #if __STDC__ - 0 == 0 && !defined(_NO_LONGLONG)
 #define	PTHREAD_MUTEX_INITIALIZER		/* = DEFAULTMUTEX */	\
diff -N -u -r -w gcc-4.8.2/fixincludes/tests/base/rtldef/string.h gcc-4.8.2-patched/fixincludes/tests/base/rtldef/string.h
--- gcc-4.8.2/fixincludes/tests/base/rtldef/string.h	2012-03-12 14:23:03.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/tests/base/rtldef/string.h	2019-08-06 12:58:59.562657040 +0000
@@ -13,9 +13,3 @@
 #if !defined(__VAX) && !defined(__GNUC__)
 
 #endif  /* VMS_DISABLE_DECC_STRING_BUILTINS_CHECK */
-
-
-#if defined( VMS_DECC_BUILTIN_CHECK )
-define FD_ZERO(__p) memset((__p), 0, sizeof(*(__p)))
-
-#endif  /* VMS_DECC_BUILTIN_CHECK */
diff -N -u -r -w gcc-4.8.2/fixincludes/tests/base/standards.h gcc-4.8.2-patched/fixincludes/tests/base/standards.h
--- gcc-4.8.2/fixincludes/tests/base/standards.h	1970-01-01 00:00:00.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/tests/base/standards.h	2019-08-06 12:58:55.875825920 +0000
@@ -0,0 +1,14 @@
+/*  DO NOT EDIT THIS FILE.
+
+    It has been auto-edited by fixincludes from:
+
+	"fixinc/tests/inc/standards.h"
+
+    This had to be done to correct non-standard usages in the
+    original, manufacturer supplied header file.  */
+
+
+
+#if defined( ALPHA___EXTERN_PREFIX_STANDARDS_CHECK )
+#if (_ISO_C_SOURCE>=19990L) && !defined(_LIBC_POLLUTION_H_) && !defined(__DECC) && !defined(__PRAGMA_EXTERN_PREFIX)
+#endif  /* ALPHA___EXTERN_PREFIX_STANDARDS_CHECK */
diff -N -u -r -w gcc-4.8.2/fixincludes/tests/base/stdint-irix65.h gcc-4.8.2-patched/fixincludes/tests/base/stdint-irix65.h
--- gcc-4.8.2/fixincludes/tests/base/stdint-irix65.h	1970-01-01 00:00:00.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/tests/base/stdint-irix65.h	2019-08-06 12:58:55.808263360 +0000
@@ -0,0 +1,40 @@
+/*  DO NOT EDIT THIS FILE.
+
+    It has been auto-edited by fixincludes from:
+
+	"fixinc/tests/inc/stdint-irix65.h"
+
+    This had to be done to correct non-standard usages in the
+    original, manufacturer supplied header file.  */
+
+
+
+#if defined( IRIX_STDINT_C99_TYPES_CHECK )
+#define INT64_MIN               (-0x7fffffffffffffffLL - 1)
+#define INT64_MAX               0x7fffffffffffffffLL
+#define UINT32_MAX              0xffffffffU
+#define UINT64_MAX              0xffffffffffffffffULL
+#define INTPTR_MIN              (-0x7fffffffL - 1)
+#define INTPTR_MAX              0x7fffffffL
+#define UINTPTR_MAX             0xffffffffUL
+#define INTPTR_MIN              (-0x7fffffffffffffffL - 1)
+#define INTPTR_MAX              0x7fffffffffffffffL
+#define UINTPTR_MAX             0xffffffffffffffffUL
+#define PTRDIFF_MIN             (-0x7fffffffffffffffL - 1)
+#define PTRDIFF_MAX             0x7fffffffffffffffL
+#define SIZE_MAX                0xffffffffffffffffUL
+#endif  /* IRIX_STDINT_C99_TYPES_CHECK */
+
+
+#if defined( IRIX_STDINT_C99_MACROS_CHECK )
+#define INT8_C(x)               (x)
+#define INT16_C(x)              (x)
+#define INT32_C(x)              (x)
+#define INT64_C(x)              (x ## LL)
+#define UINT8_C(x)              (x)
+#define UINT16_C(x)             (x)
+#define UINT32_C(x)             (x ## U)
+#define UINT64_C(x)             (x ## ULL)
+#define INTMAX_C(x)             (x ## LL)
+#define UINTMAX_C(x)            (x ## ULL)
+#endif  /* IRIX_STDINT_C99_MACROS_CHECK */
diff -N -u -r -w gcc-4.8.2/fixincludes/tests/base/stdint.h gcc-4.8.2-patched/fixincludes/tests/base/stdint.h
--- gcc-4.8.2/fixincludes/tests/base/stdint.h	2012-03-14 16:33:37.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/tests/base/stdint.h	2019-08-06 12:58:55.671799120 +0000
@@ -14,3 +14,10 @@
 # define UINT8_C(c)	c
 # define UINT16_C(c)	c
 #endif  /* GLIBC_STDINT_CHECK */
+
+
+#if defined( IRIX_STDINT_C99_MODE_CHECK )
+#if 0
+#error This header file is to be used only for c99 mode compilations
+#else
+#endif  /* IRIX_STDINT_C99_MODE_CHECK */
diff -N -u -r -w gcc-4.8.2/fixincludes/tests/base/sys/asm.h gcc-4.8.2-patched/fixincludes/tests/base/sys/asm.h
--- gcc-4.8.2/fixincludes/tests/base/sys/asm.h	1970-01-01 00:00:00.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/tests/base/sys/asm.h	2019-08-06 12:58:57.921254320 +0000
@@ -0,0 +1,14 @@
+/*  DO NOT EDIT THIS FILE.
+
+    It has been auto-edited by fixincludes from:
+
+	"fixinc/tests/inc/sys/asm.h"
+
+    This had to be done to correct non-standard usages in the
+    original, manufacturer supplied header file.  */
+
+
+
+#if defined( IRIX_ASM_APOSTROPHE_CHECK )
+	# and we are on vacation
+#endif  /* IRIX_ASM_APOSTROPHE_CHECK */
diff -N -u -r -w gcc-4.8.2/fixincludes/tests/base/sys/socket.h gcc-4.8.2-patched/fixincludes/tests/base/sys/socket.h
--- gcc-4.8.2/fixincludes/tests/base/sys/socket.h	2012-03-14 16:33:37.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/tests/base/sys/socket.h	2019-08-06 12:58:58.475156240 +0000
@@ -25,3 +25,13 @@
 #endif
 
 #endif  /* HPUX11_EXTERN_SENDPATH_CHECK */
+
+
+#if defined( IRIX_SOCKLEN_T_CHECK )
+#define _SOCKLEN_T
+#if _NO_XOPEN4 && _NO_XOPEN5
+typedef int socklen_t;
+#else
+typedef u_int32_t socklen_t;
+#endif /* _NO_XOPEN4 && _NO_XOPEN5 */
+#endif  /* IRIX_SOCKLEN_T_CHECK */
diff -N -u -r -w gcc-4.8.2/fixincludes/tests/base/sys/stat.h gcc-4.8.2-patched/fixincludes/tests/base/sys/stat.h
--- gcc-4.8.2/fixincludes/tests/base/sys/stat.h	2012-10-28 21:42:48.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/tests/base/sys/stat.h	2019-08-06 12:58:58.610179920 +0000
@@ -9,6 +9,11 @@
 
 
 
+#if defined( ALPHA___EXTERN_PREFIX_SYS_STAT_CHECK )
+#   if defined(__DECC) || defined(__PRAGMA_EXTERN_PREFIX)
+#endif  /* ALPHA___EXTERN_PREFIX_SYS_STAT_CHECK */
+
+
 #if defined( GLIBC_C99_INLINE_2_CHECK )
 #ifdef __GNUC_GNU_INLINE__
 extern
@@ -28,13 +33,6 @@
 #endif  /* RS6000_FCHMOD_CHECK */
 
 
-#if defined( VXWORKS_MKDIR_MACRO_CHECK )
-extern STATUS mkdir (const char * _qwerty) ;
-#define mkdir(dir, ...) ((void)0, ##__VA_ARGS__, (mkdir)(dir))
-
-#endif  /* VXWORKS_MKDIR_MACRO_CHECK */
-
-
 #if defined( VXWORKS_NEEDS_VXWORKS_CHECK )
 #include </dev/null> /* ULONG */
 # define	__INCstath <sys/stat.h>
diff -N -u -r -w gcc-4.8.2/fixincludes/tests/base/testing.h gcc-4.8.2-patched/fixincludes/tests/base/testing.h
--- gcc-4.8.2/fixincludes/tests/base/testing.h	2012-10-28 21:42:48.000000000 +0000
+++ gcc-4.8.2-patched/fixincludes/tests/base/testing.h	2019-08-06 12:58:56.476071840 +0000
@@ -9,6 +9,23 @@
 
 
 
+#if defined( ALPHA___EXTERN_PREFIX_CHECK )
+#if (defined(__DECC) || defined(__PRAGMA_EXTERN_PREFIX))
+#pragma extern_prefix "_P"
+#   if  (defined(__DECC) || defined(__PRAGMA_EXTERN_PREFIX))
+#     pragma extern_prefix "_E"
+# if !defined(_LIBC_POLLUTION_H_) &&  (defined(__DECC) || defined(__PRAGMA_EXTERN_PREFIX))
+#  pragma extern_prefix ""
+#endif  /* ALPHA___EXTERN_PREFIX_CHECK */
+
+
+#if defined( ALPHA_BAD_LVAL_CHECK )
+#pragma extern_prefix "_FOO"
+#define something _FOOsomething
+#define mumble _FOOmumble
+#endif  /* ALPHA_BAD_LVAL_CHECK */
+
+
 #if defined( AVOID_WCHAR_T_TYPE_CHECK )
 #ifndef __cplusplus
 typedef unsigned short	wchar_t 	;
@@ -114,9 +131,3 @@
 #endif
 
 #endif  /* VMS_USE_PRAGMA_EXTERN_MODEL_CHECK */
-
-
-#if defined( VXWORKS_REGS_CHECK )
-#include <arch/../regs.h>
-
-#endif  /* VXWORKS_REGS_CHECK */
diff -N -u -r -w gcc-4.8.2/gcc/config/mips/driver-native.c gcc-4.8.2-patched/gcc/config/mips/driver-native.c
--- gcc-4.8.2/gcc/config/mips/driver-native.c	2013-01-10 20:38:27.000000000 +0000
+++ gcc-4.8.2-patched/gcc/config/mips/driver-native.c	2019-08-06 13:15:25.179559280 +0000
@@ -22,6 +22,59 @@
 #include "coretypes.h"
 #include "tm.h"
 
+#ifdef __sgi__
+#include <invent.h>
+#include <sys/sbd.h>
+
+/* Cf. MIPS R10000 Microprocessor User Guide, Version 2.0, 14.13 Processor
+   Revision Identifier (PRId) Register (15).
+
+   http://techpubs.sgi.com/library/tpl/cgi-bin/getdoc.cgi/hdwr/bks/SGI_Developer/books/R10K_UM/sgi_html/t5.Ver.2.0.book_279.html  */
+
+static const struct cpu_types {
+  int impl;
+  const char *cpu;
+} cpu_types[] = {
+  { C0_IMP_R2000, "r2000" },
+  { C0_IMP_R3000, "r3000" },
+  { C0_IMP_R6000, "r6000" },
+  { C0_IMP_R4000, "r4000" },
+  { C0_IMP_R6000A, "r6000" },
+  { C0_IMP_R10000, "r10000" },
+  { C0_IMP_R12000, "r12000" },
+  { C0_IMP_R14000, "r14000" },
+  { C0_IMP_R8000,  "r8000" },
+  { C0_IMP_R4600,  "r4600" },
+  { C0_IMP_R4700,  "r4600" },
+  { C0_IMP_R4650,  "r4650" },
+  { C0_IMP_R5000,  "vr5000" },
+  { C0_IMP_RM7000, "rm7000" },
+  { C0_IMP_RM5271, "vr5000" },
+  { 0, 0 }
+};
+
+static int
+cputype (inventory_t *inv, void *arg)
+{
+  if (inv != NULL
+      && inv->inv_class == INV_PROCESSOR
+      && inv->inv_type == INV_CPUCHIP)
+    {
+      int i;
+      /* inv_state is the cpu revision number.  */
+      int impl = (inv->inv_state & C0_IMPMASK) >> C0_IMPSHIFT;
+
+      for (i = 0; cpu_types[i].cpu != NULL; i++)
+	if (cpu_types[i].impl == impl)
+	  {
+	    *((const char **) arg) = cpu_types[i].cpu;
+	    break;
+	  }
+    }
+  return 0;
+}
+#endif
+
 /* This will be called by the spec parser in gcc.c when it sees
    a %:local_cpu_detect(args) construct.  Currently it will be called
    with either "arch" or "tune" as argument depending on if -march=native
@@ -39,8 +92,10 @@
 host_detect_local_cpu (int argc, const char **argv)
 {
   const char *cpu = NULL;
+#ifndef __sgi__
   char buf[128];
   FILE *f;
+#endif
   bool arch;
 
   if (argc < 1)
@@ -50,6 +105,9 @@
   if (!arch && strcmp (argv[0], "tune"))
     return NULL;
 
+#ifdef __sgi__
+  scaninvent (cputype, &cpu);
+#else
   f = fopen ("/proc/cpuinfo", "r");
   if (f == NULL)
     return NULL;
@@ -75,6 +133,7 @@
       }
 
   fclose (f);
+#endif
 
   if (cpu == NULL)
     return NULL;
diff -N -u -r -w gcc-4.8.2/gcc/config/mips/iris6.h gcc-4.8.2-patched/gcc/config/mips/iris6.h
--- gcc-4.8.2/gcc/config/mips/iris6.h	1970-01-01 00:00:00.000000000 +0000
+++ gcc-4.8.2-patched/gcc/config/mips/iris6.h	2019-08-06 12:58:54.861616080 +0000
@@ -0,0 +1,385 @@
+/* Definitions of target machine for GNU compiler.  IRIX 6.5 version.
+   Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 2000,
+   2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012
+   Free Software Foundation, Inc.
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 3, or (at your option)
+any later version.
+
+GCC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with GCC; see the file COPYING3.  If not see
+<http://www.gnu.org/licenses/>.  */
+
+/* We are compiling for IRIX 6 now.  */
+#undef TARGET_IRIX6
+#define TARGET_IRIX6 1
+
+/* we use GNU binutils here */
+#define IRIX_USING_GNU_LD 1
+
+/* Default to -mabi=n32 and -mips3.  */
+#undef MULTILIB_DEFAULTS
+#define MULTILIB_DEFAULTS { "mabi=n32" }
+
+/* -march=native handling only makes sense with compiler running on
+   a MIPS chip.  */
+#if defined(__mips__)
+extern const char *host_detect_local_cpu (int argc, const char **argv);
+# define EXTRA_SPEC_FUNCTIONS \
+  { "local_cpu_detect", host_detect_local_cpu },
+
+# define MARCH_MTUNE_NATIVE_SPECS				\
+  " %{march=native:%<march=native %:local_cpu_detect(arch)}"	\
+  " %{mtune=native:%<mtune=native %:local_cpu_detect(tune)}"
+#else
+# define MARCH_MTUNE_NATIVE_SPECS ""
+#endif
+
+#define PREFERRRED_DEBUGGING_TYPE DWARF2_DEBUG
+
+/* Force the default ABI onto the command line in order to make the specs
+   easier to write.  */
+#undef DRIVER_SELF_SPECS
+#define DRIVER_SELF_SPECS 			\
+  "%{!mabi=*: -mabi=n32}", 			\
+  /* Configuration-independent MIPS rules.  */	\
+  BASE_DRIVER_SELF_SPECS,			\
+  MARCH_MTUNE_NATIVE_SPECS
+
+/* IRIX 6.5 has the float and long double forms of math functions.  */
+/* #define TARGET_C99_FUNCTIONS 1 */
+
+/* MIPS specific debugging info */
+/* #define MIPS_DEBUGGING_INFO 1 */
+#define SGUG_DEBUGGING_INFO 1
+
+/* Force the generation of dwarf .debug_frame sections even if not
+   compiling -g.  This guarantees that we can unwind the stack.  */
+#define DWARF2_FRAME_INFO 1
+
+/* The system unwinder in libexc requires a specific dwarf return address
+   column to work.  */
+#undef  DWARF_FRAME_RETURN_COLUMN
+#define DWARF_FRAME_RETURN_COLUMN (FP_REG_LAST + 1)
+
+/* The size in bytes of a DWARF field indicating an offset or length
+   relative to a debug info section, specified to be 4 bytes in the DWARF-2
+   specification.  The SGI/MIPS ABI defines it to be the same as PTR_SIZE.  */
+#define DWARF_OFFSET_SIZE PTR_SIZE
+
+/* The size in bytes of the initial length field in a debug info
+   section.  The DWARF 3 (draft) specification defines this to be
+   either 4 or 12 (with a 4-byte "escape" word when it's 12), but the
+   SGI/MIPS ABI predates this standard and defines it to be the same
+   as DWARF_OFFSET_SIZE.  */
+#define DWARF_INITIAL_LENGTH_SIZE DWARF_OFFSET_SIZE
+
+/* MIPS assemblers don't have the usual .set foo,bar construct;
+   .set is used for assembler options instead.  */
+#undef SET_ASM_OP
+#define ASM_OUTPUT_DEF(FILE, LABEL1, LABEL2)			\
+  do								\
+    {								\
+      fputc ('\t', FILE);					\
+      assemble_name (FILE, LABEL1);				\
+      fputs (" = ", FILE);					\
+      assemble_name (FILE, LABEL2);				\
+      fputc ('\n', FILE);					\
+    }								\
+  while (0)
+
+#undef LOCAL_LABEL_PREFIX
+#define LOCAL_LABEL_PREFIX "."
+
+#undef ASM_DECLARE_OBJECT_NAME
+#define ASM_DECLARE_OBJECT_NAME mips_declare_object_name
+
+#undef ASM_FINISH_DECLARE_OBJECT
+#define ASM_FINISH_DECLARE_OBJECT mips_finish_declare_object
+
+/* The native IRIX 6 linker does not support merging without a special
+   elspec(5) file.  */
+#ifndef IRIX_USING_GNU_LD
+#undef HAVE_GAS_SHF_MERGE
+#define HAVE_GAS_SHF_MERGE 0
+#endif
+
+/* Specify wchar_t types.  */
+#undef WCHAR_TYPE
+#define WCHAR_TYPE (Pmode == DImode ? "int" : "long int")
+
+#undef WCHAR_TYPE_SIZE
+#define WCHAR_TYPE_SIZE INT_TYPE_SIZE
+
+/* Same for wint_t.  */
+#undef WINT_TYPE
+#define WINT_TYPE (Pmode == DImode ? "int" : "long int")
+
+#undef WINT_TYPE_SIZE
+#define WINT_TYPE_SIZE INT_TYPE_SIZE
+
+#ifndef USED_FOR_TARGET
+/* Use long for intmax_t, uintmax_t?  */
+extern int long_intmax;
+#endif
+
+/* C99 stdint.h types.  */
+#define INT8_TYPE "signed char"
+#define INT16_TYPE "short int"
+#define INT32_TYPE "int"
+#define INT64_TYPE "long long int"
+#define UINT8_TYPE "unsigned char"
+#define UINT16_TYPE "short unsigned int"
+#define UINT32_TYPE "unsigned int"
+#define UINT64_TYPE "long long unsigned int"
+
+#define INT_LEAST8_TYPE "signed char"
+#define INT_LEAST16_TYPE "short int"
+#define INT_LEAST32_TYPE "int"
+#define INT_LEAST64_TYPE "long long int"
+#define UINT_LEAST8_TYPE "unsigned char"
+#define UINT_LEAST16_TYPE "short unsigned int"
+#define UINT_LEAST32_TYPE "unsigned int"
+#define UINT_LEAST64_TYPE "long long unsigned int"
+
+#define INT_FAST8_TYPE "signed char"
+#define INT_FAST16_TYPE "short int"
+#define INT_FAST32_TYPE "int"
+#define INT_FAST64_TYPE "long long int"
+#define UINT_FAST8_TYPE "unsigned char"
+#define UINT_FAST16_TYPE "short unsigned int"
+#define UINT_FAST32_TYPE "unsigned int"
+#define UINT_FAST64_TYPE "long long unsigned int"
+
+#define INTMAX_TYPE (long_intmax ? "long int" : "long long int")
+#define UINTMAX_TYPE (long_intmax ? "long unsigned int" : "long long unsigned int")
+
+#define INTPTR_TYPE "long int"
+#define UINTPTR_TYPE "long unsigned int"
+
+#define SIG_ATOMIC_TYPE "int"
+
+/* Plain char is unsigned in the SGI compiler.  */
+#undef DEFAULT_SIGNED_CHAR
+#define DEFAULT_SIGNED_CHAR 0
+
+#define TARGET_OS_CPP_BUILTINS()				\
+  do								\
+    {								\
+      builtin_define_std ("host_mips");				\
+      builtin_define_std ("sgi");				\
+      builtin_define_std ("unix");				\
+      builtin_define_std ("SYSTYPE_SVR4");			\
+      builtin_define ("_MODERN_C");				\
+      builtin_define ("_SVR4_SOURCE");				\
+      builtin_define ("__DSO__");				\
+      builtin_assert ("system=unix");				\
+      builtin_assert ("system=svr4");				\
+      builtin_assert ("machine=sgi");				\
+								\
+      if (!ISA_MIPS1 && !ISA_MIPS2)				\
+	builtin_define ("_COMPILER_VERSION=601");		\
+								\
+      /* We must always define _LONGLONG, even when -ansi is	\
+	 used, because IRIX 5 system header files require it.	\
+	 This is OK, because gcc never warns when long long	\
+	 is used in system header files.			\
+								\
+	 An alternative would be to support the SGI builtin	\
+	 type __long_long.  */					\
+      builtin_define ("_LONGLONG");				\
+								\
+      /* IRIX 6.5.18 and above provide many ISO C99		\
+	 features protected by the __c99 macro.			\
+	 libstdc++ v3 needs them as well.  */			\
+      if (flag_isoc99 || c_dialect_cxx ())			\
+	builtin_define ("__c99");				\
+								\
+      /* The GNU C++ standard library requires that		\
+	 __EXTENSIONS__ and _SGI_SOURCE be defined on at	\
+	 least IRIX 6.2 and probably all IRIX 6 prior to 6.5.	\
+	 We don't need this on IRIX 6.5 itself, but it		\
+	 shouldn't hurt other than the namespace pollution.  */	\
+      if (!flag_iso || c_dialect_cxx ())			\
+	{							\
+	  builtin_define ("__EXTENSIONS__");			\
+	  builtin_define ("_SGI_SOURCE");			\
+	}							\
+    }								\
+  while (0)
+
+/* SUBTARGET_OVERRIDE_OPTIONS is run after C_COMMON_OVERRIDE_OPTIONS, so
+   only set long_intmax if uninitialized.  */
+#undef SUBTARGET_OVERRIDE_OPTIONS
+#define SUBTARGET_OVERRIDE_OPTIONS 		\
+  do						\
+    {						\
+      if (long_intmax == -1)			\
+	long_intmax = mips_abi == ABI_64;	\
+    }						\
+  while (0)
+
+/*
+      if (!global_options_set.x_dwarf_strict)	\
+	dwarf_strict = 1;			\
+      if (!global_options_set.x_dwarf_version)	\
+	dwarf_version = 2;			\
+*/
+
+extern void irix6_c_common_override_options (void);
+#define C_COMMON_OVERRIDE_OPTIONS irix6_c_common_override_options()
+
+#undef SUBTARGET_CC1_SPEC
+#define SUBTARGET_CC1_SPEC "%{static: -mno-abicalls}"
+
+#undef SUBTARGET_CPP_SPEC
+#define SUBTARGET_CPP_SPEC "%{pthread:-D_REENTRANT}"
+
+#undef INIT_SECTION_ASM_OP
+#define INIT_SECTION_ASM_OP "\t.section\t.gcc_init,\"ax\",@progbits"
+
+#undef FINI_SECTION_ASM_OP
+#define FINI_SECTION_ASM_OP "\t.section\t.gcc_fini,\"ax\",@progbits"
+
+#ifdef IRIX_USING_GNU_LD
+#define IRIX_NO_UNRESOLVED ""
+#else
+#define IRIX_NO_UNRESOLVED "-no_unresolved"
+#endif
+
+#ifdef IRIX_USING_GNU_LD
+#define SUBTARGET_DONT_WARN_UNUSED_SPEC ""
+#define SUBTARGET_WARN_UNUSED_SPEC ""
+#else
+#define SUBTARGET_DONT_WARN_UNUSED_SPEC "-dont_warn_unused"
+#define SUBTARGET_WARN_UNUSED_SPEC "-warn_unused"
+#endif
+
+/* Profiling is supported via libprof1.a not -lc_p as in IRIX 3.  */
+#undef STARTFILE_SPEC
+#define STARTFILE_SPEC \
+  "%{!shared: \
+     %{mabi=n32: \
+       %{mips4:%{pg:/usr/lib32/mips4/gcrt1.o%s} \
+         %{!pg:%{p:/usr/lib32/mips4/mcrt1.o%s /usr/lib32/mips4/libprof1.a%s} \
+           %{!p:/usr/lib32/mips4/crt1.o%s}}} \
+       %{!mips4:%{pg:/usr/lib32/mips3/gcrt1.o%s} \
+         %{!pg:%{p:/usr/lib32/mips3/mcrt1.o%s /usr/lib32/mips3/libprof1.a%s} \
+           %{!p:/usr/lib32/mips3/crt1.o%s}}}} \
+     %{mabi=64: \
+       %{mips4:%{pg:/usr/lib64/mips4/gcrt1.o} \
+         %{!pg:%{p:/usr/lib64/mips4/mcrt1.o /usr/lib64/mips4/libprof1.a} \
+           %{!p:/usr/lib64/mips4/crt1.o}}} \
+       %{!mips4:%{pg:/usr/lib64/mips3/gcrt1.o} \
+         %{!pg:%{p:/usr/lib64/mips3/mcrt1.o /usr/lib64/mips3/libprof1.a} \
+           %{!p:/usr/lib64/mips3/crt1.o}}}}} \
+  irix-crti.o%s crtbegin.o%s"
+
+#undef LIB_SPEC
+#define LIB_SPEC \
+  "%{mabi=n32: %{mips4:-L/usr/lib32/mips4} %{!mips4:-L/usr/lib32/mips3} \
+     -L/usr/lib32} \
+   %{mabi=64: %{mips4:-L/usr/lib64/mips4} %{!mips4:-L/usr/lib64/mips3} \
+     -L/usr/lib64} \
+   %{!shared:" \
+     SUBTARGET_DONT_WARN_UNUSED_SPEC \
+     " %{pthread:-lpthread} %{p:libprof1.a%s}%{pg:libprof1.a%s} -lc " \
+     SUBTARGET_WARN_UNUSED_SPEC "}"
+
+/* Avoid getting two warnings for libgcc.a everytime we link.  libgcc.a
+   contains references to copysignl, so link with libm to resolve them.  */
+#undef LIBGCC_SPEC
+#define LIBGCC_SPEC \
+  SUBTARGET_DONT_WARN_UNUSED_SPEC " -lgcc -lm " SUBTARGET_WARN_UNUSED_SPEC
+
+#undef ENDFILE_SPEC
+#define ENDFILE_SPEC \
+  "%{Ofast|ffast-math|funsafe-math-optimizations:crtfastmath.o%s} \
+   crtend.o%s irix-crtn.o%s \
+   %{!shared: \
+     %{mabi=n32:%{mips4:/usr/lib32/mips4/crtn.o%s}\
+       %{!mips4:/usr/lib32/mips3/crtn.o%s}}\
+     %{mabi=64:%{mips4:/usr/lib64/mips4/crtn.o%s}\
+       %{!mips4:/usr/lib64/mips3/crtn.o%s}}}"
+
+/* Generic part of the LINK_SPEC.  */
+#undef LINK_SPEC
+#define LINK_SPEC "\
+%{G*} %{EB} %{EL} %{mips1} %{mips2} %{mips3} %{mips4} \
+%{bestGnum} %{shared} %{non_shared} \
+%{call_shared} %{no_archive} %{exact_version} \
+%{!shared: \
+  %{!non_shared: %{!call_shared:%{!r: -call_shared " IRIX_NO_UNRESOLVED "}}}} \
+%{rpath} %{!r: -init __gcc_init -fini __gcc_fini} " IRIX_SUBTARGET_LINK_SPEC
+
+#ifdef IRIX_USING_GNU_LD
+#define IRIX_SUBTARGET_LINK_SPEC \
+  "%{mabi=n32: -melf32bmipn32}%{mabi=64: -melf64bmip}"
+#else
+  /* Explicitly hide crt symbols that would normally be marked with
+     a "hidden" visibility attribute.
+     
+     We have traditionally disabled this attribute when using the
+     native linker because the native linker's visibility support is
+     not fully-compatible with the GNU linker's.  In particular, the
+     native linker does not pull in archive objects purely to resolve
+     references to the object's hidden symbols, whereas the GNU
+     linker does.
+     
+     The gcc build system currently hides symbols in some static
+     libraries (typically libgcov.a or libgcc.a) whenever visibility
+     attributes are supported.  On targets with GNU semantics, this
+     makes sure that uses of libx.so symbols in one dynamic object are
+     not resolved to libx.a symbols in another dynamic object.  But
+     on targets with IRIX semantics, hiding the symbols prevents the
+     static archive from working at all.
+     
+     It would probably be better to enable visiblity attributes for
+     IRIX ld and disable the static archives versioning.  It shouldn't
+     make anything worse, since libx.a symbols are global by default
+     anyway.  However, no-one has volunteered to do this yet.  */
+
+#define IRIX_SUBTARGET_LINK_SPEC \
+  "%{w} -_SYSTYPE_SVR4 -woff 131 \
+   %{shared:-hidden_symbol __dso_handle} \
+   %{mabi=n32: -n32}%{mabi=64: -64}%{!mabi*: -n32}"
+#endif
+
+/* A linker error can empirically be avoided by removing duplicate
+   library search directories.  */
+/* #define LINK_ELIMINATE_DUPLICATE_LDIRECTORIES 1 */
+
+/* The SGI linker doesn't understand constructor priorities.  */
+#ifndef IRIX_USING_GNU_LD
+#define SUPPORTS_INIT_PRIORITY 0
+#endif
+
+/* Add -g to mips.h default to avoid confusing gas with local symbols
+   generated from stabs info.  */
+#undef NM_FLAGS
+#define NM_FLAGS "-Bng"
+
+/* The system header files are C++ aware.  */
+/* ??? Unfortunately, most but not all of the headers are C++ aware.
+   Specifically, curses.h is not, and as a consequence, defining this
+   used to prevent libg++ building.  This is no longer the case so
+   define it again to prevent other problems, e.g. with getopt in
+   unistd.h.  We still need some way to fix just those files that need
+   fixing.  */
+#define NO_IMPLICIT_EXTERN_C 1
+
+/* -G is incompatible with -KPIC which is the default, so only allow objects
+   in the small data section if the user explicitly asks for it.  */
+#undef MIPS_DEFAULT_GVALUE
+#define MIPS_DEFAULT_GVALUE 0
+
+#define MIPS_TFMODE_FORMAT mips_extended_format
diff -N -u -r -w gcc-4.8.2/gcc/config/mips/iris6.opt gcc-4.8.2-patched/gcc/config/mips/iris6.opt
--- gcc-4.8.2/gcc/config/mips/iris6.opt	1970-01-01 00:00:00.000000000 +0000
+++ gcc-4.8.2-patched/gcc/config/mips/iris6.opt	2019-08-06 12:58:54.867984160 +0000
@@ -0,0 +1,45 @@
+; IRIX 6.5 options.
+
+; Copyright (C) 2011
+; Free Software Foundation, Inc.
+;
+; This file is part of GCC.
+;
+; GCC is free software; you can redistribute it and/or modify it under
+; the terms of the GNU General Public License as published by the Free
+; Software Foundation; either version 3, or (at your option) any later
+; version.
+;
+; GCC is distributed in the hope that it will be useful, but WITHOUT ANY
+; WARRANTY; without even the implied warranty of MERCHANTABILITY or
+; FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+; for more details.
+;
+; You should have received a copy of the GNU General Public License
+; along with GCC; see the file COPYING3.  If not see
+; <http://www.gnu.org/licenses/>.
+
+; See the GCC internals manual (options.texi) for a description of
+; this file's format.
+
+; Please try to keep this file in ASCII collating order.
+
+bestGnum
+Driver
+
+call_shared
+Driver
+
+exact_version
+Driver
+
+no_archive
+Driver
+
+non_shared
+Driver
+
+pthread
+Driver
+
+; This comment is to ensure we retain the blank line above.
diff -N -u -r -w gcc-4.8.2/gcc/config/mips/irix6-c.c gcc-4.8.2-patched/gcc/config/mips/irix6-c.c
--- gcc-4.8.2/gcc/config/mips/irix6-c.c	1970-01-01 00:00:00.000000000 +0000
+++ gcc-4.8.2-patched/gcc/config/mips/irix6-c.c	2019-08-06 12:58:54.870566560 +0000
@@ -0,0 +1,38 @@
+/* IRIX 6 support needed only by C/C++ frontends.
+   Copyright (C) 2012 Free Software Foundation, Inc.
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 3, or (at your option)
+any later version.
+
+GCC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with GCC; see the file COPYING3.  If not see
+<http://www.gnu.org/licenses/>.  */
+
+#include "config.h"
+#include "system.h"
+#include "coretypes.h"
+#include "tree.h"
+#include "tm.h"
+#include "c-family/c-common.h"
+
+/* For C99, intmax_t, uintmax_t are always long long int, otherwise the
+   type differs between 32-bit and 64-bit compilations.  */
+void
+irix6_c_common_override_options (void)
+{
+  if (flag_isoc99 || c_dialect_cxx ())
+    long_intmax = 0;
+  else
+    /* Cannot use LONG_TYPE_SIZE == 64.  LONG_TYPE_SIZE is only set in
+       mips_option_override after C_COMMON_OVERRIDE_OPTIONS.  */
+    long_intmax = mips_abi == ABI_64;
+}
diff -N -u -r -w gcc-4.8.2/gcc/config/mips/mips.c gcc-4.8.2-patched/gcc/config/mips/mips.c
--- gcc-4.8.2/gcc/config/mips/mips.c	2013-02-25 13:53:16.000000000 +0000
+++ gcc-4.8.2-patched/gcc/config/mips/mips.c	2019-08-06 13:15:54.911501600 +0000
@@ -544,6 +544,12 @@
 enum processor mips_arch;
 const struct mips_cpu_info *mips_arch_info;
 
+#if TARGET_IRIX6
+/* On IRIX 6, intmax_t and uintmax_t depend on __c99, which is only
+   available in C-family compilers.  See irix6_c_common_override_options.  */
+int long_intmax = -1;
+#endif
+
 /* The processor that we should tune the code for.  */
 enum processor mips_tune;
 const struct mips_cpu_info *mips_tune_info;
@@ -5721,6 +5727,9 @@
       layout_type (record);
       return record;
     }
+  else if (TARGET_IRIX6)
+    /* On IRIX 6, this type is 'char *'.  */
+    return build_pointer_type (char_type_node);
   else
     /* Otherwise, we use 'void *'.  */
     return ptr_type_node;
@@ -8714,6 +8723,7 @@
 
   /* Generate a special section to describe the ABI switches used to
      produce the resultant binary.  */
+  if (!TARGET_IRIX6)    {
 
   /* Record the ABI itself.  Modern versions of binutils encode
      this information in the ELF header flags, but GDB needs the
@@ -8754,6 +8764,7 @@
     fprintf (asm_out_file, "\t.gnu_attribute 4, %d\n", attr);
   }
 #endif
+    }
 
   /* If TARGET_ABICALLS, tell GAS to generate -KPIC code.  */
   if (TARGET_ABICALLS)
@@ -16670,6 +16681,10 @@
 	}
     }
 
+#ifdef MIPS_TFMODE_FORMAT
+  REAL_MODE_FORMAT (TFmode) = &MIPS_TFMODE_FORMAT;
+#endif
+
   /* Make sure that the user didn't turn off paired single support when
      MIPS-3D support is requested.  */
   if (TARGET_MIPS3D
diff -N -u -r -w gcc-4.8.2/gcc/config/mips/mips.h gcc-4.8.2-patched/gcc/config/mips/mips.h
--- gcc-4.8.2/gcc/config/mips/mips.h	2013-02-25 13:53:16.000000000 +0000
+++ gcc-4.8.2-patched/gcc/config/mips/mips.h	2019-08-06 13:16:10.733777360 +0000
@@ -157,7 +157,9 @@
 
 /* True if .gpword or .gpdword should be used for switch tables.  */
 #define TARGET_GPWORD				\
-  (TARGET_ABICALLS && !TARGET_ABSOLUTE_ABICALLS)
+  (TARGET_ABICALLS				\
+   && !TARGET_ABSOLUTE_ABICALLS			\
+   && !(mips_abi == ABI_64 && TARGET_IRIX6))
 
 /* True if the output must have a writable .eh_frame.
    See ASM_PREFERRED_EH_DATA_FORMAT for details.  */
diff -N -u -r -w gcc-4.8.2/gcc/config/mips/t-irix6 gcc-4.8.2-patched/gcc/config/mips/t-irix6
--- gcc-4.8.2/gcc/config/mips/t-irix6	2011-06-03 18:16:44.000000000 +0000
+++ gcc-4.8.2-patched/gcc/config/mips/t-irix6	2019-08-06 12:58:54.884544400 +0000
@@ -2,3 +2,7 @@
 MULTILIB_DIRNAMES=n32 64
 MULTILIB_MATCHES=
 MULTILIB_OSDIRNAMES=../lib32 ../lib64
+
+irix6-c.o: $(srcdir)/config/mips/irix6-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \
+  tree.h $(TM_H) $(C_COMMON_H)
+	$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<
diff -N -u -r -w gcc-4.8.2/gcc/config.gcc gcc-4.8.2-patched/gcc/config.gcc
--- gcc-4.8.2/gcc/config.gcc	2013-10-03 01:47:24.000000000 +0000
+++ gcc-4.8.2-patched/gcc/config.gcc	2019-08-06 12:59:44.936226480 +0000
@@ -1782,6 +1782,28 @@
 	cxx_target_objs="${cxx_target_objs} microblaze-c.o"
 	tmake_file="${tmake_file} microblaze/t-microblaze"
         ;;
+mips-sgi-irix6.5*)
+	tm_file="elfos.h ${tm_file} mips/iris6.h"
+	tmake_file="mips/t-irix6 t-slibgcc"
+	c_target_objs="irix6-c.o"
+	cxx_target_objs="irix6-c.o"
+	extra_options="${extra_options} rpath.opt mips/iris6.opt"
+	target_cpu_default="MASK_ABICALLS"
+	tm_defines="${tm_defines} MIPS_ISA_DEFAULT=3 MIPS_ABI_DEFAULT=ABI_N32"
+	# Only IRIX Development Foundation 1.3 for IRIX 6.5 provides stdint.h.
+	use_gcc_stdint=wrap
+	if test "x$stabs" = xyes
+	then
+		tm_file="${tm_file} dbx.h"
+	fi
+	if test "x$gnu_ld" = xyes
+	then
+		tm_defines="${tm_defines} IRIX_USING_GNU_LD"
+	fi
+	case ${enable_threads}:${have_pthread_h} in
+	  "":yes | yes:yes ) thread_file=posix ;;
+	esac
+	;;
 mips*-*-netbsd*)			# NetBSD/mips, either endian.
 	target_cpu_default="MASK_ABICALLS"
 	tm_file="elfos.h ${tm_file} mips/elf.h netbsd.h netbsd-elf.h mips/netbsd.h"
diff -N -u -r -w gcc-4.8.2/gcc/config.host gcc-4.8.2-patched/gcc/config.host
--- gcc-4.8.2/gcc/config.host	2013-01-10 20:38:27.000000000 +0000
+++ gcc-4.8.2-patched/gcc/config.host	2019-08-06 13:02:31.338576720 +0000
@@ -125,9 +125,9 @@
 	;;
     esac
     ;;
-  mips*-*-linux*)
+  mips*-*-linux* | mips-sgi-irix*)
     case ${target} in
-      mips*-*-linux*)
+      mips*-*-linux* | mips-sgi-irix*)
 	host_extra_gcc_objs="driver-native.o"
 	host_xmake_file="${host_xmake_file} mips/x-native"
       ;;
diff -N -u -r -w gcc-4.8.2/gcc/configure gcc-4.8.2-patched/gcc/configure
--- gcc-4.8.2/gcc/configure	2013-06-19 02:18:38.000000000 +0000
+++ gcc-4.8.2-patched/gcc/configure	2019-08-06 13:04:41.264125280 +0000
@@ -7144,8 +7144,17 @@
       ;;
 
     mips*-*-*)
+      case $host in
+	mips*-sgi-irix*)
+	  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: fixed-point is not supported on IRIX, ignored" >&5
+$as_echo "$as_me: WARNING: fixed-point is not supported on IRIX, ignored" >&2;}
+	  enable_fixed_point=no
+	  ;;
+	*)
       enable_fixed_point=yes
       ;;
+      esac
+      ;;
     *)
       { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: fixed-point is not supported for this target, ignored" >&5
 $as_echo "$as_me: WARNING: fixed-point is not supported for this target, ignored" >&2;}
diff -N -u -r -w gcc-4.8.2/gcc/configure.ac gcc-4.8.2-patched/gcc/configure.ac
--- gcc-4.8.2/gcc/configure.ac	2013-06-19 02:18:38.000000000 +0000
+++ gcc-4.8.2-patched/gcc/configure.ac	2019-08-06 13:03:25.851659440 +0000
@@ -672,8 +672,16 @@
       ;;
 
     mips*-*-*)
+      case $host in
+	mips*-sgi-irix*)
+	  AC_MSG_WARN([fixed-point is not supported on IRIX, ignored])
+	  enable_fixed_point=no
+	  ;;
+	*)
       enable_fixed_point=yes
       ;;
+      esac
+      ;;
     *)
       AC_MSG_WARN([fixed-point is not supported for this target, ignored])
       enable_fixed_point=no
@@ -3256,6 +3264,11 @@
   [set_have_as_tls=yes])
 fi
 case "$target" in
+  *-*-irix6*)
+    # IRIX 6.5 rld and libc.so lack TLS support, so even if gas and gld
+    # with TLS support are in use, native TLS cannot work.
+    set_have_as_tls=no
+    ;;
   # TLS was introduced in the Solaris 9 FCS release.  Support for GNU-style
   # TLS on x86 was only introduced in Solaris 9 4/04, replacing the earlier
   # Sun style that Sun ld and GCC don't support any longer.
@@ -3346,6 +3359,10 @@
 	  gcc_cv_ld_dynamic_option="-adefault"
 	fi
 	;;
+      # IRIX 6 ld supports -Bstatic/-Bdynamic.
+      mips-sgi-irix6*)
+        gcc_cv_ld_static_dynamic=yes
+        ;;
       # Solaris 2 ld always supports -Bstatic/-Bdynamic.
       *-*-solaris2*)
         gcc_cv_ld_static_dynamic=yes
diff -N -u -r -w gcc-4.8.2/gcc/dwarf2cfi.c gcc-4.8.2-patched/gcc/dwarf2cfi.c
--- gcc-4.8.2/gcc/dwarf2cfi.c	2013-01-10 20:38:27.000000000 +0000
+++ gcc-4.8.2-patched/gcc/dwarf2cfi.c	2019-08-06 13:05:40.756560320 +0000
@@ -714,6 +714,7 @@
 	cfi->dw_cfi_opc = DW_CFA_def_cfa_offset;
       cfi->dw_cfi_oprnd1.dw_cfi_offset = new_cfa->offset;
     }
+#ifndef SGUG_DEBUGGING_INFO
   else if (new_cfa->offset == old_cfa->offset
 	   && old_cfa->reg != INVALID_REGNUM
 	   && !new_cfa->indirect
@@ -725,6 +726,8 @@
       cfi->dw_cfi_opc = DW_CFA_def_cfa_register;
       cfi->dw_cfi_oprnd1.dw_cfi_reg_num = new_cfa->reg;
     }
+#endif
+
   else if (new_cfa->indirect == 0)
     {
       /* Construct a "DW_CFA_def_cfa <register> <offset>" instruction,
@@ -2694,22 +2697,23 @@
 create_pseudo_cfg (void)
 {
   bool saw_barrier, switch_sections;
-  dw_trace_info ti;
+  dw_trace_info ti1;
+  dw_trace_info* ti = &ti1;
   rtx insn;
   unsigned i;
 
   /* The first trace begins at the start of the function,
      and begins with the CIE row state.  */
   trace_info.create (16);
-  memset (&ti, 0, sizeof (ti));
-  ti.head = get_insns ();
-  ti.beg_row = cie_cfi_row;
-  ti.cfa_store = cie_cfi_row->cfa;
-  ti.cfa_temp.reg = INVALID_REGNUM;
-  trace_info.quick_push (ti);
+  memset (&ti1, 0, sizeof (ti1));
+  ti1.head = get_insns ();
+  ti1.beg_row = cie_cfi_row;
+  ti1.cfa_store = cie_cfi_row->cfa;
+  ti1.cfa_temp.reg = INVALID_REGNUM;
+  ti = trace_info.quick_push (ti1);
 
   if (cie_return_save)
-    ti.regs_saved_in_regs.safe_push (*cie_return_save);
+    ti->regs_saved_in_regs.safe_push (*cie_return_save);
 
   /* Walk all the insns, collecting start of trace locations.  */
   saw_barrier = false;
@@ -2731,11 +2735,12 @@
       else if (save_point_p (insn)
 	       && (LABEL_P (insn) || !saw_barrier))
 	{
-	  memset (&ti, 0, sizeof (ti));
-	  ti.head = insn;
-	  ti.switch_sections = switch_sections;
-	  ti.id = trace_info.length () - 1;
-	  trace_info.safe_push (ti);
+	  dw_trace_info ti2;
+	  memset (&ti2, 0, sizeof (ti2));
+	  ti2.head = insn;
+	  ti2.switch_sections = switch_sections;
+	  ti2.id = trace_info.length ();
+	  ti = trace_info.safe_push (ti2);
 
 	  saw_barrier = false;
 	  switch_sections = false;
@@ -2746,20 +2751,19 @@
      avoiding stale pointer problems due to reallocation.  */
   trace_index = htab_create (trace_info.length (),
 			     dw_trace_info_hash, dw_trace_info_eq, NULL);
-  dw_trace_info *tp;
-  FOR_EACH_VEC_ELT (trace_info, i, tp)
+  FOR_EACH_VEC_ELT (trace_info, i, ti)
     {
       void **slot;
 
       if (dump_file)
 	fprintf (dump_file, "Creating trace %u : start at %s %d%s\n", i,
-		 rtx_name[(int) GET_CODE (tp->head)], INSN_UID (tp->head),
-		 tp->switch_sections ? " (section switch)" : "");
+		 rtx_name[(int) GET_CODE (ti->head)], INSN_UID (ti->head),
+		 ti->switch_sections ? " (section switch)" : "");
 
-      slot = htab_find_slot_with_hash (trace_index, tp,
-				       INSN_UID (tp->head), INSERT);
+      slot = htab_find_slot_with_hash (trace_index, ti,
+				       INSN_UID (ti->head), INSERT);
       gcc_assert (*slot == NULL);
-      *slot = (void *) tp;
+      *slot = (void *) ti;
     }
 }
 
@@ -3318,6 +3322,10 @@
 {
   int enc;
 
+#ifdef SGUG_DEBUGGING_INFO
+  return false;
+#endif
+
   if (saved_do_cfi_asm != 0)
     return saved_do_cfi_asm > 0;
 
diff -N -u -r -w gcc-4.8.2/gcc/dwarf2out.c gcc-4.8.2-patched/gcc/dwarf2out.c
--- gcc-4.8.2/gcc/dwarf2out.c	2013-03-21 21:24:47.000000000 +0000
+++ gcc-4.8.2-patched/gcc/dwarf2out.c	2019-08-06 13:14:54.667466800 +0000
@@ -883,6 +883,12 @@
 
   if (for_eh && targetm.terminate_dw2_eh_frame_info)
     dw2_asm_output_data (4, 0, "End of Table");
+#ifdef SGUG_DEBUGGING_INFO
+  /* Work around Irix 6 assembler bug whereby labels at the end of a section
+     get a value of 0.  Putting .align 0 after the label fixes it.  */
+  ASM_OUTPUT_ALIGN (asm_out_file, 0);
+#endif
+
 
   /* Turn off app to make assembly quicker.  */
   if (flag_debug_asm)
@@ -14594,7 +14600,15 @@
 	  /* The DWARF2 standard says that we should assume that the structure
 	     address is already on the stack, so we can specify a structure
 	     field address by using DW_OP_plus_uconst.  */
+#ifdef SGUG_DEBUGGING_INFO
+	  /* ??? The SGI dwarf reader does not handle the DW_OP_plus_uconst
+	     operator correctly.  It works only if we leave the offset on the
+	     stack.  */
+	  op = DW_OP_constu;
+#else
 	  op = DW_OP_plus_uconst;
+#endif
+
 	  loc_descr = new_loc_descr (op, offset, 0);
 	}
     }
@@ -16660,6 +16674,17 @@
       return;
     }
 
+  /* ??? The SGI dwarf reader fails for array of array of enum types
+     (e.g. const enum machine_mode insn_operand_mode[2][10]) unless the inner
+     array type comes before the outer array type.  We thus call gen_type_die
+     before we new_die and must prevent nested array types collapsing for this
+     target.  */
+
+#ifdef SGUG_DEBUGGING_INFO
+  gen_type_die (TREE_TYPE (type), context_die);
+  collapse_nested_arrays = false;
+#endif
+
   array_die = new_die (DW_TAG_array_type, scope_die, type);
   add_name_attribute (array_die, type_tag (type));
   equate_type_number_to_die (type, array_die);
@@ -16684,6 +16709,14 @@
      for multidimensional arrays.  */
   add_AT_unsigned (array_die, DW_AT_ordering, DW_ORD_row_major);
 #endif
+#ifdef SGUG_DEBUGGING_INFO
+  /* The SGI compilers handle arrays of unknown bound by setting
+     AT_declaration and not emitting any subrange DIEs.  */
+  if (TREE_CODE (type) == ARRAY_TYPE
+      && ! TYPE_DOMAIN (type))
+    add_AT_flag (array_die, DW_AT_declaration, 1);
+  else
+#endif
 
   if (TREE_CODE (type) == VECTOR_TYPE)
     {
@@ -16707,6 +16740,10 @@
 	element_type = TREE_TYPE (element_type);
       }
 
+#ifndef SGUG_DEBUGGING_INFO
+  gen_type_die (element_type, context_die);
+#endif
+
   add_type_attribute (array_die, element_type, 0, 0, context_die);
 
   add_gnat_descriptive_type_attribute (array_die, type, context_die);
@@ -17860,6 +17897,11 @@
                                false);
 	}
 
+#ifdef SGUG_DEBUGGING_INFO
+      /* Add a reference to the FDE for this routine.  */
+      add_AT_fde_ref (subr_die, DW_AT_MIPS_fde, cfun->fde->fde_index);
+#endif
+
       cfa_fb_offset = CFA_FRAME_BASE_OFFSET (decl);
 
       /* We define the "frame base" as the function's CFA.  This is more
@@ -18840,6 +18882,24 @@
   sprintf (tail, "%s %s", language_string, version_string);
   tail += plen;
 
+  if (!dwarf_record_gcc_switches)
+    {
+#ifdef SGUG_DEBUGGING_INFO
+      /* The MIPS/SGI compilers place the 'cc' command line options in the
+	 producer string.  The SGI debugger looks for -g, -g1, -g2, or -g3;
+	 if they do not appear in the producer string, the debugger reaches
+	 the conclusion that the object file is stripped and has no debugging
+	 information.  To get the MIPS/SGI debugger to believe that there is
+	 debugging information in the object file, we add a -g to the producer
+	 string.  */
+      if (debug_info_level > DINFO_LEVEL_TERSE)
+	{
+	  memcpy (tail, " -g", 3);
+	  tail += 3;
+	}
+#endif
+    }
+
   FOR_EACH_VEC_ELT (switches, j, p)
     {
       len = strlen (p);
diff -N -u -r -w gcc-4.8.2/libgcc/config/mips/irix-crti.S gcc-4.8.2-patched/libgcc/config/mips/irix-crti.S
--- gcc-4.8.2/libgcc/config/mips/irix-crti.S	1970-01-01 00:00:00.000000000 +0000
+++ gcc-4.8.2-patched/libgcc/config/mips/irix-crti.S	2019-08-06 12:58:54.896430480 +0000
@@ -0,0 +1,71 @@
+/* Copyright (C) 2004, 2008, 2011 Free Software Foundation, Inc.
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify it under
+the terms of the GNU General Public License as published by the Free
+Software Foundation; either version 3, or (at your option) any later
+version.
+
+GCC is distributed in the hope that it will be useful, but WITHOUT ANY
+WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+Under Section 7 of GPL version 3, you are granted additional
+permissions described in the GCC Runtime Library Exception, version
+3.1, as published by the Free Software Foundation.
+
+You should have received a copy of the GNU General Public License and
+a copy of the GCC Runtime Library Exception along with this program;
+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+<http://www.gnu.org/licenses/>.  */
+
+	.abicalls
+	.set	noreorder
+	.set	nomacro
+
+/* The GNU and SGI linkers differ in their implementation of -init and -fini.
+   With the GNU linker, there can only be a single -init option, and the
+   linker simply sets DT_INIT to that value.  gcc's initialization and
+   finalization code can go directly in .init, with the prologue and
+   epilogue of the main initialization routine being provided by external
+   object files (*crti.o and *crtn.o in this case).
+
+   The SGI linker instead accepts several -init options.  It will set DT_INIT
+   to a linker-created function (placed in .init) that calls each of the -init
+   functions in turn.  If there is any user code in .init, this linker-created
+   function will be placed after it.  Note that such user code is not treated
+   specially; it will only be called if the -init options arrange for it to
+   be called.
+
+   In theory, the SGI model should allow the crti, crtn and intermediate code
+   to go in .init, just like it can with the GNU linker.  However, doing this
+   seems to confuse the linker and triggers an internal error:
+
+      ld32: FATAL   2  : Internal: at ../../ld/mips_code.c mips_code_fixup()
+	 text section overflow!
+
+   (seen with MIPSpro 7.30).  We therefore put everything in a special
+   .gcc_init section instead.  */
+
+	.section .gcc_init,"ax",@progbits
+	.globl	__gcc_init
+__gcc_init:
+	daddiu	$sp,$sp,-16
+	sd	$31,0($sp)
+	sd	$28,8($sp)
+
+	.section .gcc_fini,"ax",@progbits
+	.globl	__gcc_fini
+__gcc_fini:
+	daddiu	$sp,$sp,-16
+	sd	$31,0($sp)
+	sd	$28,8($sp)
+
+/* This object will typically be included in the final link for both
+   shared libraries and executable, and we need to hide the symbols to
+   prevent possible symbol preemption warnings from the SGI linker.  */
+.hidden __gcc_init
+.hidden __gcc_fini
+
diff -N -u -r -w gcc-4.8.2/libgcc/config/mips/irix-crtn.S gcc-4.8.2-patched/libgcc/config/mips/irix-crtn.S
--- gcc-4.8.2/libgcc/config/mips/irix-crtn.S	1970-01-01 00:00:00.000000000 +0000
+++ gcc-4.8.2-patched/libgcc/config/mips/irix-crtn.S	2019-08-06 12:58:54.898345680 +0000
@@ -0,0 +1,38 @@
+/* Copyright (C) 2004, 2011 Free Software Foundation, Inc.
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify it under
+the terms of the GNU General Public License as published by the Free
+Software Foundation; either version 3, or (at your option) any later
+version.
+
+GCC is distributed in the hope that it will be useful, but WITHOUT ANY
+WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+Under Section 7 of GPL version 3, you are granted additional
+permissions described in the GCC Runtime Library Exception, version
+3.1, as published by the Free Software Foundation.
+
+You should have received a copy of the GNU General Public License and
+a copy of the GCC Runtime Library Exception along with this program;
+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+<http://www.gnu.org/licenses/>.  */
+
+	.abicalls
+	.set	noreorder
+	.set	nomacro
+
+	.section .gcc_init,"ax",@progbits
+	ld	$31,0($sp)
+	ld	$28,8($sp)
+	jr	$31
+	daddiu	$sp,$sp,16
+
+	.section .gcc_fini,"ax",@progbits
+	ld	$31,0($sp)
+	ld	$28,8($sp)
+	jr	$31
+	daddiu	$sp,$sp,16
diff -N -u -r -w gcc-4.8.2/libgcc/config/mips/irix6-unwind.h gcc-4.8.2-patched/libgcc/config/mips/irix6-unwind.h
--- gcc-4.8.2/libgcc/config/mips/irix6-unwind.h	1970-01-01 00:00:00.000000000 +0000
+++ gcc-4.8.2-patched/libgcc/config/mips/irix6-unwind.h	2019-08-06 12:58:54.900397360 +0000
@@ -0,0 +1,180 @@
+/* DWARF2 EH unwinding support for MIPS IRIX 6.
+   Copyright (C) 2011 Free Software Foundation, Inc.
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 3, or (at your option)
+any later version.
+
+GCC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+Under Section 7 of GPL version 3, you are granted additional
+permissions described in the GCC Runtime Library Exception, version
+3.1, as published by the Free Software Foundation.
+
+You should have received a copy of the GNU General Public License and
+a copy of the GCC Runtime Library Exception along with this program;
+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+<http://www.gnu.org/licenses/>.  */
+
+/* Do code reading to identify a signal frame, and set the frame
+   state data appropriately.  See unwind-dw2.c for the structs.  */
+
+/* This code was developed-for and only tested-in limited ABI
+   configurations.  Characterize that.  */
+
+#if defined (_ABIN32) || defined (_ABI64)
+#define SUPPORTED_ABI 1
+#else
+#define SUPPORTED_ABI 0
+#endif
+
+#include <signal.h>
+
+#define MD_FALLBACK_FRAME_STATE_FOR mips_fallback_frame_state
+
+/* Look at the code around RA to see if it matches a sighandler caller with a
+   sigcontext_t * argument (SA_SIGINFO cleared).  Return that pointer argument
+   if it does match, or 0 otherwise.  */
+
+static sigcontext_t *
+sigcontext_for (unsigned int *ra, void *cfa)
+{
+  /* IRIX 6.5, mono-threaded application.  We're lucky enough to be able
+     to expect a short very sighandler specific sequence around.
+
+     <_sigtramp+124>:	li	v0,1088 (SYS_sigreturn)
+     <_sigtramp+128>:	syscall  */
+
+  if (   ra[6] == 0x24020440
+      && ra[7] == 0x0000000c)
+    return (sigcontext_t *)(cfa + 0x30);
+
+  /* IRIX 6.5 variants, multi-threaded application, pthreads.  Nothing really
+     sighandler specific handy, so match a fairly long constant sequence.  */
+
+#if _MIPS_SIM == _ABIN32
+  /* 
+     <sig_fixup_mask+40>:	sd	s0,0(sp)
+     <sig_fixup_mask+44>:	sll	ra,a0,0x2
+     <sig_fixup_mask+48>:	addiu	t9,t9,-28584/-28456/-28448
+     <sig_fixup_mask+52>:	lw	s0,3804(at)
+     <sig_fixup_mask+56>:	addu	t9,t9,ra
+     <sig_fixup_mask+60>:	lw	t9,0(t9)
+     <sig_fixup_mask+64>:	ld	at,3696(at)
+     <sig_fixup_mask+68>:	ld	s2,88(s0)
+     <sig_fixup_mask+72>:	jalr	t9
+     <sig_fixup_mask+76>:	sd	at,88(s0)  */
+   if (   ra[-10] == 0xffb00000
+      && ra[ -9] == 0x0004f880
+      && (ra[-8] == 0x27399058
+	  || ra[-8] == 0x273990d8
+	  || ra[-8] == 0x273990e0)
+      && ra[ -7] == 0x8c300edc
+      && ra[ -6] == 0x033fc821
+      && ra[ -5] == 0x8f390000
+      && ra[ -4] == 0xdc210e70
+      && ra[ -3] == 0xde120058
+      && ra[ -2] == 0x0320f809
+      && ra[ -1] == 0xfe010058)
+
+#elif _MIPS_SIM == _ABI64
+  /* 
+     <sig_fixup_mask+44>:	sd	s0,0(sp)
+     <sig_fixup_mask+48>:	daddu	t9,t9,ra
+     <sig_fixup_mask+52>:	dsll	ra,a0,0x3
+     <sig_fixup_mask+56>:	ld	s0,3880(at)
+     <sig_fixup_mask+60>:	daddu	t9,t9,ra
+     <sig_fixup_mask+64>:	ld	t9,0(t9)
+     <sig_fixup_mask+68>:	ld	at,3696(at)
+     <sig_fixup_mask+72>:	ld	s2,152(s0)
+     <sig_fixup_mask+76>:	jalr	t9
+     <sig_fixup_mask+80>:	sd	at,152(s0)  */
+  if (   ra[-10] == 0xffb00000
+      && ra[ -9] == 0x033fc82d
+      && ra[ -8] == 0x0004f8f8
+      && ra[ -7] == 0xdc300f28
+      && ra[ -6] == 0x033fc82d
+      && ra[ -5] == 0xdf390000
+      && ra[ -4] == 0xdc210e70
+      && ra[ -3] == 0xde120098
+      && ra[ -2] == 0x0320f809
+      && ra[ -1] == 0xfe010098)
+#endif
+    return (sigcontext_t *)(cfa + 0x60);
+
+  return 0;
+}
+
+#define SIGCTX_GREG_ADDR(REGNO,SIGCTX) \
+  ((void *) &(SIGCTX)->sc_regs[REGNO])
+
+#define SIGCTX_FPREG_ADDR(REGNO,SIGCTX) \
+  ((void *) &(SIGCTX)->sc_fpregs[REGNO])
+
+static _Unwind_Reason_Code
+mips_fallback_frame_state (struct _Unwind_Context *context,
+			   _Unwind_FrameState *fs)
+{
+  /* Return address and CFA of the frame we're attempting to unwind through,
+     possibly a signal handler.  */
+  void *ctx_ra  = (void *)context->ra;
+  void *ctx_cfa = (void *)context->cfa;
+
+  /* CFA of the intermediate abstract kernel frame between the interrupted
+     code and the signal handler, if we're indeed unwinding through a signal
+     handler.  */
+  void *k_cfa;
+
+  /* Pointer to the sigcontext_t structure pushed by the kernel when we're
+     unwinding through a signal handler setup with SA_SIGINFO cleared.  */
+  sigcontext_t *sigctx;
+  int i;
+
+  if (! SUPPORTED_ABI)
+    return _URC_END_OF_STACK;
+    
+  sigctx = sigcontext_for (ctx_ra, ctx_cfa);
+
+  if (sigctx == 0)
+    return _URC_END_OF_STACK;
+
+  /* The abstract kernel frame's CFA is extactly the stack pointer
+     value at the interruption point.  */
+  k_cfa = *(void **)SIGCTX_GREG_ADDR (CTX_SP, sigctx);
+
+  /* State the rules to compute the CFA we have the value of: use the
+     previous CFA and offset by the difference between the two.  See
+     uw_update_context_1 for the supporting details.  */
+  fs->regs.cfa_how = CFA_REG_OFFSET;
+  fs->regs.cfa_reg = __builtin_dwarf_sp_column ();
+  fs->regs.cfa_offset = k_cfa - ctx_cfa;
+
+  /* Fill the internal frame_state structure with information stating where
+     each register of interest can be found from the CFA.  */
+  for (i = 0; i <= 31; i ++)
+    {
+      fs->regs.reg[i].how = REG_SAVED_OFFSET;
+      fs->regs.reg[i].loc.offset = SIGCTX_GREG_ADDR (i, sigctx) - k_cfa;
+    }
+
+  for (i = 0; i <= 31; i ++)
+    {
+      fs->regs.reg[32+i].how = REG_SAVED_OFFSET;
+      fs->regs.reg[32+i].loc.offset = SIGCTX_FPREG_ADDR (i, sigctx) - k_cfa;
+    }
+
+  /* State the rules to find the kernel's code "return address", which is the
+     address of the active instruction when the signal was caught.  */
+  fs->retaddr_column = DWARF_FRAME_RETURN_COLUMN;
+  fs->regs.reg[fs->retaddr_column].how = REG_SAVED_OFFSET;
+  fs->regs.reg[fs->retaddr_column].loc.offset = (void *)&sigctx->sc_pc - k_cfa;
+  fs->signal_frame = 1;
+
+  return _URC_NO_REASON;
+}
diff -N -u -r -w gcc-4.8.2/libgcc/config/mips/t-irix6 gcc-4.8.2-patched/libgcc/config/mips/t-irix6
--- gcc-4.8.2/libgcc/config/mips/t-irix6	1970-01-01 00:00:00.000000000 +0000
+++ gcc-4.8.2-patched/libgcc/config/mips/t-irix6	2019-08-06 12:58:54.903326160 +0000
@@ -0,0 +1,24 @@
+# Copyright (C) 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005,
+# 2006, 2010, 2011 Free Software Foundation, Inc.
+#
+# This file is part of GCC.
+#
+# GCC is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 3, or (at your option)
+# any later version.
+#
+# GCC is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with GCC; see the file COPYING3.  If not see
+# <http://www.gnu.org/licenses/>.
+
+irix-crti.o: $(srcdir)/config/mips/irix-crti.S
+	$(crt_compile) -c $<
+
+irix-crtn.o: $(srcdir)/config/mips/irix-crtn.S
+	$(crt_compile) -c $<
diff -N -u -r -w gcc-4.8.2/libgcc/config/mips/t-slibgcc-irix gcc-4.8.2-patched/libgcc/config/mips/t-slibgcc-irix
--- gcc-4.8.2/libgcc/config/mips/t-slibgcc-irix	1970-01-01 00:00:00.000000000 +0000
+++ gcc-4.8.2-patched/libgcc/config/mips/t-slibgcc-irix	2019-08-06 12:58:54.905254640 +0000
@@ -0,0 +1,9 @@
+# Build a shared libgcc library with the SGI linker.
+
+SHLIB_LDFLAGS = -Wl,-soname,$(SHLIB_SONAME) 
+#\
+	#-Wl,-exports_file,$(SHLIB_MAP)
+
+SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk
+SHLIB_MAPFILES = libgcc-std.ver
+SHLIB_LC =
diff -N -u -r -w gcc-4.8.2/libgcc/config.host gcc-4.8.2-patched/libgcc/config.host
--- gcc-4.8.2/libgcc/config.host	2013-07-09 22:35:57.000000000 +0000
+++ gcc-4.8.2-patched/libgcc/config.host	2019-08-06 13:16:38.920688160 +0000
@@ -718,6 +718,11 @@
 	tmake_file="${tmake_file} microblaze/t-microblaze t-fdpbit"
 	extra_parts="$extra_parts crtbeginS.o crtendS.o crtbeginT.o crti.o crtn.o"
 	;;
+mips-sgi-irix6.5*)
+	tmake_file="$tmake_file mips/t-irix6 t-crtfm mips/t-tpbit t-slibgcc mips/t-slibgcc-irix"
+	extra_parts="crtbegin.o crtend.o crtfastmath.o irix-crti.o irix-crtn.o"
+	md_unwind_header=mips/irix6-unwind.h
+	;;
 mips*-*-netbsd*)			# NetBSD/mips, either endian.
 	;;
 mips*-*-linux*)				# Linux MIPS, either endian.
diff -N -u -r -w gcc-4.8.2/libstdc++-v3/config/os/irix/atomic_word.h gcc-4.8.2-patched/libstdc++-v3/config/os/irix/atomic_word.h
--- gcc-4.8.2/libstdc++-v3/config/os/irix/atomic_word.h	1970-01-01 00:00:00.000000000 +0000
+++ gcc-4.8.2-patched/libstdc++-v3/config/os/irix/atomic_word.h	2019-08-06 12:58:54.919046640 +0000
@@ -0,0 +1,35 @@
+// Low-level type for atomic operations -*- C++ -*-
+
+// Copyright (C) 2004, 2009, 2010 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+/** @file bits/atomic_word.h
+ *  This is an internal header file, included by other library headers.
+ *  Do not attempt to use it directly. @headername{ext/atomicity.h}
+ */
+
+#ifndef _GLIBCXX_ATOMIC_WORD_H
+#define _GLIBCXX_ATOMIC_WORD_H	1
+
+typedef long _Atomic_word;
+
+#endif 
diff -N -u -r -w gcc-4.8.2/libstdc++-v3/config/os/irix/atomicity.h gcc-4.8.2-patched/libstdc++-v3/config/os/irix/atomicity.h
--- gcc-4.8.2/libstdc++-v3/config/os/irix/atomicity.h	1970-01-01 00:00:00.000000000 +0000
+++ gcc-4.8.2-patched/libstdc++-v3/config/os/irix/atomicity.h	2019-08-06 12:58:54.920805440 +0000
@@ -0,0 +1,41 @@
+// Low-level functions for atomic operations: IRIX version  -*- C++ -*-
+
+// Copyright (C) 2001, 2004, 2005, 2009 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#include <mutex.h>
+#include <ext/atomicity.h>
+
+namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  _Atomic_word
+  __exchange_and_add(volatile _Atomic_word* __mem, int __val) throw ()
+  { return (_Atomic_word) test_then_add((unsigned long*) const_cast<_Atomic_word*>(__mem), __val); }
+
+  void
+  __atomic_add(volatile _Atomic_word* __mem, int __val) throw ()
+  { __exchange_and_add(__mem, __val); }
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
diff -N -u -r -w gcc-4.8.2/libstdc++-v3/config/os/irix/irix6.5/ctype_base.h gcc-4.8.2-patched/libstdc++-v3/config/os/irix/irix6.5/ctype_base.h
--- gcc-4.8.2/libstdc++-v3/config/os/irix/irix6.5/ctype_base.h	1970-01-01 00:00:00.000000000 +0000
+++ gcc-4.8.2-patched/libstdc++-v3/config/os/irix/irix6.5/ctype_base.h	2019-08-06 12:58:54.923218960 +0000
@@ -0,0 +1,65 @@
+// Locale support -*- C++ -*-
+
+// Copyright (C) 1997, 1998, 1999, 2003, 2009, 2010
+// Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+/** @file bits/ctype_base.h
+ *  This is an internal header file, included by other library headers.
+ *  Do not attempt to use it directly. @headername{locale}
+ */
+
+//
+// ISO C++ 14882: 22.1  Locales
+//
+
+// Information as gleaned from /usr/include/ctype.h on irix 6.5
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  /// @brief  Base class for ctype.
+  struct ctype_base
+  {
+    // Non-standard typedefs.
+    typedef int* 		__to_type;
+
+    // NB: Offsets into ctype<char>::_M_table force a particular size
+    // on the mask type. Because of this, we don't use an enum.
+    typedef unsigned int 	mask;
+    static const mask upper    	= _ISupper;
+    static const mask lower 	= _ISlower;
+    static const mask alpha 	= _ISalpha;
+    static const mask digit 	= _ISdigit;
+    static const mask xdigit 	= _ISxdigit;
+    static const mask space 	= _ISspace;
+    static const mask print 	= _ISprint;
+    static const mask graph 	= _ISalpha | _ISdigit | _ISpunct;
+    static const mask cntrl 	= _IScntrl;
+    static const mask punct 	= _ISpunct;
+    static const mask alnum 	= _ISalpha | _ISdigit;
+    static const mask blank	= _ISblank;
+  };
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
diff -N -u -r -w gcc-4.8.2/libstdc++-v3/config/os/irix/irix6.5/ctype_configure_char.cc gcc-4.8.2-patched/libstdc++-v3/config/os/irix/irix6.5/ctype_configure_char.cc
--- gcc-4.8.2/libstdc++-v3/config/os/irix/irix6.5/ctype_configure_char.cc	1970-01-01 00:00:00.000000000 +0000
+++ gcc-4.8.2-patched/libstdc++-v3/config/os/irix/irix6.5/ctype_configure_char.cc	2019-08-06 12:58:54.924995040 +0000
@@ -0,0 +1,101 @@
+// Locale support -*- C++ -*-
+
+// Copyright (C) 2011 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+/** @file ctype_configure_char.cc */
+
+//
+// ISO C++ 14882: 22.1  Locales
+//
+
+#include <locale>
+#include <cstdlib>
+#include <cstring>
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+// Information as gleaned from /usr/include/ctype.h
+
+  const ctype_base::mask*
+  ctype<char>::classic_table() throw()
+  { return 0; }
+
+  ctype<char>::ctype(__c_locale, const mask* __table, bool __del,
+		     size_t __refs)
+  : facet(__refs), _M_del(__table != 0 && __del),
+  _M_toupper(NULL), _M_tolower(NULL),
+  _M_table(!__table ?
+	   (const mask*) (__libc_attr._ctype_tbl->_class + 1) : __table)
+  {
+    memset(_M_widen, 0, sizeof(_M_widen));
+    _M_widen_ok = 0;
+    memset(_M_narrow, 0, sizeof(_M_narrow));
+    _M_narrow_ok = 0;
+  }
+
+  ctype<char>::ctype(const mask* __table, bool __del, size_t __refs)
+  : facet(__refs), _M_del(__table != 0 && __del),
+  _M_toupper(NULL), _M_tolower(NULL),
+  _M_table(!__table ?
+	   (const mask*) (__libc_attr._ctype_tbl->_class + 1) : __table)
+  {
+    memset(_M_widen, 0, sizeof(_M_widen));
+    _M_widen_ok = 0;
+    memset(_M_narrow, 0, sizeof(_M_narrow));
+    _M_narrow_ok = 0;
+  }
+
+  char
+  ctype<char>::do_toupper(char __c) const
+  { return _toupper(__c); }
+
+  const char*
+  ctype<char>::do_toupper(char* __low, const char* __high) const
+  {
+    while (__low < __high)
+      {
+	*__low = do_toupper(*__low);
+	++__low;
+      }
+    return __high;
+  }
+
+  char
+  ctype<char>::do_tolower(char __c) const
+  { return _tolower(__c); }
+
+  const char*
+  ctype<char>::do_tolower(char* __low, const char* __high) const
+  {
+    while (__low < __high)
+      {
+	*__low = do_tolower(*__low);
+	++__low;
+      }
+    return __high;
+  }
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
diff -N -u -r -w gcc-4.8.2/libstdc++-v3/config/os/irix/irix6.5/ctype_inline.h gcc-4.8.2-patched/libstdc++-v3/config/os/irix/irix6.5/ctype_inline.h
--- gcc-4.8.2/libstdc++-v3/config/os/irix/irix6.5/ctype_inline.h	1970-01-01 00:00:00.000000000 +0000
+++ gcc-4.8.2-patched/libstdc++-v3/config/os/irix/irix6.5/ctype_inline.h	2019-08-06 12:58:54.926740160 +0000
@@ -0,0 +1,74 @@
+// Locale support -*- C++ -*-
+
+// Copyright (C) 2000, 2002, 2009, 2010 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+/** @file bits/ctype_inline.h
+ *  This is an internal header file, included by other library headers.
+ *  Do not attempt to use it directly. @headername{locale}
+ */
+
+//
+// ISO C++ 14882: 22.1  Locales
+//
+
+// ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)
+// functions go in ctype.cc
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  bool
+  ctype<char>::
+  is(mask __m, char __c) const
+  { return (_M_table)[static_cast<unsigned char>(__c)] & __m; }
+
+  const char*
+  ctype<char>::
+  is(const char* __low, const char* __high, mask* __vec) const
+  {
+    while (__low < __high)
+      *__vec++ = (_M_table)[static_cast<unsigned char>(*__low++)];
+    return __high;
+  }
+
+  const char*
+  ctype<char>::
+  scan_is(mask __m, const char* __low, const char* __high) const
+  {
+    while (__low < __high && ! this->is(__m, *__low))
+      ++__low;
+    return __low;
+  }
+
+  const char*
+  ctype<char>::
+  scan_not(mask __m, const char* __low, const char* __high) const
+  {
+    while (__low < __high && this->is(__m, *__low))
+      ++__low;
+    return __low;
+  }
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
diff -N -u -r -w gcc-4.8.2/libstdc++-v3/config/os/irix/irix6.5/os_defines.h gcc-4.8.2-patched/libstdc++-v3/config/os/irix/irix6.5/os_defines.h
--- gcc-4.8.2/libstdc++-v3/config/os/irix/irix6.5/os_defines.h	1970-01-01 00:00:00.000000000 +0000
+++ gcc-4.8.2-patched/libstdc++-v3/config/os/irix/irix6.5/os_defines.h	2019-08-06 12:58:54.928484640 +0000
@@ -0,0 +1,60 @@
+// Specific definitions for IRIX  -*- C++ -*-
+
+// Copyright (C) 2000, 2002, 2009, 2010 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+/** @file bits/os_defines.h
+ *  This is an internal header file, included by other library headers.
+ *  Do not attempt to use it directly. @headername{iosfwd}
+ */
+
+#ifndef _GLIBCXX_OS_DEFINES
+#define _GLIBCXX_OS_DEFINES 1
+
+// System-specific #define, typedefs, corrections, etc, go here.  This
+// file will come before all others.
+
+#define _GLIBCXX_USE_C99 1
+#define _GLIBCXX_USE_C99_STDIO 1
+#define _GLIBCXX_USE_C99_STDLIB 1
+#define _GLIBCXX_USE_C99_WCHAR 1
+#define _GLIBCXX_USE_WCHAR_T 1
+
+// We need large file support.  There are two ways to turn it on: by
+// defining either _LARGEFILE64_SOURCE or _SGI_SOURCE.  However, it
+// does not actually work to define only the former, as then
+// <sys/stat.h> is invalid: `st_blocks' is defined to be a macro, but
+// then used as a field name.  So, we have to turn on _SGI_SOURCE.
+// That only works if _POSIX_SOURCE is turned off, so we have to
+// explicitly turn it off.  (Some of the libio C files explicitly try
+// to turn it on.)  _SGI_SOURCE is actually turned on implicitly via
+// the command-line.
+#undef _POSIX_SOURCE
+
+// GCC does not use thunks on IRIX. 
+#define _G_USING_THUNKS 0
+
+// FINOREAD takes an "off_t *" as argument.
+#define _GLIBCXX_FIONREAD_TAKES_OFF_T
+
+#endif
+
diff -N -u -r -w gcc-4.8.2/libstdc++-v3/configure.host gcc-4.8.2-patched/libstdc++-v3/configure.host
--- gcc-4.8.2/libstdc++-v3/configure.host	2013-06-19 02:18:38.000000000 +0000
+++ gcc-4.8.2-patched/libstdc++-v3/configure.host	2019-08-06 13:19:03.496735600 +0000
@@ -275,6 +275,15 @@
   hpux*)
     os_include_dir="os/hpux"
     ;;
+  irix6.5*)
+    os_include_dir="os/irix/irix6.5"
+    atomicity_dir=os/irix
+    atomic_word_dir=os/irix
+    # libstdc++.so relies on emutls on IRIX, which only works with the
+    # real functions implemented in libpthread.so, not with the stubs in
+    # libc, so always pass -lpthread.
+    OPT_LDFLAGS="${OPT_LDFLAGS} -lpthread"
+    ;;
   mingw32*)
     case "$host" in
       *-w64-*)
